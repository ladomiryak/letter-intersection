{"version":3,"sources":["../../.config/yarn/global/node_modules/process/browser.js","app1.js","node_modules/paper/dist/paper-core.js","../../.config/yarn/global/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","paper","canvas","document","getElementById","values","friction","amount","count","invMass","Spring","restLength","strength","mamb","update","delta","dist","normDistStrength","require","Base","Path","describe","Object","getOwnPropertyDescriptor","forEach","forIn","py","y","assign","key","src","path","position","x","view","remove","size","desc","onMouseMove","location","bind","event","point","val","previous","res","define","inject","preserve","statics","extend","proto","obj","ctor","enumerable","iter","clone","set","each","create","isPlainObject","pick","slice","_id","join","getClassName","importJSON","exportJSON","serialize","exclude","beans","equals","obj1","obj2","list","__index","readIndex","filtered","__filtered","peek","hasValue","readSupported","source","getSource","that","read","keys","dest","value","readNamed","undefined","__source","getNamed","hasNamed","filter","processed","handleKey","prioritize","__unfiltered","isPlainValue","options","isRoot","dictionary","formatter","Formatter","definitions","references","add","ref","id","_serialize","unshift","compact","precision","deserialize","hasDictionary","isFirst","json","_data","isArray","type","_isRoot","_setDictionary","useTarget","arg","insert","startLength","itemsLength","splice","index","append","items","removed","_index","capitalize","str","replace","toUpperCase","camelize","chr","Emitter","func","entry","types","handlers","_callbacks","indexOf","_eventTypes","handler","setTarget","currentTarget","detach","fire","_installEvents","install","events","isString","part","substring","toLowerCase","prev","PaperScope","initialize","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","_scopes","support","nativeDash","nativeBlendModes","BlendMode","nativeModes","CanvasProvider","release","os","platform","agent","chrome","versionNumber","trident","n","getView","getPaper","execute","code","scope","configurable","get","createCanvas","getCanvas","width","height","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","activate","_scope","_reference","CollisionDetection","findItemBoundsCollisions","getBounds","rect","bounds","left","findCurveBoundsCollisions","curves","min","Math","max","bounds1","bounds2","curves2","findBoundsCollisions","ver","hor","boundsB","allBounds","binarySearch","lo","hi","indices","mid","coord","pri0","sweepVertical","pri1","allIndicesByPri0","sort","lengthAll","curIndex","isCurrentA","isCurrentB","self","curCollisions","activeIndicesByPri1","pruneCount","activeIndex","allCollisions","curSec0","curBounds","sec0","j","activeBounds","isActiveA","isActiveB","onlySweepAxisCollisions","curPri1","collisions","i1","multiplier","round","val1","val2","separator","number","rectangle","instance","Numerical","abscissas","weights","abs","sqrt","pow","EPSILON","MACHINE_EPSILON","clamp","getDiscriminant","b","bd","cd","split","dp","q","dq","ad","p","norm","CURVETIME_EPSILON","GEOMETRIC_EPSILON","TRIGONOMETRIC_EPSILON","KAPPA","isZero","isMachineZero","integrate","w","sum","findRoot","tolerance","dx","nx","a","solveQuadratic","x2","x1","getNormalizationFactor","c","R","boundless","maxB","solveCubic","b1","c2","qd","d","Infinity","evaluate","td","rd","x0","isFinite","_pools","pool","Point","_readIndex","arg0","_set","hasY","reading","setAngle","angle","__read","f","sin","getLength","getAngleInRadians","setAngleInRadians","getAngleInDegrees","acos","cos","getQuadrant","getDirectedAngle","atan2","getDistance","squared","normalize","current","scale","center","transform","matrix","subtract","multiply","divide","modulo","negate","isInside","Rectangle","isClose","isCollinear","isColinear","isOrthogonal","isNaN","isInQuadrant","point1","point2","LinkedPoint","_owner","_setter","_x","_y","isSelected","setSelected","_getSelection","Size","hasHeight","arg1","toString","size1","random","op","LinkedSize","_width","_height","setter","_dontNotify","getWidth","getHeight","setHeight","_class","arg2","arg3","from","frm","next","rt","getPoint","_dontLink","setPoint","getSize","_fw","_fh","setSize","sy","getLeft","setLeft","getTop","setTop","getRight","setRight","_sx","getBottom","setBottom","bottom","getCenterX","getCenterY","_sy","setCenterX","getArea","isEmpty","contains","_containsPoint","_containsRectangle","intersects","intersect","y2","unite","include","expand","xFirst","parts","getX","setY","setX","LinkedRectangle","internal","selected","owner","_changeSelection","Matrix","_a","_c","ok","_b","tx","getValues","_changed","reset","_d","recursively","translate","readNull","rotate","PI","_tx","_ty","shear","skew","mx","c1","d2","tx2","prepend","d1","ty1","a2","ty2","a1","appended","prepended","invert","ty","det","inverted","concatenate","preConcatenate","chain","_shiftless","_orNullIfIdentity","isIdentity","isInvertible","isSingular","_transformPoint","dst","_transformCorners","y1","coords","_transformBounds","inverseTransform","_inverseTransform","decompose","degrees","r","s","translation","scaling","skewing","getTranslation","getScaling","getRotation","rotation","applyToContext","prop","Line","asVector","_px","_vy","_py","_vx","getVector","getSide","getSignedDistance","line","v1x","p1x","v1y","p1y","v2x","p2x","v2y","p2y","cross","isInfinite","u1","px","vx","vy","ccw","Project","_list","_compactSerialize","element","_children","_currentStyle","_selectionItems","_selectionCount","_updateVersion","flags","_needsUpdate","_requested","changes","_changes","item","changesById","_changesById","children","base","_view","getCurrentStyle","setCurrentStyle","getIndex","getOptions","getLayers","getActiveLayer","_activeLayer","Layer","getSymbolDefinitions","getItems","class","match","definition","ids","getSymbols","getSelectedItems","selectionItems","selection","_selection","_updateSelection","selectAll","deselectAll","setFullySelected","addLayer","layer","insertLayer","_remove","_setProject","_insertItem","_created","_getItems","getItem","removeOn","sets","mousedrag","other","ctx","save","offset","viewMatrix","matrices","updateMatrix","draw","restore","strokeWidth","NO_INSERT","_name","_applyMatrix","_canApplyMatrix","_canScaleStroke","_pivot","_visible","_blendMode","_opacity","_locked","_guide","_clipMask","_selectBounds","_selectChildren","_serializeFields","pivot","visible","blendMode","opacity","locked","guide","clipMask","data","_prioritize","_events","_countItemEvent","onFrame","uninstall","onLoad","_itemHandlers","_initialize","hasProps","props","_parent","insertItems","parent","fields","symbol","_symbol","cacheParent","_project","_bounds","_globalMatrix","_clearBoundsCache","getId","getName","setName","namedChildren","getStyle","_style","setStyle","getSelection","setSelection","flag","isFullySelected","isClipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_position","getPivot","setPivot","getStrokeBounds","getHandleBounds","handle","hasMatrix","opts","setBounds","_matrix","_getBounds","_updateBoundsCache","_getBoundsCacheKey","_getCachedBounds","cacheItem","cacheKey","nonscaling","style","_getStrokeMatrix","getStrokeScaling","getViewMatrix","cache","_boundsCache","l","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","parents","getApplyMatrix","setApplyMatrix","setTransformContent","installEvents","getLayer","getParent","addChild","_getOwner","getChildren","setChildren","addChildren","getFirstChild","getLastChild","getPreviousSibling","_equals","copy","constructor","copyAttributes","copyContent","topLeft","getTopLeft","floor","bottomRight","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","hitTest","_hitTest","HitResult","hitTestAll","all","hitTestChildren","child","_exclude","_hitTestChildren","parentViewMatrix","stroke","tolerancePadding","checkSelf","hit","hyphenate","pt","checkPosition","checkBounds","points","checkPoint","fill","matches","hasOwnProperty","compare","test","matchObject","inside","param","recursive","overlapping","firstOnly","insertChild","insertChildren","inserted","notifySelf","_insertAt","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","addTo","reduce","_removeNamed","namedArray","_dispose","notifyParent","insertBelow","removeChildren","start","reverseChildren","reverse","numChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","list2","list1","hasChildren","isInserted","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","transformMatrix","strokeColor","getStrokeColor","_setApplyMatrix","_getPositionFromBounds","localToGlobal","parentToLocal","localToParent","fitBounds","rectRatio","itemRatio","newBounds","setCenter","getCenter","_setStyles","hasFill","fillStyle","strokeStyle","lineWidth","getStrokeWidth","strokeJoin","getStrokeJoin","miterLimit","strokeCap","lineCap","dashArray","getDashArray","setLineDash","lineDashOffset","dashOffset","mozDashOffset","blur","shadowColor","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","updateVersion","globalMatrix","normalBlend","nativeBlend","pixelRatio","itemOffset","prevOffset","direct","mainCtx","strokeMatrix","globalAlpha","clip","setTransform","getFillRule","updated","_drawSelection","itemSelected","positionSelected","_drawSelected","boundsSelected","half","beginPath","deltas","closePath","fillRect","_canComposite","hash","to","easing","duration","tween","Tween","tweenFrom","Group","_clipItem","_getClipItem","clipItem","isClipped","setClipped","clipped","_draw","dontStart","dontFinish","_hitTestSelf","radius","setRadius","_radius","getType","_type","setType","getShape","setShape","getRadius","_size","insertAbove","toShape","toPath","dontPaint","untransformed","isCircle","arc","kappa","rx","cy","moveTo","bezierCurveTo","ry","lineTo","halfSize","corner","quadrant","isOnEllipseStroke","getCornerCenter","hitStroke","padding","strokePadding","outer","Circle","Ellipse","ellipse","Shape","_readEllipse","_boundsOptions","_smoothing","image","object","getContext","naturalHeight","setImage","setSource","_loaded","_image","_canvas","_setImage","copyCanvas","drawImage","_crossOrigin","setWidth","getResolution","v","getImage","DomEvent","load","error","_change","_context","crossOrigin","getCrossOrigin","setCrossOrigin","getSmoothing","setSmoothing","smoothing","getSubCanvas","getSubRaster","toDataURL","getAverageColor","PathItem","sampleSize","clearRect","getElement","pixels","getImageData","ceil","alpha","channels","total","Color","getPixel","color","imageData","putImageData","setImageData","DomElement","SymbolItem","_definition","setDefinition","getSymbol","setSymbol","_item","SymbolDefinition","dontCenter","UID","setItem","_dontCenter","segments","ends","guides","handleIn","handleOut","arg4","SegmentPoint","_point","_handleOut","curve","getHandleIn","setHandleIn","getHandleOut","setHandleOut","hasHandles","_handleIn","isSmooth","clearHandles","oldSelection","getPath","getCurve","_path","getLocation","CurveLocation","factor","getPrevious","getNext","p1","d1_a","d2_a","_first","d2_2a","_last","d1_2a","vector","t","k","_segments","isLast","reversed","Segment","_transformCoordinates","interpolate","handleIn1","handleIn2","handleOut1","handleOut2","change","getY","Curve","seg1","seg2","handle1","handle2","arg6","arg7","_segment2","getPoint1","getHandle1","_length","_segment1","classify","segment2","setPoint1","getPoint2","setPoint2","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","divideAt","divideAtTime","time","_setHandles","tMax","tMin","subdivide","right","setHandles","segment","splitAt","splitAtTime","isTime","segment1","y3","y5","x4","x8","y9","y0","getMonoCurves","o0","io","o1","roots","v2","v0","v1","getTimeOf","epsilon","p0","getNearestTime","isStraight","x3","u","minDist","minT","refine","step","flip","isFlatEnough","uy","ux","_addBounds","maxPad","minPad","dot","isLinear","h1","h2","third","p2","isVertical","getLocationAt","getLocationAtTime","getTimeAt","getParameterAt","getTimesWithTangent","tangent","getOffsetAtTime","getLocationOf","getOffsetOf","loc","getParameterOf","getNearestLocation","getNearestPoint","methods","_evaluateMethods","getLengthIntegrand","bx","ax","getIterations","ay","by","cx","normalized","a3","d3","t1Ok","hasRoots","t1","t2Ok","t2","f1","f2","ds","forward","rangeLength","diff","guess","getWeightedTangent","getNormal","getCurvature","addLocation","excludeStart","excludeEnd","loc1","loc2","overlap","_intersection","locations","addCurveIntersections","calls","recursion","q0y","q3y","q3x","dMin","dMax","q0x","dp3","hull","getConvexHull","dp0","dp1","dp2","tMinClip","tMinNew","uMax","tMaxNew","tMaxClip","uMin","uDiff","fatLineEpsilon","dq1","p3","dist1","dist2","distRatio","clipConvexHull","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","top","getCurveLineIntersections","addCurveLineIntersections","overlaps","straight1","straight2","straight","before","addLineIntersection","getSelfIntersection","length2","values1","values2","length1","index1","curve1","collisions1","boundsCollisions","_returnFirst","index2","curve2","getCurveIntersections","getSquaredLineLength","geomEpsilon","straightBoth","l2","pairs","pair","den","times","num","t0","getIntersections","getOverlaps","_setCurve","_time","_distance","_next","_setPath","_curve","_segment","_setSegment","_version","_offset","_curveOffset","trySegment","getTime","getParameter","getCurveOffset","getIntersection","_ignoreOther","inter","isCrossing","t1Inside","t2Inside","c4","c3","offsets","addOffsets","getPeaks","getTangentAtTime","v4","getPointAt","getAngle","hasOverlap","search","found","merge","_overlap","path1","path2","m","expanded","compound","isClockwise","setClockwise","setPathData","relative","control","getCoord","command","lower","move","cubicCurveTo","winding","_getWinding","onPath","matrix1","getCrossings","minLoc","isPath","itemsFrom","itemsTo","setClosed","_closed","paths1","paths2","matched","boundsOverlaps","pathBoundsOverlaps","setSegments","_curves","fullySelected","_segmentSelection","getFirstSegment","getLastSegment","getCurves","getLastCurve","isClosed","closed","getPathData","curX","curY","prevX","prevY","inY","outY","addSegment","_transformContent","_countCurves","segs","_adjustCurves","end","_add","insertSegment","addSegments","insertSegments","removeSegment","removeSegments","_includeCurves","_area","area","last","last1","first1","first","flatten","flattener","simplify","smooth","_default","loop","tmp","knots","paddingLeft","paddingRight","n_1","asymmetric","isArc","pt2","topCenter","shape","CompoundPath","curves1","pos1","pos2","end2","start2","end1","numSegments","hitCurves","strokeRadius","getMiterLimit","isCloseEnough","checkSegmentPoint","anchor","checkSegmentPoints","addToArea","checkSegmentStroke","isJoin","_addBevelJoin","_addSquareCap","getOffsetsWithTangent","curveStart","curveTimes","drawHandles","miniSize","miniHalf","pY","drawHandle","pX","drawSegments","inX","outX","drawSegment","dashLength","PathFlattener","getOffset","getCurrentSegment","moveBy","quadraticCurveTo","curveTo","arcTo","through","clockwise","xSq","ySq","rxSq","rySq","extent","throughSide","centerSide","out","_in","curveBy","cubicCurveBy","arcBy","method","prevCoords","processSegment","joinBounds","addRound","addJoin","cap","_getStrokePadding","tan","normal1","normal2","addPoint","normal","joinPadding","joinRadius","getStrokeCap","paddingX","paddingY","yx","ellipseSegments","createPath","createEllipse","bl","getBottomLeft","tl","tr","getTopRight","br","getBottomRight","hx","RoundRectangle","RegularPolygon","sides","three","Star","radius1","radius2","getFirstCurve","_precision","paths","getCurrentPath","getPaths","preparePath","resolve","resolveCrossings","createResult","result","traceBoolean","_path1","_path2","operator","operators","operation","collectPaths","_overlapsOnly","crossings","curvesValues","map","curveCollisions","propagateWinding","reorientPaths","addPath","added","_previous","lookup","container","sorted","entry1","containerWinding","entry2","divideLocations","results","clearCurves","clearLater","clearLookup","renormalizeLocs","prevCurve","prevTime","origTime","newCurve","linkIntersections","windingEpsilon","qualityEpsilon","windingL","windingR","pathWindingR","quality","vPrev","vClose","a0","ia","windingPrev","po","pathWindingL","a3Prev","paR","paL","o3","monoCurves","addWinding","curvesList","handleCurve","onAnyPath","totalLength","curveLength","wind","otherPath","operand","pathWinding","getWinding","curveCollisionsMap","tracePaths","starts","isValid","seg","visitPath","_visited","getCrossingSegments","collectStarts","collect","inter1","over1","over2","visited","valid","branch","branches","finished","hasOverlaps","hasCrossings","intersections","reorient","nonZero","getInteriorPoint","intercepts","addCurve","computeParts","minSpan","halves","tMid","_get","drawPart","PathFitter","fitCubic","pop","pt1","uPrime","chordLengthParameterize","parametersInOrder","generateBezier","tanCenter","C","X","detC0C1","alpha2","detC0X","detXC1","c0","segLength","alpha1","reparameterize","degree","maxDist","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","setParagraphStyle","PointText","lines","leading","font","textAlign","strokeText","numLines","justification","hsb","hsl","gradient","transparent","colorCtx","fromCSS","string","components","component","unit","turn","rad","hsbIndices","converters","h","achromatic","t3s","t3","g","componentParsers","parser","Gradient","_removeOwner","_addOwner","_components","argType","properties","stops","parsers","_properties","_canvasStyle","_convert","convert","getAlpha","setAlpha","_alpha","isGradient","toCSS","hex","toCanvasStyle","destination","highlight","canvasGradient","inverse","origin","_radial","addColorStop","_types","_setOwner","components2","components1","radial","_stops","_owners","getStops","getRadial","setRadial","stops1","stops2","setOffset","getRampPoint","setRampPoint","getColor","setColor","_color","stop","itemDefaults","fillColor","fillRule","strokeScaling","shadowBlur","shadowOffset","selectedColor","groupDefaults","fontFamily","fontWeight","fontSize","Style","_values","isColor","isPoint","applyToChildren","old","_dontMerge","childValue","_defaults","Font","WindingRule","isStyle","style1","value1","getFillColor","getShadowColor","getFontStyle","getFontSize","getFontWeight","getFont","setFont","getLeading","handlePrefix","prefixes","prefix","getStyles","doc","getBoundingClientRect","getViewportBounds","defaultView","html","documentElement","isInvisible","isInView","getPrefixed","setPrefixed","passive","addEventListener","removeEventListener","getTarget","getRelatedTarget","relatedTarget","requestAnimationFrame","nativeRequest","requested","handleCallbacks","functions","callbacks","callback","timer","setInterval","window","none","userDrag","touchCallout","contentZooming","resize","setViewSize","getCanvasSize","Stats","body","_element","_pixelRatio","_setElementSize","_viewSize","_views","_viewsById","_focused","View","_frameItems","_itemEvents","native","virtual","_autoUpdate","_animate","pause","getAutoUpdate","setAutoUpdate","autoUpdate","requestUpdate","_handleFrame","play","now","Date","_stats","_animateItem","animate","_frameItemCount","_handleFrameItems","getPixelRatio","isVisible","getPixelSize","parentNode","temp","appendChild","getTextWidth","_decomposed","getZoom","setZoom","zoom","scrollBy","projectToView","viewToProject","prevFocus","tempFocus","dragging","mouseDown","target","updateFocus","_handleMouseEvent","navigator","mousemove","mousedown","mouseup","viewEvents","docEvents","handleMouseMove","scroll","called","fallbacks","doubleclick","wasInView","overView","downPoint","lastPoint","downItem","dragItem","clickTime","dblClick","emitMouseEvent","stopped","mouseEvent","fallback","emitMouseEvents","hitItem","prevented","itemEventsMap","click","mouseleave","itemEvents","responds","getEventPoint","inView","mouse","hitItems","overItem","nativeMove","down","tool","cancelable","preventDefault","_handleKeyEvent","keyEvent","_resetState","CanvasView","HTMLCanvasElement","deviceRatio","parseFloat","prevFont","measureText","Event","stopPropagation","getTimeStamp","getModifiers","KeyEvent","character","Key","keyLookup","charLookup","keyMap","metaFixMap","downKey","modifiers","capsLock","option","alt","String","fromCharCode","parseInt","substr","charMap","keydown","keypress","keyup","MouseEvent","ToolEvent","_choosePoint","getLastPoint","_lastPoint","getDownPoint","setDownPoint","_downPoint","_middlePoint","middlePoint","getDelta","setDelta","_delta","setCount","Tool","_moveCount","_downCount","getMinDistance","_minDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","drag","maxDistance","toolPoint","easings","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","running","_then","_startTime","_parsedKeys","_parseKeys","_from","state","_getState","then","progress","getValue","onUpdate","startTime","_setProperty","_resolveValue","parse","_calculate","PaperScript","calculateBinary","parsed","_getProperty","Http","xhr","open","mimeType","onload","status","onerror","message","canvases","ba","dg","db","getLum","dr","ln","setSat","col","md","modes","screen","sr","sb","overlay","sg","bb","darken","lighten","difference","exclusion","hue","setLum","saturation","luminosity","bg","average","negation","mode","globalCompositeOperation","srcCanvas","srcContext","dstContext","dstData","sa","SvgElement","svg","attributeNamespace","href","xlink","xmlns","namespace","getAttributeNS","node","attributes","SvgStyles","true","false","attribute","toSVG","fromSVG","exportFilter","coordinates","trans","attrs","exportGroup","getTransform","childNode","exportSVG","exportRaster","exportPath","matchShapes","exportShape","exportCompoundPath","exportSymbolItem","getDefinition","definitionItem","viewBox","overflow","gradientNode","getOrigin","getDestination","fx","fy","gradientUnits","stopColor","exportText","exporters","svgs","typeId","exportDefinitions","defs","insertBefore","onExport","JSON","setOptions","getViewSize","rootSize","allowNull","allowPercent","isClip","isDefs","applyAttributes","importNode","currentStyle","importPath","importGradient","nodes","scaleToBounds","_scaleToBounds","importers","childNodes","nodeType","importGroup","polygon","importPoly","lineargradient","radialgradient","text","switch","applyTransform","transforms","applyOpacity","gradientTransform","visibility","setVisible","display","percent","convertValue","group","styles","tagName","isElement","nextSibling","importer","onImport","importSVG","onError","request","url","async","reader","readAsText","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","hmrApply","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","stack","createErrorOverlay","createElement","stackTrace","innerText","innerHTML","getParents","modules","dep","Function","deps","cached","some","cb"],"mappings":"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","file":"app1.603ee5e2.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import paper from \"paper/dist/paper-core\";\n\npaper.install(window);\n\nwindow.onload = function () {\n  const canvas = document.getElementById(\"myCanvas\");\n  paper.setup(canvas);\n\n  var values = {\n    friction: 0.8,\n    timeStep: 0.01,\n    amount: 15,\n    mass: 2,\n    count: 0\n  };\n  values.invMass = 1 / values.mass;\n\n  var path, springs;\n  var size = view.size * [1.2, 1];\n\n  var Spring = function (a, b, strength, restLength) {\n    this.a = a;\n    this.b = b;\n    this.restLength = restLength || 80;\n    this.strength = strength ? strength : 0.55;\n    this.mamb = values.invMass * values.invMass;\n  };\n\n  Spring.prototype.update = function () {\n    var delta = this.b - this.a;\n    var dist = delta.length;\n    var normDistStrength = (dist - this.restLength) /\n      (dist * this.mamb) * this.strength;\n    delta.y *= normDistStrength * values.invMass * 0.2;\n    if (!this.a.fixed)\n      this.a.y += delta.y;\n    if (!this.b.fixed)\n      this.b.y -= delta.y;\n  };\n\n\n  function createPath(strength) {\n    var path = new Path({\n      fillColor: 'black'\n    });\n    springs = [];\n    for (var i = 0; i <= values.amount; i++) {\n      var segment = path.add(new Point(i / values.amount, 0.5) * size);\n      var point = segment.point;\n      if (i == 0 || i == values.amount)\n        point.y += size.height;\n      point.px = point.x;\n      point.py = point.y;\n      // The first two and last two points are fixed:\n      point.fixed = i < 2 || i > values.amount - 2;\n      if (i > 0) {\n        var spring = new Spring(segment.previous.point, point, strength);\n        springs.push(spring);\n      }\n    }\n    path.position.x -= size.width / 4;\n    return path;\n  }\n\n  view.onResize = function () {\n    if (path)\n      path.remove();\n    size = view.bounds.size * [2, 1];\n    path = createPath(0.1);\n  }\n\n  view.onMouseMove = function (event) {\n    var location = path.getNearestLocation(event.point);\n    var segment = location.segment;\n    var point = segment.point;\n\n    if (!point.fixed && location.distance < size.height / 4) {\n      var y = event.point.y;\n      point.y += (y - point.y) / 6;\n      if (segment.previous && !segment.previous.fixed) {\n        var previous = segment.previous.point;\n        previous.y += (y - previous.y) / 24;\n      }\n      if (segment.next && !segment.next.fixed) {\n        var next = segment.next.point;\n        next.y += (y - next.y) / 24;\n      }\n    }\n  }\n\n  view.onFrame = function (event) {\n    updateWave(path);\n  }\n\n  function updateWave(path) {\n    var force = 1 - values.friction * values.timeStep * values.timeStep;\n    for (var i = 0, l = path.segments.length; i < l; i++) {\n      var point = path.segments[i].point;\n      var dy = (point.y - point.py) * force;\n      point.py = point.y;\n      point.y = Math.max(point.y + dy, 0);\n    }\n\n    for (var j = 0, l = springs.length; j < l; j++) {\n      springs[j].update();\n    }\n    path.smooth({ type: 'continuous' });\n  }\n\n  view.onKeyDown = function (event) {\n    if (event.key == 'space') {\n      path.fullySelected = !path.fullySelected;\n      path.fillColor = path.fullySelected ? null : 'black';\n    }\n  }\n\n  view.draw();\n};\n","/*!\n * Paper.js v0.12.7 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2020, Jürg Lehni & Jonathan Puckey\n * http://juerglehni.com/ & https://puckey.studio/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sat May 23 23:05:09 2020 +0200\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2020 Jürg Lehni\n * http://juerglehni.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * https://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = function(self, undefined) {\n\nself = self || require('./node/self.js');\nvar window = self.window,\n\tdocument = self.document;\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\t\tarray = [],\n\t\tslice = array.slice,\n\t\tcreate = Object.create,\n\t\tdescribe = Object.getOwnPropertyDescriptor,\n\t\tdefine = Object.defineProperty,\n\n\t\tforEach = array.forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++) {\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this) {\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t\t}\n\t\t},\n\n\t\tset = Object.assign || function(dst) {\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tfor (var key in src) {\n\t\t\t\t\tif (src.hasOwnProperty(key))\n\t\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn dst;\n\t\t},\n\n\t\teach = function(obj, iter, bind) {\n\t\t\tif (obj) {\n\t\t\t\tvar desc = describe(obj, 'length');\n\t\t\t\t(desc && typeof desc.value === 'number' ? forEach : forIn)\n\t\t\t\t\t.call(obj, iter, bind = bind || obj);\n\t\t\t}\n\t\t\treturn bind;\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res)) {\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\t}\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable != null ? enumerable : !bean;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\tvar src = arguments[i];\n\t\t\tif (src)\n\t\t\t\tset(this, src);\n\t\t}\n\t\treturn this;\n\t}\n\n\treturn inject(Base, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, null, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, obj, l = arguments.length;\n\t\t\t\t\ti < l && !(ctor && proto); i++) {\n\t\t\t\tobj = arguments[i];\n\t\t\t\tctor = ctor || obj.initialize;\n\t\t\t\tproto = proto || obj.prototype;\n\t\t\t}\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = proto || create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}).inject({\n\t\tenumerable: false,\n\n\t\tinitialize: Base,\n\n\t\tset: Base,\n\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src) {\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\tset: set,\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t},\n\n\t\t\tslice: function(list, begin, end) {\n\t\t\t\treturn slice.call(list, begin, end);\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\tenumerable: false,\n\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\timportJSON: function(json) {\n\t\treturn Base.importJSON(json, this);\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\tset: function(props, exclude) {\n\t\tif (props)\n\t\t\tBase.filter(this, props, exclude, this._prioritize);\n\t\treturn this;\n\t}\n}, {\n\nbeans: false,\nstatics: {\n\texports: {},\n\n\textend: function extend() {\n\t\tvar res = extend.base.apply(this, arguments),\n\t\t\tname = res.prototype._class;\n\t\tif (name && !Base.exports[name])\n\t\t\tBase.exports[name] = res;\n\t\treturn res;\n\t},\n\n\tequals: function(obj1, obj2) {\n\t\tif (obj1 === obj2)\n\t\t\treturn true;\n\t\tif (obj1 && obj1.equals)\n\t\t\treturn obj1.equals(obj2);\n\t\tif (obj2 && obj2.equals)\n\t\t\treturn obj2.equals(obj1);\n\t\tif (obj1 && obj2\n\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\tvar length = obj1.length;\n\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\tlength = keys.length;\n\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\treturn false;\n\t\t\t\twhile (length--) {\n\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tread: function(list, start, options, amount) {\n\t\tif (this === Base) {\n\t\t\tvar value = this.peek(list, start);\n\t\t\tlist.__index++;\n\t\t\treturn value;\n\t\t}\n\t\tvar proto = this.prototype,\n\t\t\treadIndex = proto._readIndex,\n\t\t\tbegin = start || readIndex && list.__index || 0,\n\t\t\tlength = list.length,\n\t\t\tobj = list[begin];\n\t\tamount = amount || length - begin;\n\t\tif (obj instanceof this\n\t\t\t|| options && options.readNull && obj == null && amount <= 1) {\n\t\t\tif (readIndex)\n\t\t\t\tlist.__index = begin + 1;\n\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t}\n\t\tobj = Base.create(proto);\n\t\tif (readIndex)\n\t\t\tobj.__read = true;\n\t\tobj = obj.initialize.apply(obj, begin > 0 || begin + amount < length\n\t\t\t\t? Base.slice(list, begin, begin + amount)\n\t\t\t\t: list) || obj;\n\t\tif (readIndex) {\n\t\t\tlist.__index = begin + obj.__read;\n\t\t\tvar filtered = obj.__filtered;\n\t\t\tif (filtered) {\n\t\t\t\tlist.__filtered = filtered;\n\t\t\t\tobj.__filtered = undefined;\n\t\t\t}\n\t\t\tobj.__read = undefined;\n\t\t}\n\t\treturn obj;\n\t},\n\n\tpeek: function(list, start) {\n\t\treturn list[list.__index = start || list.__index || 0];\n\t},\n\n\tremain: function(list) {\n\t\treturn list.length - (list.__index || 0);\n\t},\n\n\treadList: function(list, start, options, amount) {\n\t\tvar res = [],\n\t\t\tentry,\n\t\t\tbegin = start || 0,\n\t\t\tend = amount ? begin + amount : list.length;\n\t\tfor (var i = begin; i < end; i++) {\n\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t}\n\t\treturn res;\n\t},\n\n\treadNamed: function(list, name, start, options, amount) {\n\t\tvar value = this.getNamed(list, name),\n\t\t\thasValue = value !== undefined;\n\t\tif (hasValue) {\n\t\t\tvar filtered = list.__filtered;\n\t\t\tif (!filtered) {\n\t\t\t\tvar source = this.getSource(list);\n\t\t\t\tfiltered = list.__filtered = Base.create(source);\n\t\t\t\tfiltered.__unfiltered = source;\n\t\t\t}\n\t\t\tfiltered[name] = undefined;\n\t\t}\n\t\treturn this.read(hasValue ? [value] : list, start, options, amount);\n\t},\n\n\treadSupported: function(list, dest) {\n\t\tvar source = this.getSource(list),\n\t\t\tthat = this,\n\t\t\tread = false;\n\t\tif (source) {\n\t\t\tObject.keys(source).forEach(function(key) {\n\t\t\t\tif (key in dest) {\n\t\t\t\t\tvar value = that.readNamed(list, key);\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\tdest[key] = value;\n\t\t\t\t\t}\n\t\t\t\t\tread = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn read;\n\t},\n\n\tgetSource: function(list) {\n\t\tvar source = list.__source;\n\t\tif (source === undefined) {\n\t\t\tvar arg = list.length === 1 && list[0];\n\t\t\tsource = list.__source = arg && Base.isPlainObject(arg)\n\t\t\t\t? arg : null;\n\t\t}\n\t\treturn source;\n\t},\n\n\tgetNamed: function(list, name) {\n\t\tvar source = this.getSource(list);\n\t\tif (source) {\n\t\t\treturn name ? source[name] : list.__filtered || source;\n\t\t}\n\t},\n\n\thasNamed: function(list, name) {\n\t\treturn !!this.getNamed(list, name);\n\t},\n\n\tfilter: function(dest, source, exclude, prioritize) {\n\t\tvar processed;\n\n\t\tfunction handleKey(key) {\n\t\t\tif (!(exclude && key in exclude) &&\n\t\t\t\t!(processed && key in processed)) {\n\t\t\t\tvar value = source[key];\n\t\t\t\tif (value !== undefined)\n\t\t\t\t\tdest[key] = value;\n\t\t\t}\n\t\t}\n\n\t\tif (prioritize) {\n\t\t\tvar keys = {};\n\t\t\tfor (var i = 0, key, l = prioritize.length; i < l; i++) {\n\t\t\t\tif ((key = prioritize[i]) in source) {\n\t\t\t\t\thandleKey(key);\n\t\t\t\t\tkeys[key] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessed = keys;\n\t\t}\n\n\t\tObject.keys(source.__unfiltered || source).forEach(handleKey);\n\t\treturn dest;\n\t},\n\n\tisPlainValue: function(obj, asString) {\n\t\treturn Base.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t|| asString && typeof obj === 'string';\n\t},\n\n\tserialize: function(obj, options, compact, dictionary) {\n\t\toptions = options || {};\n\n\t\tvar isRoot = !dictionary,\n\t\t\tres;\n\t\tif (isRoot) {\n\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\tdictionary = {\n\t\t\t\tlength: 0,\n\t\t\t\tdefinitions: {},\n\t\t\t\treferences: {},\n\t\t\t\tadd: function(item, create) {\n\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t}\n\t\t\t\t\treturn ref;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tif (obj && obj._serialize) {\n\t\t\tres = obj._serialize(options, dictionary);\n\t\t\tvar name = obj._class;\n\t\t\tif (name && !obj._compactSerialize && (isRoot || !compact)\n\t\t\t\t\t&& res[0] !== name) {\n\t\t\t\tres.unshift(name);\n\t\t\t}\n\t\t} else if (Array.isArray(obj)) {\n\t\t\tres = [];\n\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\tres[i] = Base.serialize(obj[i], options, compact, dictionary);\n\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\tres = {};\n\t\t\tvar keys = Object.keys(obj);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\tdictionary);\n\t\t\t}\n\t\t} else if (typeof obj === 'number') {\n\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t} else {\n\t\t\tres = obj;\n\t\t}\n\t\treturn isRoot && dictionary.length > 0\n\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t: res;\n\t},\n\n\tdeserialize: function(json, create, _data, _setDictionary, _isRoot) {\n\t\tvar res = json,\n\t\t\tisFirst = !_data,\n\t\t\thasDictionary = isFirst && json && json.length\n\t\t\t\t&& json[0][0] === 'dictionary';\n\t\t_data = _data || {};\n\t\tif (Array.isArray(json)) {\n\t\t\tvar type = json[0],\n\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\tif (json.length == 1 && /^#/.test(type)) {\n\t\t\t\treturn _data.dictionary[type];\n\t\t\t}\n\t\t\ttype = Base.exports[type];\n\t\t\tres = [];\n\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++) {\n\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\tisDictionary, hasDictionary));\n\t\t\t}\n\t\t\tif (type) {\n\t\t\t\tvar args = res;\n\t\t\t\tif (create) {\n\t\t\t\t\tres = create(type, args, isFirst || _isRoot);\n\t\t\t\t} else {\n\t\t\t\t\tres = new type(args);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (Base.isPlainObject(json)) {\n\t\t\tres = {};\n\t\t\tif (_setDictionary)\n\t\t\t\t_data.dictionary = res;\n\t\t\tfor (var key in json)\n\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t}\n\t\treturn hasDictionary ? res[1] : res;\n\t},\n\n\texportJSON: function(obj, options) {\n\t\tvar json = Base.serialize(obj, options);\n\t\treturn options && options.asString == false\n\t\t\t\t? json\n\t\t\t\t: JSON.stringify(json);\n\t},\n\n\timportJSON: function(json, target) {\n\t\treturn Base.deserialize(\n\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\tfunction(ctor, args, isRoot) {\n\t\t\t\t\tvar useTarget = isRoot && target\n\t\t\t\t\t\t\t&& target.constructor === ctor,\n\t\t\t\t\t\tobj = useTarget ? target\n\t\t\t\t\t\t\t: Base.create(ctor.prototype);\n\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t&& (useTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\tif (Base.isPlainObject(arg)) {\n\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t\tif (useTarget) {\n\t\t\t\t\t\t\t\targs = args.concat([{ insert: true }]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(useTarget ? obj.set : ctor).apply(obj, args);\n\t\t\t\t\tif (useTarget)\n\t\t\t\t\t\ttarget = null;\n\t\t\t\t\treturn obj;\n\t\t\t\t});\n\t},\n\n\tpush: function(list, items) {\n\t\tvar itemsLength = items.length;\n\t\tif (itemsLength < 4096) {\n\t\t\tlist.push.apply(list, items);\n\t\t} else {\n\t\t\tvar startLength = list.length;\n\t\t\tlist.length += itemsLength;\n\t\t\tfor (var i = 0; i < itemsLength; i++) {\n\t\t\t\tlist[startLength + i] = items[i];\n\t\t\t}\n\t\t}\n\t\treturn list;\n\t},\n\n\tsplice: function(list, items, index, remove) {\n\t\tvar amount = items && items.length,\n\t\t\tappend = index === undefined;\n\t\tindex = append ? list.length : index;\n\t\tif (index > list.length)\n\t\t\tindex = list.length;\n\t\tfor (var i = 0; i < amount; i++)\n\t\t\titems[i]._index = index + i;\n\t\tif (append) {\n\t\t\tBase.push(list, items);\n\t\t\treturn [];\n\t\t} else {\n\t\t\tvar args = [index, remove];\n\t\t\tif (items)\n\t\t\t\tBase.push(args, items);\n\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\tremoved[i]._index = undefined;\n\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\tlist[i]._index = i;\n\t\t\treturn removed;\n\t\t}\n\t},\n\n\tcapitalize: function(str) {\n\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\treturn match.toUpperCase();\n\t\t});\n\t},\n\n\tcamelize: function(str) {\n\t\treturn str.replace(/-(.)/g, function(match, chr) {\n\t\t\treturn chr.toUpperCase();\n\t\t});\n\t},\n\n\thyphenate: function(str) {\n\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t}\n}});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function handler() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, handler);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = Base.slice(arguments, 1),\n\t\t\tsetTarget = event && event.target && !event.currentTarget;\n\t\thandlers = handlers.slice();\n\t\tif (setTarget)\n\t\t\tevent.currentTarget = this;\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) == false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t   }\n\t\t}\n\t\tif (setTarget)\n\t\t\tdelete event.currentTarget;\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar types = this._eventTypes,\n\t\t\thandlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tif (types) {\n\t\t\tfor (var type in handlers) {\n\t\t\t\tif (handlers[type].length > 0) {\n\t\t\t\t\tvar entry = types[type],\n\t\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\t\tif (func)\n\t\t\t\t\t\tfunc.call(this, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\tinsertItems: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1) || {};\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\t\tif (!this.agent) {\n\t\t\tvar user = self.navigator.userAgent.toLowerCase(),\n\t\t\t\tos = (/(darwin|win|mac|linux|freebsd|sunos)/.exec(user)||[])[0],\n\t\t\t\tplatform = os === 'darwin' ? 'mac' : os,\n\t\t\t\tagent = proto.agent = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tagent[platform] = true;\n\t\t\tuser.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom|node|jsdom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:v?([.\\d]+))?/g,\n\t\t\t\tfunction(match, n, v1, v2, rv) {\n\t\t\t\t\tif (!agent.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 :\n\t\t\t\t\t\t\t\t/^(node|trident)$/.test(n) ? rv : v1;\n\t\t\t\t\t\tagent.version = v;\n\t\t\t\t\t\tagent.versionNumber = parseFloat(v);\n\t\t\t\t\t\tn = { trident: 'msie', jsdom: 'node' }[n] || n;\n\t\t\t\t\t\tagent.name = n;\n\t\t\t\t\t\tagent[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (agent.chrome)\n\t\t\t\tdelete agent.webkit;\n\t\t\tif (agent.atom)\n\t\t\t\tdelete agent.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.12.7\",\n\n\tgetView: function() {\n\t\tvar project = this.project;\n\t\treturn project && project._view;\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, options) {\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tcreateCanvas: function(width, height) {\n\t\treturn CanvasProvider.getCanvas(width, height);\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tvar projects = this.projects,\n\t\t\ttools = this.tools;\n\t\tfor (var i = projects.length - 1; i >= 0; i--)\n\t\t\tprojects[i].remove();\n\t\tfor (var i = tools.length - 1; i >= 0; i--)\n\t\t\ttools[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._scope.getView();\n\t}\n});\n\nvar CollisionDetection = {\n\tfindItemBoundsCollisions: function(items1, items2, tolerance) {\n\t\tfunction getBounds(items) {\n\t\t\tvar bounds = new Array(items.length);\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\tvar rect = items[i].getBounds();\n\t\t\t\tbounds[i] = [rect.left, rect.top, rect.right, rect.bottom];\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n\t\tvar bounds1 = getBounds(items1),\n\t\t\tbounds2 = !items2 || items2 === items1\n\t\t\t\t? bounds1\n\t\t\t\t: getBounds(items2);\n\t\treturn this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n\t},\n\n\tfindCurveBoundsCollisions: function(curves1, curves2, tolerance, bothAxis) {\n\t\tfunction getBounds(curves) {\n\t\t\tvar min = Math.min,\n\t\t\t\tmax = Math.max,\n\t\t\t\tbounds = new Array(curves.length);\n\t\t\tfor (var i = 0; i < curves.length; i++) {\n\t\t\t\tvar v = curves[i];\n\t\t\t\tbounds[i] = [\n\t\t\t\t\tmin(v[0], v[2], v[4], v[6]),\n\t\t\t\t\tmin(v[1], v[3], v[5], v[7]),\n\t\t\t\t\tmax(v[0], v[2], v[4], v[6]),\n\t\t\t\t\tmax(v[1], v[3], v[5], v[7])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn bounds;\n\t\t}\n\n\t\tvar bounds1 = getBounds(curves1),\n\t\t\tbounds2 = !curves2 || curves2 === curves1\n\t\t\t\t? bounds1\n\t\t\t\t: getBounds(curves2);\n\t\tif (bothAxis) {\n\t\t\tvar hor = this.findBoundsCollisions(\n\t\t\t\t\tbounds1, bounds2, tolerance || 0, false, true),\n\t\t\t\tver = this.findBoundsCollisions(\n\t\t\t\t\tbounds1, bounds2, tolerance || 0, true, true),\n\t\t\t\tlist = [];\n\t\t\tfor (var i = 0, l = hor.length; i < l; i++) {\n\t\t\t\tlist[i] = { hor: hor[i], ver: ver[i] };\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\t\treturn this.findBoundsCollisions(bounds1, bounds2, tolerance || 0);\n\t},\n\n\tfindBoundsCollisions: function(boundsA, boundsB, tolerance,\n\t\tsweepVertical, onlySweepAxisCollisions) {\n\t\tvar self = !boundsB || boundsA === boundsB,\n\t\t\tallBounds = self ? boundsA : boundsA.concat(boundsB),\n\t\t\tlengthA = boundsA.length,\n\t\t\tlengthAll = allBounds.length;\n\n\t\tfunction binarySearch(indices, coord, value) {\n\t\t\tvar lo = 0,\n\t\t\t\thi = indices.length;\n\t\t\twhile (lo < hi) {\n\t\t\t\tvar mid = (hi + lo) >>> 1;\n\t\t\t\tif (allBounds[indices[mid]][coord] < value) {\n\t\t\t\t\tlo = mid + 1;\n\t\t\t\t} else {\n\t\t\t\t\thi = mid;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn lo - 1;\n\t\t}\n\n\t\tvar pri0 = sweepVertical ? 1 : 0,\n\t\t\tpri1 = pri0 + 2,\n\t\t\tsec0 = sweepVertical ? 0 : 1,\n\t\t\tsec1 = sec0 + 2;\n\t\tvar allIndicesByPri0 = new Array(lengthAll);\n\t\tfor (var i = 0; i < lengthAll; i++) {\n\t\t\tallIndicesByPri0[i] = i;\n\t\t}\n\t\tallIndicesByPri0.sort(function(i1, i2) {\n\t\t\treturn allBounds[i1][pri0] - allBounds[i2][pri0];\n\t\t});\n\t\tvar activeIndicesByPri1 = [],\n\t\t\tallCollisions = new Array(lengthA);\n\t\tfor (var i = 0; i < lengthAll; i++) {\n\t\t\tvar curIndex = allIndicesByPri0[i],\n\t\t\t\tcurBounds = allBounds[curIndex],\n\t\t\t\torigIndex = self ? curIndex : curIndex - lengthA,\n\t\t\t\tisCurrentA = curIndex < lengthA,\n\t\t\t\tisCurrentB = self || !isCurrentA,\n\t\t\t\tcurCollisions = isCurrentA ? [] : null;\n\t\t\tif (activeIndicesByPri1.length) {\n\t\t\t\tvar pruneCount = binarySearch(activeIndicesByPri1, pri1,\n\t\t\t\t\t\tcurBounds[pri0] - tolerance) + 1;\n\t\t\t\tactiveIndicesByPri1.splice(0, pruneCount);\n\t\t\t\tif (self && onlySweepAxisCollisions) {\n\t\t\t\t\tcurCollisions = curCollisions.concat(activeIndicesByPri1);\n\t\t\t\t\tfor (var j = 0; j < activeIndicesByPri1.length; j++) {\n\t\t\t\t\t\tvar activeIndex = activeIndicesByPri1[j];\n\t\t\t\t\t\tallCollisions[activeIndex].push(origIndex);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar curSec1 = curBounds[sec1],\n\t\t\t\t\t\tcurSec0 = curBounds[sec0];\n\t\t\t\t\tfor (var j = 0; j < activeIndicesByPri1.length; j++) {\n\t\t\t\t\t\tvar activeIndex = activeIndicesByPri1[j],\n\t\t\t\t\t\t\tactiveBounds = allBounds[activeIndex],\n\t\t\t\t\t\t\tisActiveA = activeIndex < lengthA,\n\t\t\t\t\t\t\tisActiveB = self || activeIndex >= lengthA;\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tonlySweepAxisCollisions ||\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tisCurrentA && isActiveB ||\n\t\t\t\t\t\t\t\tisCurrentB && isActiveA\n\t\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t\tcurSec1 >= activeBounds[sec0] - tolerance &&\n\t\t\t\t\t\t\t\tcurSec0 <= activeBounds[sec1] + tolerance\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (isCurrentA && isActiveB) {\n\t\t\t\t\t\t\t\tcurCollisions.push(\n\t\t\t\t\t\t\t\t\tself ? activeIndex : activeIndex - lengthA);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (isCurrentB && isActiveA) {\n\t\t\t\t\t\t\t\tallCollisions[activeIndex].push(origIndex);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isCurrentA) {\n\t\t\t\tif (boundsA === boundsB) {\n\t\t\t\t\tcurCollisions.push(curIndex);\n\t\t\t\t}\n\t\t\t\tallCollisions[curIndex] = curCollisions;\n\t\t\t}\n\t\t\tif (activeIndicesByPri1.length) {\n\t\t\t\tvar curPri1 = curBounds[pri1],\n\t\t\t\t\tindex = binarySearch(activeIndicesByPri1, pri1, curPri1);\n\t\t\t\tactiveIndicesByPri1.splice(index + 1, 0, curIndex);\n\t\t\t} else {\n\t\t\t\tactiveIndicesByPri1.push(curIndex);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0; i < allCollisions.length; i++) {\n\t\t\tvar collisions = allCollisions[i];\n\t\t\tif (collisions) {\n\t\t\t\tcollisions.sort(function(i1, i2) { return i1 - i2; });\n\t\t\t}\n\t\t}\n\t\treturn allCollisions;\n\t}\n};\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = Base.pick(precision, 5);\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn this.precision < 16\n\t\t\t\t? Math.round(val * this.multiplier) / this.multiplier : val;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tlog2 = Math.log2 || function(x) {\n\t\t\treturn Math.log(x) * Math.LOG2E;\n\t\t},\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clamp(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\tfunction getDiscriminant(a, b, c) {\n\t\tfunction split(v) {\n\t\t\tvar x = v * 134217729,\n\t\t\t\ty = v - x,\n\t\t\t\thi = y + x,\n\t\t\t\tlo = v - hi;\n\t\t\treturn [hi, lo];\n\t\t}\n\n\t\tvar D = b * b - a * c,\n\t\t\tE = b * b + a * c;\n\t\tif (abs(D) * 3 < E) {\n\t\t\tvar ad = split(a),\n\t\t\t\tbd = split(b),\n\t\t\t\tcd = split(c),\n\t\t\t\tp = b * b,\n\t\t\t\tdp = (bd[0] * bd[0] - p + 2 * bd[0] * bd[1]) + bd[1] * bd[1],\n\t\t\t\tq = a * c,\n\t\t\t\tdq = (ad[0] * cd[0] - q + ad[0] * cd[1] + ad[1] * cd[0])\n\t\t\t\t\t\t+ ad[1] * cd[1];\n\t\t\tD = (p - q) + (dp - dq);\n\t\t}\n\t\treturn D;\n\t}\n\n\tfunction getNormalizationFactor() {\n\t\tvar norm = Math.max.apply(Math, arguments);\n\t\treturn norm && (norm < 1e-8 || norm > 1e8)\n\t\t\t\t? pow(2, -Math.round(log2(norm)))\n\t\t\t\t: 0;\n\t}\n\n\treturn {\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 1e-8,\n\t\tGEOMETRIC_EPSILON: 1e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-8,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tisMachineZero: function(val) {\n\t\t\treturn val >= -MACHINE_EPSILON && val <= MACHINE_EPSILON;\n\t\t},\n\n\t\tclamp: clamp,\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance) {\n\t\t\t\t\tx = nx;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn clamp(x, a, b);\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar x1, x2 = Infinity;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(b) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / b;\n\t\t\t} else {\n\t\t\t\tb *= -0.5;\n\t\t\t\tvar D = getDiscriminant(a, b, c);\n\t\t\t\tif (D && abs(D) < MACHINE_EPSILON) {\n\t\t\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c));\n\t\t\t\t\tif (f) {\n\t\t\t\t\t\ta *= f;\n\t\t\t\t\t\tb *= f;\n\t\t\t\t\t\tc *= f;\n\t\t\t\t\t\tD = getDiscriminant(a, b, c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\t\tif (R === 0) {\n\t\t\t\t\t\tx1 = c / a;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = R / a;\n\t\t\t\t\t\tx2 = c / R;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = 0,\n\t\t\t\tboundless = min == null,\n\t\t\t\tminB = min - EPSILON,\n\t\t\t\tmaxB = max + EPSILON;\n\t\t\tif (isFinite(x1) && (boundless || x1 > minB && x1 < maxB))\n\t\t\t\troots[count++] = boundless ? x1 : clamp(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (boundless || x2 > minB && x2 < maxB))\n\t\t\t\troots[count++] = boundless ? x2 : clamp(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar f = getNormalizationFactor(abs(a), abs(b), abs(c), abs(d)),\n\t\t\t\tx, b1, c2, qd, q;\n\t\t\tif (f) {\n\t\t\t\ta *= f;\n\t\t\t\tb *= f;\n\t\t\t\tc *= f;\n\t\t\t\td *= f;\n\t\t\t}\n\n\t\t\tfunction evaluate(x0) {\n\t\t\t\tx = x0;\n\t\t\t\tvar tmp = a * x;\n\t\t\t\tb1 = tmp + b;\n\t\t\t\tc2 = b1 * x + c;\n\t\t\t\tqd = (tmp + b1) * x + c2;\n\t\t\t\tq = c2 * x + d;\n\t\t\t}\n\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tevaluate(-(b / a) / 3);\n\t\t\t\tvar t = q / a,\n\t\t\t\t\tr = pow(abs(t), 1/3),\n\t\t\t\t\ts = t < 0 ? -1 : 1,\n\t\t\t\t\ttd = -qd / a,\n\t\t\t\t\trd = td > 0 ? 1.324717957244746 * Math.max(r, sqrt(td)) : r,\n\t\t\t\t\tx0 = x - s * rd;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tevaluate(x0);\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / (1 + MACHINE_EPSILON);\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max),\n\t\t\t\tboundless = min == null;\n\t\t\tif (isFinite(x) && (count === 0\n\t\t\t\t\t|| count > 0 && x !== roots[0] && x !== roots[1])\n\t\t\t\t\t&& (boundless || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = boundless ? x : clamp(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(name) {\n\t\tif (name) {\n\t\t\tvar pool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasY ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('angle' in obj) {\n\t\t\t\tthis._set(obj.length || 0, 0);\n\t\t\t\tthis.setAngle(obj.angle || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis._set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis._set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar args = arguments,\n\t\t\tpoint = Point.read(args),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(args);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar args = arguments,\n\t\t\tpoint = Point.read(args),\n\t\t\ttolerance = Base.read(args);\n\t\treturn this.getDistance(point) <= tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.x) && isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tisInQuadrant: function(q) {\n\t\treturn this.x * (q > 1 && q < 4 ? -1 : 1) >= 0\n\t\t\t&& this.y * (q > 2 ? -1 : 1) >= 0;\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tpoint1 = Point.read(args),\n\t\t\t\tpoint2 = Point.read(args);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tpoint1 = Point.read(args),\n\t\t\t\tpoint2 = Point.read(args);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-8;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\treturn this._setter === 'setPosition' ? 4 : 0;\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0,\n\t\t\treading = this.__read,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis._set(arg0, hasHeight ? arg1 : arg0);\n\t\t\tif (reading)\n\t\t\t\tread = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0);\n\t\t\tif (reading)\n\t\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tvar obj = type === 'string' ? arg0.split(/[\\s,]+/) || [] : arg0;\n\t\t\tread = 1;\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\tthis._set(+obj[0], +(obj.length > 1 ? obj[1] : obj[0]));\n\t\t\t} else if ('width' in obj) {\n\t\t\t\tthis._set(obj.width || 0, obj.height || 0);\n\t\t\t} else if ('x' in obj) {\n\t\t\t\tthis._set(obj.x || 0, obj.y || 0);\n\t\t\t} else {\n\t\t\t\tthis._set(0, 0);\n\t\t\t\tread = 0;\n\t\t\t}\n\t\t}\n\t\tif (reading)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this.width) && isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(key) {\n\tvar op = Math[key];\n\tthis[key] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar args = arguments,\n\t\t\ttype = typeof arg0,\n\t\t\tread;\n\t\tif (type === 'number') {\n\t\t\tthis._set(arg0, arg1, arg2, arg3);\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis._set(0, 0, 0, 0);\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (args.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis._set.apply(this, arg0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis._set(arg0.x || 0, arg0.y || 0,\n\t\t\t\t\t\targ0.width || 0, arg0.height || 0);\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis._set(0, 0, 0, 0);\n\t\t\t\tif (Base.readSupported(args, this)) {\n\t\t\t\t\tread = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (read === undefined) {\n\t\t\tvar frm = Point.readNamed(args, 'from'),\n\t\t\t\tnext = Base.peek(args),\n\t\t\t\tx = frm.x,\n\t\t\t\ty = frm.y,\n\t\t\t\twidth,\n\t\t\t\theight;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(args, 'to')) {\n\t\t\t\tvar to = Point.readNamed(args, 'to');\n\t\t\t\twidth = to.x - x;\n\t\t\t\theight = to.y - y;\n\t\t\t\tif (width < 0) {\n\t\t\t\t\tx = to.x;\n\t\t\t\t\twidth = -width;\n\t\t\t\t}\n\t\t\t\tif (height < 0) {\n\t\t\t\t\ty = to.y;\n\t\t\t\t\theight = -height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(args);\n\t\t\t\twidth = size.width;\n\t\t\t\theight = size.height;\n\t\t\t}\n\t\t\tthis._set(x, y, width, height);\n\t\t\tread = args.__index;\n\t\t}\n\t\tvar filtered = args.__filtered;\n\t\tif (filtered)\n\t\t\tthis.__filtered = filtered;\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\t_fw: 1,\n\t_fh: 1,\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tsx = this._sx,\n\t\t\tsy = this._sy,\n\t\t\tw = size.width,\n\t\t\th = size.height;\n\t\tif (sx) {\n\t\t\tthis.x += (this.width - w) * sx;\n\t\t}\n\t\tif (sy) {\n\t\t\tthis.y += (this.height - h) * sy;\n\t\t}\n\t\tthis.width = w;\n\t\tthis.height = h;\n\t\tthis._fw = this._fh = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = left - this.x;\n\t\t\tthis.width -= this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = left;\n\t\tthis._sx = this._fw = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = top - this.y;\n\t\t\tthis.height -= this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = top;\n\t\tthis._sy = this._fh = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (!this._fw) {\n\t\t\tvar amount = right - this.x;\n\t\t\tthis.width = this._sx === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.x = right - this.width;\n\t\tthis._sx = 1;\n\t\tthis._fw = 0;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (!this._fh) {\n\t\t\tvar amount = bottom - this.y;\n\t\t\tthis.height = this._sy === 0.5 ? amount * 2 : amount;\n\t\t}\n\t\tthis.y = bottom - this.height;\n\t\tthis._sy = 1;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width / 2;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tif (this._fw || this._sx === 0.5) {\n\t\t\tthis.x = x - this.width / 2;\n\t\t} else {\n\t\t\tif (this._sx) {\n\t\t\t\tthis.x += (x - this.x) * 2 * this._sx;\n\t\t\t}\n\t\t\tthis.width = (x - this.x) * 2;\n\t\t}\n\t\tthis._sx = 0.5;\n\t\tthis._fw = 0;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height / 2;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tif (this._fh || this._sy === 0.5) {\n\t\t\tthis.y = y - this.height / 2;\n\t\t} else {\n\t\t\tif (this._sy) {\n\t\t\t\tthis.y += (y - this.y) * 2 * this._sy;\n\t\t\t}\n\t\t\tthis.height = (y - this.y) * 2;\n\t\t}\n\t\tthis._sy = 0.5;\n\t\tthis._fh = 0;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length === 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tepsilon = Base.read(arguments) || 0;\n\t\treturn rect.x + rect.width > this.x - epsilon\n\t\t\t\t&& rect.y + rect.height > this.y - epsilon\n\t\t\t\t&& rect.x < this.x + this.width + epsilon\n\t\t\t\t&& rect.y < this.y + this.height + epsilon;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join(''),\n\t\t\txFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis._set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\t_set: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key),\n\t\t\tinternal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn !!(this._owner._selection & 2);\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner._changeSelection) {\n\t\t\t\t\towner._changeSelection(2, selected);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg, _dontNotify) {\n\t\tvar args = arguments,\n\t\t\tcount = args.length,\n\t\t\tok = true;\n\t\tif (count >= 6) {\n\t\t\tthis._set.apply(this, args);\n\t\t} else if (count === 1 || count === 2) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis._set(arg._a, arg._b, arg._c, arg._d, arg._tx, arg._ty,\n\t\t\t\t\t\t_dontNotify);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis._set.apply(this,\n\t\t\t\t\t\t_dontNotify ? arg.concat([_dontNotify]) : arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (!count) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok) {\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t\t}\n\t\treturn this;\n\t},\n\n\tset: '#initialize',\n\n\t_set: function(a, b, c, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._b = b;\n\t\tthis._c = c;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.getValues(), options, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(25);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._c),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._b), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._b = this._c = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, Base.pick(recursively, true), _setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._c;\n\t\tthis._ty += x * this._b + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar args = arguments,\n\t\t\tscale = Point.read(args),\n\t\t\tcenter = Point.read(args, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._b *= scale.x;\n\t\tthis._c *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * c;\n\t\tthis._b = cos * b + sin * d;\n\t\tthis._c = -sin * a + cos * c;\n\t\tthis._d = -sin * b + cos * d;\n\t\tthis._tx += tx * a + ty * c;\n\t\tthis._ty += tx * b + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar args = arguments,\n\t\t\tshear = Point.read(args),\n\t\t\tcenter = Point.read(args, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tb = this._b;\n\t\tthis._a += shear.y * this._c;\n\t\tthis._b += shear.y * this._d;\n\t\tthis._c += shear.x * a;\n\t\tthis._d += shear.x * b;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar args = arguments,\n\t\t\tskew = Point.read(args),\n\t\t\tcenter = Point.read(args, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tappend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + c2 * c1;\n\t\t\tthis._c = b2 * a1 + d2 * c1;\n\t\t\tthis._b = a2 * b1 + c2 * d1;\n\t\t\tthis._d = b2 * b1 + d2 * d1;\n\t\t\tthis._tx += tx2 * a1 + ty2 * c1;\n\t\t\tthis._ty += tx2 * b1 + ty2 * d1;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tprepend: function(mx, _dontNotify) {\n\t\tif (mx) {\n\t\t\tvar a1 = this._a,\n\t\t\t\tb1 = this._b,\n\t\t\t\tc1 = this._c,\n\t\t\t\td1 = this._d,\n\t\t\t\ttx1 = this._tx,\n\t\t\t\tty1 = this._ty,\n\t\t\t\ta2 = mx._a,\n\t\t\t\tb2 = mx._c,\n\t\t\t\tc2 = mx._b,\n\t\t\t\td2 = mx._d,\n\t\t\t\ttx2 = mx._tx,\n\t\t\t\tty2 = mx._ty;\n\t\t\tthis._a = a2 * a1 + b2 * b1;\n\t\t\tthis._c = a2 * c1 + b2 * d1;\n\t\t\tthis._b = c2 * a1 + d2 * b1;\n\t\t\tthis._d = c2 * c1 + d2 * d1;\n\t\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\t\tif (!_dontNotify)\n\t\t\t\tthis._changed();\n\t\t}\n\t\treturn this;\n\t},\n\n\tappended: function(mx) {\n\t\treturn this.clone().append(mx);\n\t},\n\n\tprepended: function(mx) {\n\t\treturn this.clone().prepend(mx);\n\t},\n\n\tinvert: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tthis._a = d / det;\n\t\t\tthis._b = -b / det;\n\t\t\tthis._c = -c / det;\n\t\t\tthis._d = a / det;\n\t\t\tthis._tx = (c * ty - d * tx) / det;\n\t\t\tthis._ty = (b * tx - a * ty) / det;\n\t\t\tres = this;\n\t\t}\n\t\treturn res;\n\t},\n\n\tinverted: function() {\n\t\treturn this.clone().invert();\n\t},\n\n\tconcatenate: '#append',\n\tpreConcatenate: '#prepend',\n\tchain: '#appended',\n\n\t_shiftless: function() {\n\t\treturn new Matrix(this._a, this._b, this._c, this._d, 0, 0);\n\t},\n\n\t_orNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._b === 0 && this._c === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\tisInvertible: function() {\n\t\tvar det = this._a * this._d - this._c * this._b;\n\t\treturn det && !isNaN(det) && isFinite(this._tx) && isFinite(this._ty);\n\t},\n\n\tisSingular: function() {\n\t\treturn !this.isInvertible();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest._set(\n\t\t\t\tx * this._a + y * this._c + this._tx,\n\t\t\t\tx * this._b + y * this._d + this._ty,\n\t\t\t\t_dontNotify);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tfor (var i = 0, max = 2 * count; i < max; i += 2) {\n\t\t\tvar x = src[i],\n\t\t\t\ty = src[i + 1];\n\t\t\tdst[i] = x * this._a + y * this._c + this._tx;\n\t\t\tdst[i + 1] = x * this._b + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j]) {\n\t\t\t\tmin[j] = val;\n\t\t\t} else if (val > max[j]) {\n\t\t\t\tmax[j] = val;\n\t\t\t}\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest._set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\ttx = this._tx,\n\t\t\tty = this._ty,\n\t\t\tdet = a * d - b * c,\n\t\t\tres = null;\n\t\tif (det && !isNaN(det) && isFinite(tx) && isFinite(ty)) {\n\t\t\tvar x = point.x - this._tx,\n\t\t\t\ty = point.y - this._ty;\n\t\t\tif (!dest)\n\t\t\t\tdest = new Point();\n\t\t\tres = dest._set(\n\t\t\t\t\t(x * d - y * c) / det,\n\t\t\t\t\t(y * a - x * b) / det,\n\t\t\t\t\t_dontNotify);\n\t\t}\n\t\treturn res;\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d,\n\t\t\tdet = a * d - b * c,\n\t\t\tsqrt = Math.sqrt,\n\t\t\tatan2 = Math.atan2,\n\t\t\tdegrees = 180 / Math.PI,\n\t\t\trotate,\n\t\t\tscale,\n\t\t\tskew;\n\t\tif (a !== 0 || b !== 0) {\n\t\t\tvar r = sqrt(a * a + b * b);\n\t\t\trotate = Math.acos(a / r) * (b > 0 ? 1 : -1);\n\t\t\tscale = [r, det / r];\n\t\t\tskew = [atan2(a * c + b * d, r * r), 0];\n\t\t} else if (c !== 0 || d !== 0) {\n\t\t\tvar s = sqrt(c * c + d * d);\n\t\t\trotate = Math.asin(c / s)  * (d > 0 ? 1 : -1);\n\t\t\tscale = [det / s, s];\n\t\t\tskew = [0, atan2(a * c + b * d, s * s)];\n\t\t} else {\n\t\t\trotate = 0;\n\t\t\tskew = scale = [0, 0];\n\t\t}\n\t\treturn {\n\t\t\ttranslation: this.getTranslation(),\n\t\t\trotation: rotate * degrees,\n\t\t\tscaling: new Point(scale),\n\t\t\tskewing: new Point(skew[0] * degrees, skew[1] * degrees)\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._b, this._c, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn this.decompose().scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn this.decompose().rotation;\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tif (!this.isIdentity()) {\n\t\t\tctx.transform(this._a, this._b, this._c, this._d,\n\t\t\t\t\tthis._tx, this._ty);\n\t\t}\n\t}\n}, Base.each(['a', 'b', 'c', 'd', 'tx', 'ty'], function(key) {\n\tvar part = Base.capitalize(key),\n\t\tprop = '_' + key;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(this.getSignedDistance(point));\n\t},\n\n\tgetSignedDistance: function(point) {\n\t\treturn Line.getSignedDistance(this._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isMachineZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (!isInfinite && Numerical.isMachineZero(ccw)) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\t  return  vx === 0 ? (vy > 0 ? x - px : px - x)\n\t\t\t\t\t: vy === 0 ? (vx < 0 ? y - py : py - y)\n\t\t\t\t\t: ((x - px) * vy - (y - py) * vx) / (\n\t\t\t\t\t\tvy > vx\n\t\t\t\t\t\t\t? vy * Math.sqrt(1 + (vx * vx) / (vy * vy))\n\t\t\t\t\t\t\t: vx * Math.sqrt(1 + (vy * vy) / (vx * vx))\n\t\t\t\t\t);\n\t\t},\n\n\t\tgetDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\treturn Math.abs(\n\t\t\t\t\tLine.getSignedDistance(px, py, vx, vy, x, y, asVector));\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\t_compactSerialize: true,\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tthis._activeLayer = null;\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectionItems = {};\n\t\tthis._selectionCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this._children, options, true, dictionary);\n\t},\n\n\t_changed: function(flags, item) {\n\t\tif (flags & 1) {\n\t\t\tvar view = this._view;\n\t\t\tif (view) {\n\t\t\t\tview._needsUpdate = true;\n\t\t\t\tif (!view._requested && view._autoUpdate)\n\t\t\t\t\tview.requestUpdate();\n\t\t\t}\n\t\t}\n\t\tvar changes = this._changes;\n\t\tif (changes && item) {\n\t\t\tvar changesById = this._changesById,\n\t\t\t\tid = item._id,\n\t\t\t\tentry = changesById[id];\n\t\t\tif (entry) {\n\t\t\t\tentry.flags |= flags;\n\t\t\t} else {\n\t\t\t\tchanges.push(changesById[id] = { item: item, flags: flags });\n\t\t\t}\n\t\t}\n\t},\n\n\tclear: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--)\n\t\t\tchildren[i].remove();\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children.length;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.set(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetLayers: function() {\n\t\treturn this._children;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this, insert: true });\n\t},\n\n\tgetSymbolDefinitions: function() {\n\t\tvar definitions = [],\n\t\t\tids = {};\n\t\tthis.getItems({\n\t\t\tclass: SymbolItem,\n\t\t\tmatch: function(item) {\n\t\t\t\tvar definition = item._definition,\n\t\t\t\t\tid = definition._id;\n\t\t\t\tif (!ids[id]) {\n\t\t\t\t\tids[id] = true;\n\t\t\t\t\tdefinitions.push(definition);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t\treturn definitions;\n\t},\n\n\tgetSymbols: 'getSymbolDefinitions',\n\n\tgetSelectedItems: function() {\n\t\tvar selectionItems = this._selectionItems,\n\t\t\titems = [];\n\t\tfor (var id in selectionItems) {\n\t\t\tvar item = selectionItems[id],\n\t\t\t\tselection = item._selection;\n\t\t\tif ((selection & 1) && item.isInserted()) {\n\t\t\t\titems.push(item);\n\t\t\t} else if (!selection) {\n\t\t\t\tthis._updateSelection(item);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectionItems = this._selectionItems;\n\t\tif (item._selection) {\n\t\t\tif (selectionItems[id] !== item) {\n\t\t\t\tthis._selectionCount++;\n\t\t\t\tselectionItems[id] = item;\n\t\t\t}\n\t\t} else if (selectionItems[id] === item) {\n\t\t\tthis._selectionCount--;\n\t\t\tdelete selectionItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectionItems = this._selectionItems;\n\t\tfor (var i in selectionItems)\n\t\t\tselectionItems[i].setFullySelected(false);\n\t},\n\n\taddLayer: function(layer) {\n\t\treturn this.insertLayer(undefined, layer);\n\t},\n\n\tinsertLayer: function(index, layer) {\n\t\tif (layer instanceof Layer) {\n\t\t\tlayer._remove(false, true);\n\t\t\tBase.splice(this._children, [layer], index, 0);\n\t\t\tlayer._setProject(this, true);\n\t\t\tvar name = layer._name;\n\t\t\tif (name)\n\t\t\t\tlayer.setName(name);\n\t\t\tif (this._changes)\n\t\t\t\tlayer._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = layer;\n\t\t} else {\n\t\t\tlayer = null;\n\t\t}\n\t\treturn layer;\n\t},\n\n\t_insertItem: function(index, item, _created) {\n\t\titem = this.insertLayer(index, item)\n\t\t\t\t|| (this._activeLayer || this._insertItem(undefined,\n\t\t\t\t\t\tnew Layer(Item.NO_INSERT), true))\n\t\t\t\t\t\t.insertChild(index, item);\n\t\tif (_created && item.activate)\n\t\t\titem.activate();\n\t\treturn item;\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tremoveOn: function(type) {\n\t\tvar sets = this._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar children = this._children,\n\t\t\tparam = new Base({\n\t\t\t\toffset: new Point(0, 0),\n\t\t\t\tpixelRatio: pixelRatio,\n\t\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\t\tmatrices: [new Matrix()],\n\t\t\t\tupdateMatrix: true\n\t\t\t});\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].draw(ctx, param);\n\t\t}\n\t\tctx.restore();\n\n\t\tif (this._selectionCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectionItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items) {\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\t}\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = Base.set({},\n\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_name: null,\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_canScaleStroke: false,\n\t_pivot: null,\n\t_visible: true,\n\t_blendMode: 'normal',\n\t_opacity: 1,\n\t_locked: false,\n\t_guide: false,\n\t_clipMask: false,\n\t_selection: 0,\n\t_selectBounds: true,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tlocked: false,\n\t\tguide: false,\n\t\tclipMask: false,\n\t\tselected: false,\n\t\tdata: {}\n\t},\n\t_prioritize: ['applyMatrix']\n},\nnew function() {\n\tvar handlers = ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'];\n\treturn Base.each(handlers,\n\t\tfunction(name) {\n\t\t\tthis._events[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, 1);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._countItemEvent(type, -1);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\t_events: {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t\t},\n\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {},\n\t\t\t\tonError: {}\n\t\t\t},\n\t\t\tstatics: {\n\t\t\t\t_itemHandlers: handlers\n\t\t\t}\n\t\t}\n\t);\n}, {\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project,\n\t\t\tsettings = paper.settings;\n\t\tthis._id = internal ? null : UID.get();\n\t\tthis._parent = this._index = null;\n\t\tthis._applyMatrix = this._canApplyMatrix && settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (internal || hasProps && props.insert == false\n\t\t\t|| !settings.insertItems && !(hasProps && props.insert === true)) {\n\t\t\tthis._setProject(project);\n\t\t} else {\n\t\t\t(hasProps && props.parent || project)\n\t\t\t\t\t._insertItem(undefined, this, true);\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT) {\n\t\t\tthis.set(props, {\n\t\t\t\tinternal: true, insert: true, project: true, parent: true\n\t\t\t});\n\t\t}\n\t\treturn hasProps;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._symbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed = undefined;\n\t\t}\n\t\tif (flags & 16) {\n\t\t\tthis._globalMatrix = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 72)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project)\n\t\t\tproject._changed(flags, this);\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar owner = this._getOwner();\n\t\tif (name && owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren;\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tif (!(name in children))\n\t\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(256);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tkey = '_' + name,\n\t\t\tflags = {\n\t\t\t\tlocked: 256,\n\t\t\t\tvisible: 265\n\t\t\t};\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[key];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[key]) {\n\t\t\t\tthis[key] = value;\n\t\t\t\tthis._changed(flags[name] || 257);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tif (selection !== this._selection) {\n\t\t\tthis._selection = selection;\n\t\t\tvar project = this._project;\n\t\t\tif (project) {\n\t\t\t\tproject._updateSelection(this);\n\t\t\t\tthis._changed(257);\n\t\t\t}\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn !!(this._selection & 1);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisFullySelected: function() {\n\t\tvar children = this._children,\n\t\t\tselected = !!(this._selection & 1);\n\t\tif (children && selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis._changeSelection(1, selected);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(257);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(2048);\n\t\t}\n\t},\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\tvar position = this._position ||\n\t\t\t(this._position = this._getPositionFromBounds());\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\t_getPositionFromBounds: function(bounds) {\n\t\treturn this._pivot\n\t\t\t\t? this._matrix._transformPoint(this._pivot)\n\t\t\t\t: (bounds || this.getBounds()).getCenter(true);\n\t},\n\n\tgetPivot: function() {\n\t\tvar pivot = this._pivot;\n\t\treturn pivot\n\t\t\t\t? new LinkedPoint(pivot.x, pivot.y, this, 'setPivot')\n\t\t\t\t: null;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t}\n}, Base.each({\n\t\tgetStrokeBounds: { stroke: true },\n\t\tgetHandleBounds: { handle: true },\n\t\tgetInternalBounds: { internal: true }\n\t},\n\tfunction(options, key) {\n\t\tthis[key] = function(matrix) {\n\t\t\treturn this.getBounds(matrix, options);\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\tgetBounds: function(matrix, options) {\n\t\tvar hasMatrix = options || matrix instanceof Matrix,\n\t\t\topts = Base.set({}, hasMatrix ? options : matrix,\n\t\t\t\t\tthis._boundsOptions);\n\t\tif (!opts.stroke || this.getStrokeScaling())\n\t\t\topts.cacheItem = this;\n\t\tvar rect = this._getCachedBounds(hasMatrix && matrix, opts).rect;\n\t\treturn !arguments.length\n\t\t\t\t? new LinkedRectangle(rect.x, rect.y, rect.width, rect.height,\n\t\t\t\t\tthis, 'setBounds')\n\t\t\t\t: rect;\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\t_matrix = this._matrix,\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tif (!_matrix.isInvertible()) {\n\t\t\t\t_matrix.set(_matrix._backup\n\t\t\t\t\t\t|| new Matrix().translate(_matrix.getTranslation()));\n\t\t\t\tbounds = this.getBounds();\n\t\t\t}\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width !== 0 ? rect.width / bounds.width : 0,\n\t\t\t\t\tbounds.height !== 0 ? rect.height / bounds.height : 0);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar children = this._children;\n\t\tif (!children || !children.length)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, options.cacheItem);\n\t\treturn Item._getBounds(children, matrix, options);\n\t},\n\n\t_getBoundsCacheKey: function(options, internal) {\n\t\treturn [\n\t\t\toptions.stroke ? 1 : 0,\n\t\t\toptions.handle ? 1 : 0,\n\t\t\tinternal ? 1 : 0\n\t\t].join('');\n\t},\n\n\t_getCachedBounds: function(matrix, options, noInternal) {\n\t\tmatrix = matrix && matrix._orNullIfIdentity();\n\t\tvar internal = options.internal && !noInternal,\n\t\t\tcacheItem = options.cacheItem,\n\t\t\t_matrix = internal ? null : this._matrix._orNullIfIdentity(),\n\t\t\tcacheKey = cacheItem && (!matrix || matrix.equals(_matrix))\n\t\t\t\t&& this._getBoundsCacheKey(options, internal),\n\t\t\tbounds = this._bounds;\n\t\tItem._updateBoundsCache(this._parent || this._symbol, cacheItem);\n\t\tif (cacheKey && bounds && cacheKey in bounds) {\n\t\t\tvar cached = bounds[cacheKey];\n\t\t\treturn {\n\t\t\t\trect: cached.rect.clone(),\n\t\t\t\tnonscaling: cached.nonscaling\n\t\t\t};\n\t\t}\n\t\tvar res = this._getBounds(matrix || _matrix, options),\n\t\t\trect = res.rect || res,\n\t\t\tstyle = this._style,\n\t\t\tnonscaling = res.nonscaling || style.hasStroke()\n\t\t\t\t&& !style.getStrokeScaling();\n\t\tif (cacheKey) {\n\t\t\tif (!bounds) {\n\t\t\t\tthis._bounds = bounds = {};\n\t\t\t}\n\t\t\tvar cached = bounds[cacheKey] = {\n\t\t\t\trect: rect.clone(),\n\t\t\t\tnonscaling: nonscaling,\n\t\t\t\tinternal: internal\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\trect: rect,\n\t\t\tnonscaling: nonscaling\n\t\t};\n\t},\n\n\t_getStrokeMatrix: function(matrix, options) {\n\t\tvar parent = this.getStrokeScaling() ? null\n\t\t\t\t: options && options.internal ? this\n\t\t\t\t\t: this._parent || this._symbol && this._symbol._item,\n\t\t\tmx = parent ? parent.getViewMatrix().invert() : matrix;\n\t\treturn mx && mx._shiftless();\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent && item) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_getBounds: function(items, matrix, options) {\n\t\t\tvar x1 = Infinity,\n\t\t\t\tx2 = -x1,\n\t\t\t\ty1 = x1,\n\t\t\t\ty2 = x2,\n\t\t\t\tnonscaling = false;\n\t\t\toptions = options || {};\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (item._visible && !item.isEmpty(true)) {\n\t\t\t\t\tvar bounds = item._getCachedBounds(\n\t\t\t\t\t\tmatrix && matrix.appended(item._matrix), options, true),\n\t\t\t\t\t\trect = bounds.rect;\n\t\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t\t\tif (bounds.nonscaling)\n\t\t\t\t\t\tnonscaling = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\trect: isFinite(x1)\n\t\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t\t: new Rectangle(),\n\t\t\t\tnonscaling: nonscaling\n\t\t\t};\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._applyMatrix\n\t\t\t? null\n\t\t\t: this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decompose();\n\t\treturn decomposed ? decomposed.rotation : 0;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.rotation = rotation;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar decomposed = this._decompose(),\n\t\t\ts = decomposed && decomposed.scaling;\n\t\treturn new LinkedPoint(s ? s.x : 1, s ? s.y : 1, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling && !current.equals(scaling)) {\n\t\t\tvar rotation = this.getRotation(),\n\t\t\t\tdecomposed = this._decomposed,\n\t\t\t\tmatrix = new Matrix(),\n\t\t\t\tcenter = this.getPosition(true);\n\t\t\tmatrix.translate(center);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(rotation);\n\t\t\tmatrix.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tif (rotation)\n\t\t\t\tmatrix.rotate(-rotation);\n\t\t\tmatrix.translate(center.negate());\n\t\t\tthis.transform(matrix);\n\t\t\tif (decomposed) {\n\t\t\t\tdecomposed.scaling = scaling;\n\t\t\t\tthis._decomposed = decomposed;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix;\n\t\tif (matrix) {\n\t\t\tvar parent = this._parent;\n\t\t\tvar parents = [];\n\t\t\twhile (parent) {\n\t\t\t\tif (!parent._globalMatrix) {\n\t\t\t\t\tmatrix = null;\n\t\t\t\t\tfor (var i = 0, l = parents.length; i < l; i++) {\n\t\t\t\t\t\tparents[i]._globalMatrix = null;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tparents.push(parent);\n\t\t\t\tparent = parent._parent;\n\t\t\t}\n\t\t}\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.prepend(parent.getGlobalMatrix(true));\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetViewMatrix: function() {\n\t\treturn this.getGlobalMatrix().prepend(this.getView()._matrix);\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\t_getOwner: '#getParent',\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner && owner._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(options) {\n\t\tvar copy = new this.constructor(Item.NO_INSERT),\n\t\t\tchildren = this._children,\n\t\t\tinsert = Base.pick(options ? options.insert : undefined,\n\t\t\t\t\toptions === undefined || options === true),\n\t\t\tdeep = Base.pick(options ? options.deep : undefined, true);\n\t\tif (children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (!children || deep)\n\t\t\tcopy.copyContent(this);\n\t\tif (!children)\n\t\t\tcopy.copyAttributes(this);\n\t\tif (insert)\n\t\t\tcopy.insertAbove(this);\n\t\tvar name = this._name,\n\t\t\tparent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\tif (name !== orig)\n\t\t\t\tcopy.setName(name);\n\t\t}\n\t\treturn copy;\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar children = source._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tthis.addChild(children[i].clone(false), true);\n\t\t}\n\t},\n\n\tcopyAttributes: function(source, excludeMatrix) {\n\t\tthis.setStyle(source._style);\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'];\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (source.hasOwnProperty(key))\n\t\t\t\tthis[key] = source[key];\n\t\t}\n\t\tif (!excludeMatrix)\n\t\t\tthis._matrix.set(source._matrix, true);\n\t\tthis.setApplyMatrix(source._applyMatrix);\n\t\tthis.setPivot(source._pivot);\n\t\tthis.setSelection(source._selection);\n\t\tvar data = source._data,\n\t\t\tname = source._name;\n\t\tthis._data = data ? Base.clone(data) : null;\n\t\tif (name)\n\t\t\tthis.setName(name);\n\t},\n\n\trasterize: function(resolution, insert) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\tif (!size.isZero()) {\n\t\t\tvar canvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\t\tctx = canvas.getContext('2d'),\n\t\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\t\tctx.save();\n\t\t\tmatrix.applyToContext(ctx);\n\t\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\t\tctx.restore();\n\t\t\traster.setCanvas(canvas);\n\t\t}\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\tif (insert === undefined || insert)\n\t\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\tvar matrix = this._matrix;\n\t\treturn (\n\t\t\tmatrix.isInvertible() &&\n\t\t\t!!this._contains(matrix._inverseTransform(Point.read(arguments)))\n\t\t);\n\t},\n\n\t_contains: function(point) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tif (children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix, true).length > 0;\n\t}\n},\nnew function() {\n\tfunction hitTest() {\n\t\tvar args = arguments;\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(args),\n\t\t\t\tHitResult.getOptions(args));\n\t}\n\n\tfunction hitTestAll() {\n\t\tvar args = arguments,\n\t\t\tpoint = Point.read(args),\n\t\t\toptions = HitResult.getOptions(args),\n\t\t\tall = [];\n\t\tthis._hitTest(point, new Base({ all: all }, options));\n\t\treturn all;\n\t}\n\n\tfunction hitTestChildren(point, options, viewMatrix, _exclude) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\t\tvar child = children[i];\n\t\t\t\tvar res = child !== _exclude && child._hitTest(point, options,\n\t\t\t\t\t\tviewMatrix);\n\t\t\t\tif (res && !options.all)\n\t\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tProject.inject({\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTest: hitTestChildren\n\t});\n\n\treturn {\n\t\thitTest: hitTest,\n\t\thitTestAll: hitTestAll,\n\t\t_hitTestChildren: hitTestChildren,\n\t};\n}, {\n\n\t_hitTest: function(point, options, parentViewMatrix) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar matrix = this._matrix,\n\t\t\tviewMatrix = parentViewMatrix\n\t\t\t\t\t? parentViewMatrix.appended(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().prepend(this.getView()._matrix),\n\t\t\ttolerance = Math.max(options.tolerance, 1e-12),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\tPath._getStrokePadding(tolerance,\n\t\t\t\t\t\tmatrix._shiftless().invert()));\n\t\tpoint = matrix._inverseTransform(point);\n\t\tif (!point || !this._children &&\n\t\t\t!this.getBounds({ internal: true, stroke: true, handle: true })\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this.isSelected()\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tmatch = options.match,\n\t\t\tthat = this,\n\t\t\tbounds,\n\t\t\tres;\n\n\t\tfunction filter(hit) {\n\t\t\tif (hit && match && !match(hit))\n\t\t\t\thit = null;\n\t\t\tif (hit && options.all)\n\t\t\t\toptions.all.push(hit);\n\t\t\treturn hit;\n\t\t}\n\n\t\tfunction checkPoint(type, part) {\n\t\t\tvar pt = part ? bounds['get' + part]() : that.getPosition();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1) {\n\t\t\t\treturn new HitResult(type, that, {\n\t\t\t\t\tname: part ? Base.hyphenate(part) : type,\n\t\t\t\t\tpoint: pt\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar checkPosition = options.position,\n\t\t\tcheckCenter = options.center,\n\t\t\tcheckBounds = options.bounds;\n\t\tif (checkSelf && this._parent\n\t\t\t\t&& (checkPosition || checkCenter || checkBounds)) {\n\t\t\tif (checkCenter || checkBounds) {\n\t\t\t\tbounds = this.getInternalBounds();\n\t\t\t}\n\t\t\tres = checkPosition && checkPoint('position') ||\n\t\t\t\t\tcheckCenter && checkPoint('center', 'Center');\n\t\t\tif (!res && checkBounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++) {\n\t\t\t\t\tres = checkPoint('bounds', points[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres = filter(res);\n\t\t}\n\n\t\tif (!res) {\n\t\t\tres = this._hitTestChildren(point, options, viewMatrix)\n\t\t\t\t|| checkSelf\n\t\t\t\t\t&& filter(this._hitTestSelf(point, options, viewMatrix,\n\t\t\t\t\t\tthis.getStrokeScaling() ? null\n\t\t\t\t\t\t\t: viewMatrix._shiftless().invert()))\n\t\t\t\t|| null;\n\t\t}\n\t\tif (res && res.point) {\n\t\t\tres.point = matrix.transform(res.point);\n\t\t}\n\t\treturn res;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else if (name === 'match') {\n\t\t\treturn compare(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (name === 'class') {\n\t\t\t\tif (typeof compare === 'function')\n\t\t\t\t\treturn this instanceof compare;\n\t\t\t\tvalue = this._class;\n\t\t\t}\n\t\t\tif (typeof compare === 'function') {\n\t\t\t\treturn !!compare(value);\n\t\t\t} else if (compare) {\n\t\t\t\tif (compare.test) {\n\t\t\t\t\treturn compare.test(value);\n\t\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\t\treturn matchObject(compare, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Base.equals(value, compare);\n\t\t}\n\t},\n\n\tgetItems: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix);\n\t},\n\n\tgetItem: function(options) {\n\t\treturn Item._getItems(this, options, this._matrix, null, true)[0]\n\t\t\t\t|| null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(item, options, matrix, param, firstOnly) {\n\t\t\tif (!param) {\n\t\t\t\tvar obj = typeof options === 'object' && options,\n\t\t\t\t\toverlapping = obj && obj.overlapping,\n\t\t\t\t\tinside = obj && obj.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\trecursive: obj && obj.recursive !== false,\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (obj) {\n\t\t\t\t\toptions = Base.filter({}, options, {\n\t\t\t\t\t\trecursive: true, inside: true, overlapping: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar children = item._children,\n\t\t\t\titems = param.items,\n\t\t\t\trect = param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.appended(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(rect.contains(bounds)\n\t\t\t\t\t\t\t|| param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(options)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (param.recursive !== false) {\n\t\t\t\t\t_getItems(child, options, childMatrix, param, firstOnly);\n\t\t\t\t}\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this ? this.addChild(res) : res;\n\t},\n\n\taddChild: function(item) {\n\t\treturn this.insertChild(undefined, item);\n\t},\n\n\tinsertChild: function(index, item) {\n\t\tvar res = item ? this.insertChildren(index, [item]) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items) {\n\t\treturn this.insertChildren(this._children.length, items);\n\t},\n\n\tinsertChildren: function(index, items) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Base.slice(items);\n\t\t\tvar inserted = {};\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tid = item && item._id;\n\t\t\t\tif (!item || inserted[id]) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\titem._remove(false, true);\n\t\t\t\t\tinserted[id] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i],\n\t\t\t\t\tname = item._name;\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(project, true);\n\t\t\t\tif (name)\n\t\t\t\t\titem.setName(name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\titem._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertItem: '#insertChild',\n\n\t_insertAt: function(item, offset) {\n\t\tvar owner = item && item._getOwner(),\n\t\t\tres = item !== this && owner ? this : null;\n\t\tif (res) {\n\t\t\tres._remove(false, true);\n\t\t\towner._insertItem(item._index + offset, res);\n\t\t}\n\t\treturn res;\n\t},\n\n\tinsertAbove: function(item) {\n\t\treturn this._insertAt(item, 1);\n\t},\n\n\tinsertBelow: function(item) {\n\t\treturn this._insertAt(item, 0);\n\t},\n\n\tsendToBack: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(0, this) : null;\n\t},\n\n\tbringToFront: function() {\n\t\tvar owner = this._getOwner();\n\t\treturn owner ? owner._insertItem(undefined, this) : null;\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\taddTo: function(owner) {\n\t\treturn owner._insertItem(undefined, this);\n\t},\n\n\tcopyTo: function(owner) {\n\t\treturn this.clone(false).addTo(owner);\n\t},\n\n\treduce: function(options) {\n\t\tvar children = this._children;\n\t\tif (children && children.length === 1) {\n\t\t\tvar child = children[0].reduce(options);\n\t\t\tif (this._parent) {\n\t\t\t\tchild.insertAbove(this);\n\t\t\t\tthis.remove();\n\t\t\t} else {\n\t\t\t\tchild.remove();\n\t\t\t}\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar owner = this._getOwner();\n\t\tif (owner) {\n\t\t\tvar children = owner._children,\n\t\t\t\tnamedChildren = owner._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[0];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar owner = this._getOwner(),\n\t\t\tproject = this._project,\n\t\t\tindex = this._index;\n\t\tif (this._style)\n\t\t\tthis._style._dispose();\n\t\tif (owner) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (index != null) {\n\t\t\t\tif (project._activeLayer === this)\n\t\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\t\tBase.splice(owner._children, null, index, 1);\n\t\t\t}\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent)\n\t\t\t\towner._changed(11, this);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(start, end) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, start, end - start);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function(recursively) {\n\t\tvar children = this._children;\n\t\tvar numChildren = children ? children.length : 0;\n\t\tif (recursively) {\n\t\t\tfor (var i = 0; i < numChildren; i++) {\n\t\t\t\tif (!children[i].isEmpty(recursively)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn !numChildren;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent === item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar args = arguments,\n\t\t\tvalue = (rotate ? Base : Point).read(args),\n\t\t\tcenter = Point.read(args, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\ttransform: function(matrix, _applyRecursively, _setApplyMatrix) {\n\t\tvar _matrix = this._matrix,\n\t\t\ttransformMatrix = matrix && !matrix.isIdentity(),\n\t\t\tapplyMatrix = (\n\t\t\t\t_setApplyMatrix && this._canApplyMatrix ||\n\t\t\t\tthis._applyMatrix && (\n\t\t\t\t\ttransformMatrix || !_matrix.isIdentity() ||\n\t\t\t\t\t_applyRecursively && this._children\n\t\t\t\t)\n\t\t\t);\n\t\tif (!transformMatrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (transformMatrix) {\n\t\t\tif (!matrix.isInvertible() && _matrix.isInvertible())\n\t\t\t\t_matrix._backup = _matrix.getValues();\n\t\t\t_matrix.prepend(matrix, true);\n\t\t\tvar style = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(matrix);\n\t\t}\n\n\t\tif (applyMatrix && (applyMatrix = this._transformContent(\n\t\t\t\t_matrix, _applyRecursively, _setApplyMatrix))) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tif (transformMatrix || applyMatrix) {\n\t\t\tthis._changed(25);\n\t\t}\n\t\tvar decomp = transformMatrix && bounds && matrix.decompose();\n\t\tif (decomp && decomp.skewing.isZero() && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar cache = bounds[key];\n\t\t\t\tif (cache.nonscaling) {\n\t\t\t\t\tdelete bounds[key];\n\t\t\t\t} else if (applyMatrix || !cache.internal) {\n\t\t\t\t\tvar rect = cache.rect;\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._bounds = bounds;\n\t\t\tvar cached = bounds[this._getBoundsCacheKey(\n\t\t\t\tthis._boundsOptions || {})];\n\t\t\tif (cached) {\n\t\t\t\tthis._position = this._getPositionFromBounds(cached.rect);\n\t\t\t}\n\t\t} else if (transformMatrix && position && this._pivot) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].transform(matrix, applyRecursively, setApplyMatrix);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t}\n}), {\n\n\t_setStyles: function(ctx, param, viewMatrix) {\n\t\tvar style = this._style,\n\t\t\tmatrix = this._matrix;\n\t\tif (style.hasFill()) {\n\t\t\tctx.fillStyle = style.getFillColor().toCanvasStyle(ctx, matrix);\n\t\t}\n\t\tif (style.hasStroke()) {\n\t\t\tctx.strokeStyle = style.getStrokeColor().toCanvasStyle(ctx, matrix);\n\t\t\tctx.lineWidth = style.getStrokeWidth();\n\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\tif (strokeJoin)\n\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\tif (strokeCap)\n\t\t\t\tctx.lineCap = strokeCap;\n\t\t\tif (miterLimit)\n\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\tif (paper.support.nativeDash) {\n\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (style.hasShadow()) {\n\t\t\tvar pixelRatio = param.pixelRatio || 1,\n\t\t\t\tmx = viewMatrix._shiftless().prepend(\n\t\t\t\t\tnew Matrix().scale(pixelRatio, pixelRatio)),\n\t\t\t\tblur = mx.transform(new Point(style.getShadowBlur(), 0)),\n\t\t\t\toffset = mx.transform(this.getShadowOffset());\n\t\t\tctx.shadowColor = style.getShadowColor().toCanvasStyle(ctx);\n\t\t\tctx.shadowBlur = blur.getLength();\n\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\tctx.shadowOffsetY = offset.y;\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].appended(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tviewMatrix = viewMatrix ? viewMatrix.appended(globalMatrix)\n\t\t\t\t: globalMatrix;\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = Numerical.clamp(this._opacity, 0, 1),\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(viewMatrix);\n\t\t\tif (!bounds.width || !bounds.height) {\n\t\t\t\tmatrices.pop();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.appended(matrix)\n\t\t\t\t: this._canScaleStroke && !this.getStrokeScaling(true)\n\t\t\t\t\t&& viewMatrix,\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform) {\n\t\t\t(direct ? matrix : viewMatrix).applyToContext(ctx);\n\t\t}\n\t\tif (clip) {\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, viewMatrix, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish) {\n\t\t\tctx.clip(this.getFillRule());\n\t\t}\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectionItems, updateVersion) {\n\t\tvar selection = this._selection,\n\t\t\titemSelected = selection & 1,\n\t\t\tboundsSelected = selection & 2\n\t\t\t\t\t|| itemSelected && this._selectBounds,\n\t\t\tpositionSelected = selection & 4;\n\t\tif (!this._drawSelected)\n\t\t\titemSelected = false;\n\t\tif ((itemSelected || boundsSelected || positionSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar layer,\n\t\t\t\tcolor = this.getSelectedColor(true) || (layer = this.getLayer())\n\t\t\t\t\t&& layer.getSelectedColor(true),\n\t\t\t\tmx = matrix.appended(this.getGlobalMatrix(true)),\n\t\t\t\thalf = size / 2;\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (itemSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectionItems);\n\t\t\tif (positionSelected) {\n\t\t\t\tvar pos = this.getPosition(true),\n\t\t\t\t\tparent = this._parent,\n\t\t\t\t\tpoint = parent ? parent.localToGlobal(pos) : pos,\n\t\t\t\t\tx = point.x,\n\t\t\t\t\ty = point.y;\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(x, y, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.stroke();\n\t\t\t\tvar deltas = [[0, -1], [1, 0], [0, 1], [-1, 0]],\n\t\t\t\t\tstart = half,\n\t\t\t\t\tend = size + 1;\n\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\tvar delta = deltas[i],\n\t\t\t\t\t\tdx = delta[0],\n\t\t\t\t\t\tdy = delta[1];\n\t\t\t\t\tctx.moveTo(x + dx * start, y + dy * start);\n\t\t\t\t\tctx.lineTo(x + dx * end, y + dy * end);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (boundsSelected) {\n\t\t\t\tvar coords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx[!i ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(key) {\n\tthis['removeOn' + Base.capitalize(key)] = function() {\n\t\tvar hash = {};\n\t\thash[key] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}), {\n\ttween: function(from, to, options) {\n\t\tif (!options) {\n\t\t\toptions = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t\tif (!options) {\n\t\t\t\toptions = to;\n\t\t\t\tto = null;\n\t\t\t}\n\t\t}\n\t\tvar easing = options && options.easing,\n\t\t\tstart = options && options.start,\n\t\t\tduration = options != null && (\n\t\t\t\ttypeof options === 'number' ? options : options.duration\n\t\t\t),\n\t\t\ttween = new Tween(this, from, to, duration, easing, start);\n\t\tfunction onFrame(event) {\n\t\t\ttween._handleFrame(event.time * 1000);\n\t\t\tif (!tween.running) {\n\t\t\t\tthis.off('frame', onFrame);\n\t\t\t}\n\t\t}\n\t\tif (duration) {\n\t\t\tthis.on('frame', onFrame);\n\t\t}\n\t\treturn tween;\n\t},\n\n\ttweenTo: function(to, options) {\n\t\treturn this.tween(null, to, options);\n\t},\n\n\ttweenFrom: function(from, options) {\n\t\treturn this.tween(from, null, options);\n\t}\n});\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectBounds: false,\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 2050) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tif (children[i]._clipMask) {\n\t\t\t\t\tclipItem = children[i];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_getBounds: function _getBounds(matrix, options) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn clipItem\n\t\t\t? clipItem._getCachedBounds(clipItem._matrix.prepended(matrix),\n\t\t\t\tBase.set({}, options, { stroke: false }))\n\t\t\t: _getBounds.base.call(this, matrix, options);\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\tvar clipItem = this._getClipItem();\n\t\treturn (!clipItem || clipItem.contains(point))\n\t\t\t\t&& _hitTestChildren.base.call(this, point, options, viewMatrix,\n\t\t\t\t\tclipItem);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem();\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tctx.beginPath();\n\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar item = children[i];\n\t\t\tif (item !== clipItem)\n\t\t\t\titem.draw(ctx, param);\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer() {\n\t\tGroup.apply(this, arguments);\n\t},\n\n\t_getOwner: function() {\n\t\treturn this._parent || this._index != null && this._project;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_hitTestSelf: function() {\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_canScaleStroke: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props, point) {\n\t\tthis._initialize(props, point);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setType(source._type);\n\t\tthis.setSize(source._size);\n\t\tthis.setRadius(source._radius);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tthis._radius.set(Size.min(this._radius, size.divide(2).abs()));\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius._set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size._set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size._set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size._set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t});\n\t\tpath.copyAttributes(this);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\tif (insert === undefined || insert)\n\t\t\tpath.insertAbove(this);\n\t\treturn path;\n\t},\n\n\ttoShape: '#clone',\n\n\t_asPathItem: function() {\n\t\treturn this.toPath(false);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\tstyle = this._style,\n\t\t\tstrokeWidth = options.stroke && style.hasStroke()\n\t\t\t\t\t&& style.getStrokeWidth();\n\t\tif (matrix)\n\t\t\trect = matrix._transformBounds(rect);\n\t\treturn strokeWidth\n\t\t\t\t? rect.expand(Path._getStrokePadding(strokeWidth,\n\t\t\t\t\tthis._getStrokeMatrix(matrix, options)))\n\t\t\t\t: rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var q = 1; q <= 4; q++) {\n\t\t\t\tvar dir = new Point(q > 1 && q < 4 ? -1 : 1, q > 2 ? -1 : 1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(\n\t\t\t\t\t\t\texpand ? corner.add(dir.multiply(expand)) : corner,\n\t\t\t\t\t\t\tcenter);\n\t\t\t\tif (rect.contains(point))\n\t\t\t\t\treturn { point: center, quadrant: q };\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction isOnEllipseStroke(point, radius, padding, quadrant) {\n\t\tvar vector = point.divide(radius);\n\t\treturn (!quadrant || vector.isInQuadrant(quadrant)) &&\n\t\t\t\tvector.subtract(vector.normalize()).multiply(radius)\n\t\t\t\t\t.divide(padding).length <= 1;\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center.point).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options, viewMatrix,\n\t\t\t\tstrokeMatrix) {\n\t\t\tvar hit = false,\n\t\t\t\tstyle = this._style,\n\t\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\t\thitFill = options.fill && style.hasFill();\n\t\t\tif (hitStroke || hitFill) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeRadius = hitStroke ? style.getStrokeWidth() / 2 : 0,\n\t\t\t\t\tstrokePadding = options._tolerancePadding.add(\n\t\t\t\t\t\tPath._getStrokePadding(strokeRadius,\n\t\t\t\t\t\t\t!style.getStrokeScaling() && strokeMatrix));\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar padding = strokePadding.multiply(2),\n\t\t\t\t\t\tcenter = getCornerCenter(this, point, padding);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\thit = isOnEllipseStroke(point.subtract(center.point),\n\t\t\t\t\t\t\t\tradius, strokePadding, center.quadrant);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(padding),\n\t\t\t\t\t\t\tinner = rect.expand(padding.negate());\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thit = isOnEllipseStroke(point, radius, strokePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit ? new HitResult(hitStroke ? 'stroke' : 'fill', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = Base.create(Shape.prototype);\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\titem._initialize(Base.getNamed(args), point);\n\t\treturn item;\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tcenter = Point.readNamed(args, 'center'),\n\t\t\t\tradius = Base.readNamed(args, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targs);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar args = arguments,\n\t\t\t\trect = Rectangle.readNamed(args, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(args, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, args);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tellipse = Shape._readEllipse(args),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, args);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: false, handle: false },\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\t_prioritize: ['crossOrigin'],\n\t_smoothing: true,\n\tbeans: true,\n\n\tinitialize: function Raster(source, position) {\n\t\tif (!this._initialize(source,\n\t\t\t\tposition !== undefined && Point.read(arguments))) {\n\t\t\tvar image,\n\t\t\t\ttype = typeof source,\n\t\t\t\tobject = type === 'string'\n\t\t\t\t\t? document.getElementById(source)\n\t\t\t\t\t: type  === 'object'\n\t\t\t\t\t\t? source\n\t\t\t\t\t\t: null;\n\t\t\tif (object && object !== Item.NO_INSERT) {\n\t\t\t\tif (object.getContext || object.naturalHeight != null) {\n\t\t\t\t\timage = object;\n\t\t\t\t} else if (object) {\n\t\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\t\tif (!size.isZero()) {\n\t\t\t\t\t\timage = CanvasProvider.getCanvas(size);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (image) {\n\t\t\t\tthis.setImage(image);\n\t\t\t} else {\n\t\t\t\tthis.setSource(source);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tcopyContent: function(source) {\n\t\tvar image = source._image,\n\t\t\tcanvas = source._canvas;\n\t\tif (image) {\n\t\t\tthis._setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(source._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tthis._setImage(copyCanvas);\n\t\t}\n\t\tthis._crossOrigin = source._crossOrigin;\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis._setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tgetLoaded: function() {\n\t\treturn this._loaded;\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tvar that = this;\n\n\t\tfunction emit(event) {\n\t\t\tvar view = that.getView(),\n\t\t\t\ttype = event && event.type || 'load';\n\t\t\tif (view && that.responds(type)) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.emit(type, new Event(event));\n\t\t\t}\n\t\t}\n\n\t\tthis._setImage(image);\n\t\tif (this._loaded) {\n\t\t\tsetTimeout(emit, 0);\n\t\t} else if (image) {\n\t\t\tDomEvent.add(image, {\n\t\t\t\tload: function(event) {\n\t\t\t\t\tthat._setImage(image);\n\t\t\t\t\temit(event);\n\t\t\t\t},\n\t\t\t\terror: emit\n\t\t\t});\n\t\t}\n\t},\n\n\t_setImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = !!(image && image.src && image.complete);\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(1033);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(_change) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (_change) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(1025);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar image = new self.Image(),\n\t\t\tcrossOrigin = this._crossOrigin;\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (src)\n\t\t\timage.src = src;\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\tvar image = this._image;\n\t\treturn image && image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tvar image = this._image;\n\t\tif (image)\n\t\t\timage.crossOrigin = crossOrigin;\n\t},\n\n\tgetSmoothing: function() {\n\t\treturn this._smoothing;\n\t},\n\n\tsetSmoothing: function(smoothing) {\n\t\tthis._smoothing = smoothing;\n\t\tthis._changed(257);\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster._setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.prepend(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar image = this._image,\n\t\t\tsrc = image && image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (typeof object === 'object') {\n\t\t\tif ('width' in object) {\n\t\t\t\tbounds = new Rectangle(object);\n\t\t\t} else if ('x' in object) {\n\t\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t\t}\n\t\t}\n\t\tif (!bounds)\n\t\t\treturn null;\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar args = arguments,\n\t\t\tpoint = Point.read(args),\n\t\t\tcolor = Color.read(args),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tclear: function() {\n\t\tvar size = this._size;\n\t\tthis.getContext(true).clearRect(0, 0, size.width + 1, size.height + 1);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx, param, viewMatrix) {\n\t\tvar element = this.getElement();\n\t\tif (element && element.width > 0 && element.height > 0) {\n\t\t\tctx.globalAlpha = Numerical.clamp(this._opacity, 0, 1);\n\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\n\t\t\tDomElement.setPrefixed(\n\t\t\t\tctx, 'imageSmoothingEnabled', this._smoothing\n\t\t\t);\n\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar SymbolItem = Item.extend({\n\t_class: 'SymbolItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsOptions: { stroke: true },\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function SymbolItem(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setDefinition(arg0 instanceof SymbolDefinition ?\n\t\t\t\t\targ0 : new SymbolDefinition(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._definition === item._definition;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setDefinition(source._definition);\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(definition) {\n\t\tthis._definition = definition;\n\t\tthis._changed(9);\n\t},\n\n\tgetSymbol: '#getDefinition',\n\tsetSymbol: '#setDefinition',\n\n\tisEmpty: function() {\n\t\treturn this._definition._item.isEmpty();\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar item = this._definition._item;\n\t\treturn item._getCachedBounds(item._matrix.prepended(matrix), options);\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix) {\n\t\tvar opts = options.extend({ all: false });\n\t\tvar res = this._definition._item._hitTest(point, opts, viewMatrix);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis._definition._item.draw(ctx, param);\n\t}\n\n});\n\nvar SymbolDefinition = Base.extend({\n\t_class: 'SymbolDefinition',\n\n\tinitialize: function SymbolDefinition(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tif (item)\n\t\t\tthis.setItem(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._item],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8)\n\t\t\tItem._clearBoundsCache(this);\n\t\tif (flags & 1)\n\t\t\tthis.project._changed(flags);\n\t},\n\n\tgetItem: function() {\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item, _dontCenter) {\n\t\tif (item._symbol)\n\t\t\titem = item.clone();\n\t\tif (this._item)\n\t\t\tthis._item._symbol = null;\n\t\tthis._item = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._symbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tgetDefinition: '#getItem',\n\tsetDefinition: '#setItem',\n\n\tplace: function(position) {\n\t\treturn new SymbolItem(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new SymbolDefinition(this._item.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this._item.equals(symbol._item)\n\t\t\t\t|| false;\n\t}\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values)\n\t\t\tthis.inject(values);\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(args) {\n\t\t\tvar options = args && Base.read(args);\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tposition: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\t_selection: 0,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut, selection;\n\t\tif (count > 0) {\n\t\t\tif (arg0 == null || typeof arg0 === 'object') {\n\t\t\t\tif (count === 1 && arg0 && 'point' in arg0) {\n\t\t\t\t\tpoint = arg0.point;\n\t\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t\t\tselection = arg0.selection;\n\t\t\t\t} else {\n\t\t\t\t\tpoint = arg0;\n\t\t\t\t\thandleIn = arg1;\n\t\t\t\t\thandleOut = arg2;\n\t\t\t\t\tselection = arg3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tpoint = [ arg0, arg1 ];\n\t\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t\t}\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t\tif (selection)\n\t\t\tthis.setSelection(selection);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar point = this._point,\n\t\t\tselection = this._selection,\n\t\t\tobj = selection || this.hasHandles()\n\t\t\t\t\t? [point, this._handleIn, this._handleOut]\n\t\t\t\t\t: point;\n\t\tif (selection)\n\t\t\tobj.push(selection);\n\t\treturn Base.serialize(obj, options, true, dictionary);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(41);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tthis._point.set(Point.read(arguments));\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tthis._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tthis._handleOut.set(Point.read(arguments));\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tisSmooth: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut;\n\t\treturn !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t&& handleIn.isCollinear(handleOut);\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn._set(0, 0);\n\t\tthis._handleOut._set(0, 0);\n\t},\n\n\tgetSelection: function() {\n\t\treturn this._selection;\n\t},\n\n\tsetSelection: function(selection) {\n\t\tvar oldSelection = this._selection,\n\t\t\tpath = this._path;\n\t\tthis._selection = selection = selection || 0;\n\t\tif (path && selection !== oldSelection) {\n\t\t\tpath._updateSelection(this, oldSelection, selection);\n\t\t\tpath._changed(257);\n\t\t}\n\t},\n\n\t_changeSelection: function(flag, selected) {\n\t\tvar selection = this._selection;\n\t\tthis.setSelection(selected ? selection | flag : selection & ~flag);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._selection & 7);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._changeSelection(7, selected);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tsmooth: function(options, _first, _last) {\n\t\tvar opts = options || {},\n\t\t\ttype = opts.type,\n\t\t\tfactor = opts.factor,\n\t\t\tprev = this.getPrevious(),\n\t\t\tnext = this.getNext(),\n\t\t\tp0 = (prev || this)._point,\n\t\t\tp1 = this._point,\n\t\t\tp2 = (next || this)._point,\n\t\t\td1 = p0.getDistance(p1),\n\t\t\td2 = p1.getDistance(p2);\n\t\tif (!type || type === 'catmull-rom') {\n\t\t\tvar a = factor === undefined ? 0.5 : factor,\n\t\t\t\td1_a = Math.pow(d1, a),\n\t\t\t\td1_2a = d1_a * d1_a,\n\t\t\t\td2_a = Math.pow(d2, a),\n\t\t\t\td2_2a = d2_a * d2_a;\n\t\t\tif (!_first && prev) {\n\t\t\t\tvar A = 2 * d2_2a + 3 * d2_a * d1_a + d1_2a,\n\t\t\t\t\tN = 3 * d2_a * (d2_a + d1_a);\n\t\t\t\tthis.setHandleIn(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d2_2a * p0._x + A * p1._x - d1_2a * p2._x) / N - p1._x,\n\t\t\t\t\t\t(d2_2a * p0._y + A * p1._y - d1_2a * p2._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t\tif (!_last && next) {\n\t\t\t\tvar A = 2 * d1_2a + 3 * d1_a * d2_a + d2_2a,\n\t\t\t\t\tN = 3 * d1_a * (d1_a + d2_a);\n\t\t\t\tthis.setHandleOut(N !== 0\n\t\t\t\t\t? new Point(\n\t\t\t\t\t\t(d1_2a * p2._x + A * p1._x - d2_2a * p0._x) / N - p1._x,\n\t\t\t\t\t\t(d1_2a * p2._y + A * p1._y - d2_2a * p0._y) / N - p1._y)\n\t\t\t\t\t: new Point());\n\t\t\t}\n\t\t} else if (type === 'geometric') {\n\t\t\tif (prev && next) {\n\t\t\t\tvar vector = p0.subtract(p2),\n\t\t\t\t\tt = factor === undefined ? 0.4 : factor,\n\t\t\t\t\tk = t * d1 / (d1 + d2);\n\t\t\t\tif (!_first)\n\t\t\t\t\tthis.setHandleIn(vector.multiply(k));\n\t\t\t\tif (!_last)\n\t\t\t\t\tthis.setHandleOut(vector.multiply(k - t));\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error('Smoothing method \\'' + type + '\\' not supported.');\n\t\t}\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\ttmp = handleIn.clone();\n\t\thandleIn.set(handleOut);\n\t\thandleOut.set(tmp);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar u = 1 - factor,\n\t\t\tv = factor,\n\t\t\tpoint1 = from._point,\n\t\t\tpoint2 = to._point,\n\t\t\thandleIn1 = from._handleIn,\n\t\t\thandleIn2 = to._handleIn,\n\t\t\thandleOut2 = to._handleOut,\n\t\t\thandleOut1 = from._handleOut;\n\t\tthis._point._set(\n\t\t\t\tu * point1._x + v * point2._x,\n\t\t\t\tu * point1._y + v * point2._y, true);\n\t\tthis._handleIn._set(\n\t\t\t\tu * handleIn1._x + v * handleIn2._x,\n\t\t\t\tu * handleIn1._y + v * handleIn2._y, true);\n\t\tthis._handleOut._set(\n\t\t\t\tu * handleOut1._x + v * handleOut2._x,\n\t\t\t\tu * handleOut1._y + v * handleOut2._y, true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y,\n\t\t\tselected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\t_set: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn isZero(this._x) && isZero(this._y);\n\t},\n\n\tisSelected: function() {\n\t\treturn !!(this._owner._selection & this._getSelection());\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner._changeSelection(this._getSelection(), selected);\n\t},\n\n\t_getSelection: function() {\n\t\tvar owner = this._owner;\n\t\treturn this === owner._point ? 1\n\t\t\t: this === owner._handleIn ? 2\n\t\t\t: this === owner._handleOut ? 4\n\t\t\t: 0;\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\tbeans: true,\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (!count) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tclassify: function() {\n\t\treturn Curve.classify(this.getValues());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tthis._segment1._point.set(Point.read(arguments));\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tthis._segment2._point.set(Point.read(arguments));\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tthis._segment1._handleOut.set(Point.read(arguments));\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tthis._segment2._handleIn.set(Point.read(arguments));\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn !this._segment1._index;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t}\n}, {\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tdivideAt: function(location) {\n\t\treturn this.divideAtTime(location && location.curve === this\n\t\t\t\t? location.time : this.getTimeAt(location));\n\t},\n\n\tdivideAtTime: function(time, _setHandles) {\n\t\tvar tMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (time >= tMin && time <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), time),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tseg1 = this._segment1,\n\t\t\t\tseg2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tseg1._handleOut._set(left[2] - left[0], left[3] - left[1]);\n\t\t\t\tseg2._handleIn._set(right[4] - right[6],right[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(seg1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tthis._changed();\n\t\t\t\tres = new Curve(segment, seg2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar path = this._path;\n\t\treturn path ? path.splitAt(location) : null;\n\t},\n\n\tsplitAtTime: function(time) {\n\t\treturn this.splitAt(this.getLocationAtTime(time));\n\t},\n\n\tdivide: function(offset, isTime) {\n\t\treturn this.divideAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\tsplit: function(offset, isTime) {\n\t\treturn this.splitAtTime(offset === undefined ? 0.5 : isTime ? offset\n\t\t\t\t: this.getTimeAt(offset));\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut._set(0, 0);\n\t\tthis._segment2._handleIn._set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix, straight) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tx1 = p1.x, y1 = p1.y,\n\t\t\tx2 = p2.x, y2 = p2.y,\n\t\t\tvalues = straight\n\t\t\t\t? [ x1, y1, x1, y1, x2, y2, x2, y2 ]\n\t\t\t\t: [\n\t\t\t\t\tx1, y1,\n\t\t\t\t\tx1 + h1._x, y1 + h1._y,\n\t\t\t\t\tx2 + h2._x, y2 + h2._y,\n\t\t\t\t\tx2, y2\n\t\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tx4 = u * x0 + t * x1, y4 = u * y0 + t * y1,\n\t\t\tx5 = u * x1 + t * x2, y5 = u * y1 + t * y2,\n\t\t\tx6 = u * x2 + t * x3, y6 = u * y2 + t * y3,\n\t\t\tx7 = u * x4 + t * x5, y7 = u * y4 + t * y5,\n\t\t\tx8 = u * x5 + t * x6, y8 = u * y5 + t * y6,\n\t\t\tx9 = u * x7 + t * x8, y9 = u * y7 + t * y8;\n\t\treturn [\n\t\t\t[x0, y0, x4, y4, x7, y7, x9, y9],\n\t\t\t[x9, y9, x8, y8, x6, y6, x3, y3]\n\t\t];\n\t},\n\n\tgetMonoCurves: function(v, dir) {\n\t\tvar curves = [],\n\t\t\tio = dir ? 0 : 1,\n\t\t\to0 = v[io + 0],\n\t\t\to1 = v[io + 2],\n\t\t\to2 = v[io + 4],\n\t\t\to3 = v[io + 6];\n\t\tif ((o0 >= o1) === (o1 >= o2) && (o1 >= o2) === (o2 >= o3)\n\t\t\t\t|| Curve.isStraight(v)) {\n\t\t\tcurves.push(v);\n\t\t} else {\n\t\t\tvar a = 3 * (o1 - o2) - o0 + o3,\n\t\t\t\tb = 2 * (o0 + o2) - 4 * o1,\n\t\t\t\tc = o1 - o0,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [],\n\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\tif (!n) {\n\t\t\t\tcurves.push(v);\n\t\t\t} else {\n\t\t\t\troots.sort();\n\t\t\t\tvar t = roots[0],\n\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\tcurves.push(parts[0]);\n\t\t\t\tif (n > 1) {\n\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\tcurves.push(parts[0]);\n\t\t\t\t}\n\t\t\t\tcurves.push(parts[1]);\n\t\t\t}\n\t\t}\n\t\treturn curves;\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar v0 = v[coord],\n\t\t\tv1 = v[coord + 2],\n\t\t\tv2 = v[coord + 4],\n\t\t\tv3 = v[coord + 6],\n\t\t\tres = 0;\n\t\tif (  !(v0 < val && v3 < val && v1 < val && v2 < val ||\n\t\t\t\tv0 > val && v3 > val && v1 > val && v2 > val)) {\n\t\t\tvar c = 3 * (v1 - v0),\n\t\t\t\tb = 3 * (v2 - v1) - c,\n\t\t\t\ta = v3 - v0 - c - b;\n\t\t\tres = Numerical.solveCubic(a, b, c, v0 - val, roots, min, max);\n\t\t}\n\t\treturn res;\n\t},\n\n\tgetTimeOf: function(v, point) {\n\t\tvar p0 = new Point(v[0], v[1]),\n\t\t\tp3 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tt = point.isClose(p0, epsilon) ? 0\n\t\t\t  : point.isClose(p3, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t === null) {\n\t\t\tvar coords = [point.x, point.y],\n\t\t\t\troots = [];\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar u = roots[i];\n\t\t\t\t\tif (point.isClose(Curve.getPoint(v, u), geomEpsilon))\n\t\t\t\t\t\treturn u;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p0, geomEpsilon) ? 0\n\t\t\t : point.isClose(p3, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestTime: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tvx = x3 - x0, vy = y3 - y0,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - x0) * vx + (point.y - y0) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getTimeOf(v,\n\t\t\t\t\tnew Point(x0 + u * vx, y0 + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 1e-8) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\tisFlatEnough: function(v, flatness) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tux = 3 * x1 - 2 * x0 - x3,\n\t\t\tuy = 3 * y1 - 2 * y0 - y3,\n\t\t\tvx = 3 * x2 - 2 * x3 - x0,\n\t\t\tvy = 3 * y2 - 2 * y3 - y0;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t<= 16 * flatness * flatness;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn 3 * ((y3 - y0) * (x1 + x2) - (x3 - x0) * (y1 + y2)\n\t\t\t\t+ y1 * (x0 - x2) - x1 * (y0 - y2)\n\t\t\t\t+ y3 * (x2 + x0 / 3) - x3 * (y2 + y0 / 3)) / 20;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\n\t\tpadding /= 2;\n\t\tvar minPad = min[coord] - padding,\n\t\t\tmaxPad = max[coord] + padding;\n\t\tif (    v0 < minPad || v1 < minPad || v2 < minPad || v3 < minPad ||\n\t\t\t\tv0 > maxPad || v1 > maxPad || v2 > maxPad || v3 > maxPad) {\n\t\t\tif (v1 < v0 != v1 < v3 && v2 < v0 != v2 < v3) {\n\t\t\t\tadd(v0, padding);\n\t\t\t\tadd(v3, padding);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\t\t\tc = v1 - v0,\n\t\t\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\t\t\ttMin = 1e-8,\n\t\t\t\t\ttMax = 1 - tMin;\n\t\t\t\tadd(v3, 0);\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tvar t = roots[i],\n\t\t\t\t\t\tu = 1 - t;\n\t\t\t\t\tif (tMin <= t && t <= tMax)\n\t\t\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\t\t\tpadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false, this._path);\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(p1, h1, h2, p2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tvar v = p2.subtract(p1);\n\t\t\tif (v.isZero()) {\n\t\t\t\treturn false;\n\t\t\t} else if (v.isCollinear(h1) && v.isCollinear(h2)) {\n\t\t\t\tvar l = new Line(p1, p2),\n\t\t\t\t\tepsilon = 1e-7;\n\t\t\t\tif (l.getDistance(p1.add(h1)) < epsilon &&\n\t\t\t\t\tl.getDistance(p2.add(h2)) < epsilon) {\n\t\t\t\t\tvar div = v.dot(v),\n\t\t\t\t\t\ts1 = v.dot(h1) / div,\n\t\t\t\t\t\ts2 = v.dot(h2) / div;\n\t\t\t\t\treturn s1 >= 0 && s1 <= 1 && s2 <= 0 && s2 >= -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(p1, h1, h2, p2) {\n\t\tvar third = p2.subtract(p1).divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function(epsilon) {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg1._point, seg1._handleOut, seg2._handleIn, seg2._point,\n\t\t\t\tepsilon);\n\t};\n\n\tthis.statics[name] = function(v, epsilon) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx3 = v[6], y3 = v[7];\n\t\treturn test(\n\t\t\t\tnew Point(x0, y0),\n\t\t\t\tnew Point(v[2] - x0, v[3] - y0),\n\t\t\t\tnew Point(v[4] - x3, v[5] - y3),\n\t\t\t\tnew Point(x3, y3), epsilon);\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\thasLength: function(epsilon) {\n\t\treturn (!this.getPoint1().equals(this.getPoint2()) || this.hasHandles())\n\t\t\t\t&& this.getLength() > (epsilon || 0);\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).y)\n\t\t\t\t< 1e-8;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAtTime(0.5).x)\n\t\t\t\t< 1e-8;\n\t}\n}), {\n\tbeans: false,\n\n\tgetLocationAt: function(offset, _isTime) {\n\t\treturn this.getLocationAtTime(\n\t\t\t\t_isTime ? offset : this.getTimeAt(offset));\n\t},\n\n\tgetLocationAtTime: function(t) {\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetTimeAt: function(offset, start) {\n\t\treturn Curve.getTimeAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterAt: '#getTimeAt',\n\n\tgetTimesWithTangent: function () {\n\t\tvar tangent = Point.read(arguments);\n\t\treturn tangent.isZero()\n\t\t\t\t? []\n\t\t\t\t: Curve.getTimesWithTangent(this.getValues(), tangent);\n\t},\n\n\tgetOffsetAtTime: function(t) {\n\t\treturn this.getPartLength(0, t);\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAtTime(this.getTimeOf(Point.read(arguments)));\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetTimeOf: function() {\n\t\treturn Curve.getTimeOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetParameterOf: '#getTimeOf',\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestTime(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\t\tfunction(name) {\n\t\t\tthis[name + 'At'] = function(location, _isTime) {\n\t\t\t\tvar values = this.getValues();\n\t\t\t\treturn Curve[name](values, _isTime ? location\n\t\t\t\t\t\t: Curve.getTimeAt(values, location));\n\t\t\t};\n\n\t\t\tthis[name + 'AtTime'] = function(time) {\n\t\t\t\treturn Curve[name](this.getValues(), time);\n\t\t\t};\n\t\t}, {\n\t\t\tstatics: {\n\t\t\t\t_evaluateMethods: methods\n\t\t\t}\n\t\t}\n\t);\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\n\t\t\tax = 9 * (x1 - x2) + 3 * (x3 - x0),\n\t\t\tbx = 6 * (x0 + x2) - 12 * x1,\n\t\t\tcx = 3 * (x1 - x0),\n\n\t\t\tay = 9 * (y1 - y2) + 3 * (y3 - y0),\n\t\t\tby = 6 * (y0 + y2) - 12 * y1,\n\t\t\tcy = 3 * (y1 - y0);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tisZero = Numerical.isZero;\n\t\tif (isZero(x1 - x0) && isZero(y1 - y0)) {\n\t\t\tx1 = x0;\n\t\t\ty1 = y0;\n\t\t}\n\t\tif (isZero(x2 - x3) && isZero(y2 - y3)) {\n\t\t\tx2 = x3;\n\t\t\ty2 = y3;\n\t\t}\n\t\tvar cx = 3 * (x1 - x0),\n\t\t\tbx = 3 * (x2 - x1) - cx,\n\t\t\tax = x3 - x0 - cx - bx,\n\t\t\tcy = 3 * (y1 - y0),\n\t\t\tby = 3 * (y2 - y1) - cy,\n\t\t\tay = y3 - y0 - cy - by,\n\t\t\tx, y;\n\t\tif (type === 0) {\n\t\t\tx = t === 0 ? x0 : t === 1 ? x3\n\t\t\t\t\t: ((ax * t + bx) * t + cx) * t + x0;\n\t\t\ty = t === 0 ? y0 : t === 1 ? y3\n\t\t\t\t\t: ((ay * t + by) * t + cy) * t + y0;\n\t\t} else {\n\t\t\tvar tMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin;\n\t\t\tif (t < tMin) {\n\t\t\t\tx = cx;\n\t\t\t\ty = cy;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tx = 3 * (x3 - x2);\n\t\t\t\ty = 3 * (y3 - y2);\n\t\t\t} else {\n\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t}\n\t\t\tif (normalized) {\n\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\tx = x2 - x1;\n\t\t\t\t\ty = y2 - y1;\n\t\t\t\t}\n\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\tif (len) {\n\t\t\t\t\tx /= len;\n\t\t\t\t\ty /= len;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (type === 3) {\n\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\ty = 0;\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tclassify: function(v) {\n\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\ta1 = x0 * (y3 - y2) + y0 * (x2 - x3) + x3 * y2 - y3 * x2,\n\t\t\t\ta2 = x1 * (y0 - y3) + y1 * (x3 - x0) + x0 * y3 - y0 * x3,\n\t\t\t\ta3 = x2 * (y1 - y0) + y2 * (x0 - x1) + x1 * y0 - y1 * x0,\n\t\t\t\td3 = 3 * a3,\n\t\t\t\td2 = d3 - a2,\n\t\t\t\td1 = d2 - a2 + a1,\n\t\t\t\tl = Math.sqrt(d1 * d1 + d2 * d2 + d3 * d3),\n\t\t\t\ts = l !== 0 ? 1 / l : 0,\n\t\t\t\tisZero = Numerical.isZero,\n\t\t\t\tserpentine = 'serpentine';\n\t\t\td1 *= s;\n\t\t\td2 *= s;\n\t\t\td3 *= s;\n\n\t\t\tfunction type(type, t1, t2) {\n\t\t\t\tvar hasRoots = t1 !== undefined,\n\t\t\t\t\tt1Ok = hasRoots && t1 > 0 && t1 < 1,\n\t\t\t\t\tt2Ok = hasRoots && t2 > 0 && t2 < 1;\n\t\t\t\tif (hasRoots && (!(t1Ok || t2Ok)\n\t\t\t\t\t\t|| type === 'loop' && !(t1Ok && t2Ok))) {\n\t\t\t\t\ttype = 'arch';\n\t\t\t\t\tt1Ok = t2Ok = false;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: type,\n\t\t\t\t\troots: t1Ok || t2Ok\n\t\t\t\t\t\t\t? t1Ok && t2Ok\n\t\t\t\t\t\t\t\t? t1 < t2 ? [t1, t2] : [t2, t1]\n\t\t\t\t\t\t\t\t: [t1Ok ? t1 : t2]\n\t\t\t\t\t\t\t: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (isZero(d1)) {\n\t\t\t\treturn isZero(d2)\n\t\t\t\t\t\t? type(isZero(d3) ? 'line' : 'quadratic')\n\t\t\t\t\t\t: type(serpentine, d3 / (3 * d2));\n\t\t\t}\n\t\t\tvar d = 3 * d2 * d2 - 4 * d1 * d3;\n\t\t\tif (isZero(d)) {\n\t\t\t\treturn type('cusp', d2 / (2 * d1));\n\t\t\t}\n\t\t\tvar f1 = d > 0 ? Math.sqrt(d / 3) : Math.sqrt(-d),\n\t\t\t\tf2 = 2 * d1;\n\t\t\treturn type(d > 0 ? serpentine : 'loop',\n\t\t\t\t\t(d2 + f1) / f2,\n\t\t\t\t\t(d2 - f1) / f2);\n\t\t},\n\n\t\tgetLength: function(v, a, b, ds) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tvar c = v;\n\t\t\t\tif (b < 1) {\n\t\t\t\t\tc = Curve.subdivide(c, b)[0];\n\t\t\t\t\ta /= b;\n\t\t\t\t}\n\t\t\t\tif (a > 0) {\n\t\t\t\t\tc = Curve.subdivide(c, a)[1];\n\t\t\t\t}\n\t\t\t\tvar dx = c[6] - c[0],\n\t\t\t\t\tdy = c[7] - c[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\treturn Numerical.integrate(ds || getLengthIntegrand(v), a, b,\n\t\t\t\t\tgetIterations(a, b));\n\t\t},\n\n\t\tgetTimeAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0;\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Curve.getLength(v, a, b, ds),\n\t\t\t\tdiff = abs(offset) - rangeLength;\n\t\t\tif (abs(diff) < epsilon) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (diff > epsilon) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t},\n\n\t\tgetPeaks: function(v) {\n\t\t\tvar x0 = v[0], y0 = v[1],\n\t\t\t\tx1 = v[2], y1 = v[3],\n\t\t\t\tx2 = v[4], y2 = v[5],\n\t\t\t\tx3 = v[6], y3 = v[7],\n\t\t\t\tax =     -x0 + 3 * x1 - 3 * x2 + x3,\n\t\t\t\tbx =  3 * x0 - 6 * x1 + 3 * x2,\n\t\t\t\tcx = -3 * x0 + 3 * x1,\n\t\t\t\tay =     -y0 + 3 * y1 - 3 * y2 + y3,\n\t\t\t\tby =  3 * y0 - 6 * y1 + 3 * y2,\n\t\t\t\tcy = -3 * y0 + 3 * y1,\n\t\t\t\ttMin = 1e-8,\n\t\t\t\ttMax = 1 - tMin,\n\t\t\t\troots = [];\n\t\t\tNumerical.solveCubic(\n\t\t\t\t\t9 * (ax * ax + ay * ay),\n\t\t\t\t\t9 * (ax * bx + by * ay),\n\t\t\t\t\t2 * (bx * bx + by * by) + 3 * (cx * ax + cy * ay),\n\t\t\t\t\t(cx * bx + by * cy),\n\t\t\t\t\troots, tMin, tMax);\n\t\t\treturn roots.sort();\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, include, c1, t1, c2, t2, overlap) {\n\t\tvar excludeStart = !overlap && c1.getPrevious() === c2,\n\t\t\texcludeEnd = !overlap && c1 !== c2 && c1.getNext() === c2,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 !== null && t1 >= (excludeStart ? tMin : 0) &&\n\t\t\tt1 <= (excludeEnd ? tMax : 1)) {\n\t\t\tif (t2 !== null && t2 >= (excludeEnd ? tMin : 0) &&\n\t\t\t\tt2 <= (excludeStart ? tMax : 1)) {\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1, null, overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2, null, overlap);\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc1)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc1, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, include, flip,\n\t\t\trecursion, calls, tMin, tMax, uMin, uMax) {\n\t\tif (++calls >= 4096 || ++recursion >= 40)\n\t\t\treturn calls;\n\t\tvar fatLineEpsilon = 1e-9,\n\t\t\tq0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif (d1 === 0 && d2 === 0\n\t\t\t\t&& dp0 === 0 && dp1 === 0 && dp2 === 0 && dp3 === 0\n\t\t\t|| (tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null\n\t\t\t|| (tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn calls;\n\t\tvar tMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (Math.max(uMax - uMin, tMaxNew - tMinNew) < fatLineEpsilon) {\n\t\t\tvar t = (tMinNew + tMaxNew) / 2,\n\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tflip ? c2 : c1, flip ? u : t,\n\t\t\t\t\tflip ? c1 : c2, flip ? t : u);\n\t\t} else {\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\tvar uDiff = uMax - uMin;\n\t\t\tif (tMaxClip - tMinClip > 0.8) {\n\t\t\t\tif (tMaxNew - tMinNew > uDiff) {\n\t\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\t\tt = (tMinNew + tMaxNew) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[0], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, t);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, parts[1], c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, t, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\t\tu = (uMin + uMax) / 2;\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[0], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, u, tMinNew, tMaxNew);\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tparts[1], v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, u, uMax, tMinNew, tMaxNew);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (uDiff === 0 || uDiff >= fatLineEpsilon) {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv2, v1, c2, c1, locations, include, !flip,\n\t\t\t\t\t\t\trecursion, calls, uMin, uMax, tMinNew, tMaxNew);\n\t\t\t\t} else {\n\t\t\t\t\tcalls = addCurveIntersections(\n\t\t\t\t\t\t\tv1, v2, c1, c2, locations, include, flip,\n\t\t\t\t\t\t\trecursion, calls, tMinNew, tMaxNew, uMin, uMax);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn calls;\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= 0.5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction getCurveLineIntersections(v, px, py, vx, vy) {\n\t\tvar isZero = Numerical.isZero;\n\t\tif (isZero(vx) && isZero(vy)) {\n\t\t\tvar t = Curve.getTimeOf(v, new Point(px, py));\n\t\t\treturn t === null ? [] : [t];\n\t\t}\n\t\tvar angle = Math.atan2(-vy, vx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trv = [],\n\t\t\troots = [];\n\t\tfor (var i = 0; i < 8; i += 2) {\n\t\t\tvar x = v[i] - px,\n\t\t\t\ty = v[i + 1] - py;\n\t\t\trv.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tCurve.solveCubic(rv, 1, 0, roots, 0, 1);\n\t\treturn roots;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, include,\n\t\t\tflip) {\n\t\tvar x1 = v2[0], y1 = v2[1],\n\t\t\tx2 = v2[6], y2 = v2[7],\n\t\t\troots = getCurveLineIntersections(v1, x1, y1, x2 - x1, y2 - y1);\n\t\tfor (var i = 0, l = roots.length; i < l; i++) {\n\t\t\tvar t1 = roots[i],\n\t\t\t\tp1 = Curve.getPoint(v1, t1),\n\t\t\t\tt2 = Curve.getTimeOf(v2, p1);\n\t\t\tif (t2 !== null) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tflip ? c2 : c1, flip ? t2 : t1,\n\t\t\t\t\t\tflip ? c1 : c2, flip ? t1 : t2);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, include) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, Curve.getTimeOf(v1, pt),\n\t\t\t\t\tc2, Curve.getTimeOf(v2, pt));\n\t\t}\n\t}\n\n\tfunction getCurveIntersections(v1, v2, c1, c2, locations, include) {\n\t\tvar epsilon = 1e-12,\n\t\t\tmin = Math.min,\n\t\t\tmax = Math.max;\n\n\t\tif (max(v1[0], v1[2], v1[4], v1[6]) + epsilon >\n\t\t\tmin(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmin(v1[0], v1[2], v1[4], v1[6]) - epsilon <\n\t\t\tmax(v2[0], v2[2], v2[4], v2[6]) &&\n\t\t\tmax(v1[1], v1[3], v1[5], v1[7]) + epsilon >\n\t\t\tmin(v2[1], v2[3], v2[5], v2[7]) &&\n\t\t\tmin(v1[1], v1[3], v1[5], v1[7]) - epsilon <\n\t\t\tmax(v2[1], v2[3], v2[5], v2[7])) {\n\t\t\tvar overlaps = getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\tc1, overlap[0],\n\t\t\t\t\t\t\tc2, overlap[1], true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\t\tflip = straight1 && !straight2,\n\t\t\t\t\tbefore = locations.length;\n\t\t\t\t(straight\n\t\t\t\t\t? addLineIntersection\n\t\t\t\t\t: straight1 || straight2\n\t\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\t\tflip ? v2 : v1, flip ? v1 : v2,\n\t\t\t\t\t\t\tflip ? c2 : c1, flip ? c1 : c2,\n\t\t\t\t\t\t\tlocations, include, flip,\n\t\t\t\t\t\t\t0, 0, 0, 1, 0, 1);\n\t\t\t\tif (!straight || locations.length === before) {\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\t\t\tvar t1 = i >> 1,\n\t\t\t\t\t\t\tt2 = i & 1,\n\t\t\t\t\t\t\ti1 = t1 * 6,\n\t\t\t\t\t\t\ti2 = t2 * 6,\n\t\t\t\t\t\t\tp1 = new Point(v1[i1], v1[i1 + 1]),\n\t\t\t\t\t\t\tp2 = new Point(v2[i2], v2[i2 + 1]);\n\t\t\t\t\t\tif (p1.isClose(p2, epsilon)) {\n\t\t\t\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\t\t\t\tc1, t1,\n\t\t\t\t\t\t\t\t\tc2, t2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getSelfIntersection(v1, c1, locations, include) {\n\t\tvar info = Curve.classify(v1);\n\t\tif (info.type === 'loop') {\n\t\t\tvar roots = info.roots;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tc1, roots[0],\n\t\t\t\t\tc1, roots[1]);\n\t\t}\n\t  return locations;\n\t}\n\n\tfunction getIntersections(curves1, curves2, include, matrix1, matrix2,\n\t\t\t_returnFirst) {\n\t\tvar epsilon = 1e-7,\n\t\t\tself = !curves2;\n\t\tif (self)\n\t\t\tcurves2 = curves1;\n\t\tvar length1 = curves1.length,\n\t\t\tlength2 = curves2.length,\n\t\t\tvalues1 = new Array(length1),\n\t\t\tvalues2 = self ? values1 : new Array(length2),\n\t\t\tlocations = [];\n\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvalues1[i] = curves1[i].getValues(matrix1);\n\t\t}\n\t\tif (!self) {\n\t\t\tfor (var i = 0; i < length2; i++) {\n\t\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\t\t}\n\t\t}\n\t\tvar boundsCollisions = CollisionDetection.findCurveBoundsCollisions(\n\t\t\t\tvalues1, values2, epsilon);\n\t\tfor (var index1 = 0; index1 < length1; index1++) {\n\t\t\tvar curve1 = curves1[index1],\n\t\t\t\tv1 = values1[index1];\n\t\t\tif (self) {\n\t\t\t\tgetSelfIntersection(v1, curve1, locations, include);\n\t\t\t}\n\t\t\tvar collisions1 = boundsCollisions[index1];\n\t\t\tif (collisions1) {\n\t\t\t\tfor (var j = 0; j < collisions1.length; j++) {\n\t\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\t\treturn locations;\n\t\t\t\t\tvar index2 = collisions1[j];\n\t\t\t\t\tif (!self || index2 > index1) {\n\t\t\t\t\t\tvar curve2 = curves2[index2],\n\t\t\t\t\t\t\tv2 = values2[index2];\n\t\t\t\t\t\tgetCurveIntersections(\n\t\t\t\t\t\t\t\tv1, v2, curve1, curve2, locations, include);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn locations;\n\t}\n\n\tfunction getOverlaps(v1, v2) {\n\n\t\tfunction getSquaredLineLength(v) {\n\t\t\tvar x = v[6] - v[0],\n\t\t\t\ty = v[7] - v[1];\n\t\t\treturn x * x + y * y;\n\t\t}\n\n\t\tvar abs = Math.abs,\n\t\t\tgetDistance = Line.getDistance,\n\t\t\ttimeEpsilon = 1e-8,\n\t\t\tgeomEpsilon = 1e-7,\n\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\tstraightBoth = straight1 && straight2,\n\t\t\tflip = getSquaredLineLength(v1) < getSquaredLineLength(v2),\n\t\t\tl1 = flip ? v2 : v1,\n\t\t\tl2 = flip ? v1 : v2,\n\t\t\tpx = l1[0], py = l1[1],\n\t\t\tvx = l1[6] - px, vy = l1[7] - py;\n\t\tif (getDistance(px, py, vx, vy, l2[0], l2[1], true) < geomEpsilon &&\n\t\t\tgetDistance(px, py, vx, vy, l2[6], l2[7], true) < geomEpsilon) {\n\t\t\tif (!straightBoth &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[2], l1[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l1[4], l1[5], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[2], l2[3], true) < geomEpsilon &&\n\t\t\t\tgetDistance(px, py, vx, vy, l2[4], l2[5], true) < geomEpsilon) {\n\t\t\t\tstraight1 = straight2 = straightBoth = true;\n\t\t\t}\n\t\t} else if (straightBoth) {\n\t\t\treturn null;\n\t\t}\n\t\tif (straight1 ^ straight2) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar v = [v1, v2],\n\t\t\tpairs = [];\n\t\tfor (var i = 0; i < 4 && pairs.length < 2; i++) {\n\t\t\tvar i1 = i & 1,\n\t\t\t\ti2 = i1 ^ 1,\n\t\t\t\tt1 = i >> 1,\n\t\t\t\tt2 = Curve.getTimeOf(v[i1], new Point(\n\t\t\t\t\tv[i2][t1 ? 6 : 0],\n\t\t\t\t\tv[i2][t1 ? 7 : 1]));\n\t\t\tif (t2 != null) {\n\t\t\t\tvar pair = i1 ? [t1, t2] : [t2, t1];\n\t\t\t\tif (!pairs.length ||\n\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon) {\n\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i > 2 && !pairs.length)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (pairs.length !== 2) {\n\t\t\tpairs = null;\n\t\t} else if (!straightBoth) {\n\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\tpairs = null;\n\t\t}\n\t\treturn pairs;\n\t}\n\n\tfunction getTimesWithTangent(v, tangent) {\n\t\tvar x0 = v[0], y0 = v[1],\n\t\t\tx1 = v[2], y1 = v[3],\n\t\t\tx2 = v[4], y2 = v[5],\n\t\t\tx3 = v[6], y3 = v[7],\n\t\t\tnormalized = tangent.normalize(),\n\t\t\ttx = normalized.x,\n\t\t\tty = normalized.y,\n\t\t\tax = 3 * x3 - 9 * x2 + 9 * x1 - 3 * x0,\n\t\t\tay = 3 * y3 - 9 * y2 + 9 * y1 - 3 * y0,\n\t\t\tbx = 6 * x2 - 12 * x1 + 6 * x0,\n\t\t\tby = 6 * y2 - 12 * y1 + 6 * y0,\n\t\t\tcx = 3 * x1 - 3 * x0,\n\t\t\tcy = 3 * y1 - 3 * y0,\n\t\t\tden = 2 * ax * ty - 2 * ay * tx,\n\t\t\ttimes = [];\n\t\tif (Math.abs(den) < Numerical.CURVETIME_EPSILON) {\n\t\t\tvar num = ax * cy - ay * cx,\n\t\t\t\tden = ax * by - ay * bx;\n\t\t\tif (den != 0) {\n\t\t\t\tvar t = -num / den;\n\t\t\t\tif (t >= 0 && t <= 1) times.push(t);\n\t\t\t}\n\t\t} else {\n\t\t\tvar delta = (bx * bx - 4 * ax * cx) * ty * ty +\n\t\t\t\t(-2 * bx * by + 4 * ay * cx + 4 * ax * cy) * tx * ty +\n\t\t\t\t(by * by - 4 * ay * cy) * tx * tx,\n\t\t\t\tk = bx * ty - by * tx;\n\t\t\tif (delta >= 0 && den != 0) {\n\t\t\t\tvar d = Math.sqrt(delta),\n\t\t\t\t\tt0 = -(k + d) / den,\n\t\t\t\t\tt1 = (-k + d) / den;\n\t\t\t\tif (t0 >= 0 && t0 <= 1) times.push(t0);\n\t\t\t\tif (t1 >= 0 && t1 <= 1) times.push(t1);\n\t\t\t}\n\t\t}\n\t\treturn times;\n\t}\n\n\treturn {\n\t\tgetIntersections: function(curve) {\n\t\t\tvar v1 = this.getValues(),\n\t\t\t\tv2 = curve && curve !== this && curve.getValues();\n\t\t\treturn v2 ? getCurveIntersections(v1, v2, this, curve, [])\n\t\t\t\t\t  : getSelfIntersection(v1, this, []);\n\t\t},\n\n\t\tstatics: {\n\t\t\tgetOverlaps: getOverlaps,\n\t\t\tgetIntersections: getIntersections,\n\t\t\tgetCurveLineIntersections: getCurveLineIntersections,\n\t\t\tgetTimesWithTangent: getTimesWithTangent\n\t\t}\n\t};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\n\tinitialize: function CurveLocation(curve, time, point, _overlap, _distance) {\n\t\tif (time >= 0.99999999) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\ttime = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._setCurve(curve);\n\t\tthis._time = time;\n\t\tthis._point = point || curve.getPointAtTime(time);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._previous = null;\n\t},\n\n\t_setPath: function(path) {\n\t\tthis._path = path;\n\t\tthis._version = path ? path._version : 0;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tthis._setPath(curve._path);\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tvar curve = segment.getCurve();\n\t\tif (curve) {\n\t\t\tthis._setCurve(curve);\n\t\t} else {\n\t\t\tthis._setPath(segment._path);\n\t\t\tthis._segment1 = segment;\n\t\t\tthis._segment2 = null;\n\t\t}\n\t\tthis._segment = segment;\n\t\tthis._time = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar segment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tif (time === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (time != null) {\n\t\t\t\tsegment = curve.getPartLength(0, time)\n\t\t\t\t\t< curve.getPartLength(time, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tthis._time = this._offset = this._curveOffset = this._curve = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._time = curve.getTimeOf(that._point)) != null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn this._curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetTime: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this._time;\n\t\treturn curve && time == null\n\t\t\t? this._time = curve.getTimeOf(this._point)\n\t\t\t: time;\n\t},\n\n\tgetParameter: '#getTime',\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar offset = this._curveOffset;\n\t\tif (offset == null) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\ttime = this.getTime();\n\t\t\tthis._curveOffset = offset = time != null && curve\n\t\t\t\t\t&& curve.getPartLength(0, time);\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = curve && curve.divideAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tpath = curve._path,\n\t\t\tres = curve && curve.splitAtTime(this.getTime());\n\t\tif (res) {\n\t\t\tthis._setSegment(path.getLastSegment());\n\t\t}\n\t\treturn  res;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc;\n\t\tif (!res && loc instanceof CurveLocation) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tp1 = c1._path,\n\t\t\t\tp2 = c2._path;\n\t\t\tif (p1 === p2) {\n\t\t\t\tvar abs = Math.abs,\n\t\t\t\t\tepsilon = 1e-7,\n\t\t\t\t\tdiff = abs(this.getOffset() - loc.getOffset()),\n\t\t\t\t\ti1 = !_ignoreOther && this._intersection,\n\t\t\t\t\ti2 = !_ignoreOther && loc._intersection;\n\t\t\t\tres = (diff < epsilon\n\t\t\t\t\t\t|| p1 && abs(p1.getLength() - diff) < epsilon)\n\t\t\t\t\t&& (!i1 && !i2 || i1 && i2 && i1.equals(i2, true));\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar time = this.getTime();\n\t\tif (time != null)\n\t\t\tparts.push('time: ' + f.number(time));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getTime(),\n\t\t\tt2 = inter.getTime(),\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tt1Inside = t1 >= tMin && t1 <= tMax,\n\t\t\tt2Inside = t2 >= tMin && t2 <= tMax;\n\t\tif (t1Inside && t2Inside)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2 && t1 < tMin ? c2.getPrevious() : c2,\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4 && t2 < tMin ? c4.getPrevious() : c4;\n\t\tif (t1 > tMax)\n\t\t\tc2 = c2.getNext();\n\t\tif (t2 > tMax)\n\t\t\tc4 = c4.getNext();\n\t\tif (!c1 || !c2 || !c3 || !c4)\n\t\t\treturn false;\n\n\t\tvar offsets = [];\n\n\t\tfunction addOffsets(curve, end) {\n\t\t\tvar v = curve.getValues(),\n\t\t\t\troots = Curve.classify(v).roots || Curve.getPeaks(v),\n\t\t\t\tcount = roots.length,\n\t\t\t\toffset = Curve.getLength(v,\n\t\t\t\t\tend && count ? roots[count - 1] : 0,\n\t\t\t\t\t!end && count ? roots[0] : 1);\n\t\t\toffsets.push(count ? offset : offset / 32);\n\t\t}\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t\t? angle > min && angle < max\n\t\t\t\t\t: angle > min || angle < max;\n\t\t}\n\n\t\tif (!t1Inside) {\n\t\t\taddOffsets(c1, true);\n\t\t\taddOffsets(c2, false);\n\t\t}\n\t\tif (!t2Inside) {\n\t\t\taddOffsets(c3, true);\n\t\t\taddOffsets(c4, false);\n\t\t}\n\t\tvar pt = this.getPoint(),\n\t\t\toffset = Math.min.apply(Math, offsets),\n\t\t\tv2 = t1Inside ? c2.getTangentAtTime(t1)\n\t\t\t\t\t: c2.getPointAt(offset).subtract(pt),\n\t\t\tv1 = t1Inside ? v2.negate()\n\t\t\t\t\t: c1.getPointAt(-offset).subtract(pt),\n\t\t\tv4 = t2Inside ? c4.getTangentAtTime(t2)\n\t\t\t\t\t: c4.getPointAt(offset).subtract(pt),\n\t\t\tv3 = t2Inside ? v4.negate()\n\t\t\t\t\t: c3.getPointAt(-offset).subtract(pt),\n\t\t\ta1 = v1.getAngle(),\n\t\t\ta2 = v2.getAngle(),\n\t\t\ta3 = v3.getAngle(),\n\t\t\ta4 = v4.getAngle();\n\t\treturn !!(t1Inside\n\t\t\t\t? (isInRange(a1, a3, a4) ^ isInRange(a2, a3, a4)) &&\n\t\t\t\t  (isInRange(a1, a4, a3) ^ isInRange(a2, a4, a3))\n\t\t\t\t: (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2)) &&\n\t\t\t\t  (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1)));\n\t},\n\n\thasOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve._evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar curve = this.getCurve(),\n\t\t\ttime = this.getTime();\n\t\treturn time != null && curve && curve[get](time, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t1e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 !== path2\n\t\t\t\t? path1._id - path2._id\n\t\t\t\t: (loc.getIndex() + loc.getTime())\n\t\t\t\t- (loc2.getIndex() + loc2.getTime());\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\t_selectBounds: false,\n\t_canScaleStroke: true,\n\tbeans: true,\n\n\tinitialize: function PathItem() {\n\t},\n\n\tstatics: {\n\t\tcreate: function(arg) {\n\t\t\tvar data,\n\t\t\t\tsegments,\n\t\t\t\tcompound;\n\t\t\tif (Base.isPlainObject(arg)) {\n\t\t\t\tsegments = arg.segments;\n\t\t\t\tdata = arg.pathData;\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tsegments = arg;\n\t\t\t} else if (typeof arg === 'string') {\n\t\t\t\tdata = arg;\n\t\t\t}\n\t\t\tif (segments) {\n\t\t\t\tvar first = segments[0];\n\t\t\t\tcompound = first && Array.isArray(first[0]);\n\t\t\t} else if (data) {\n\t\t\t\tcompound = (data.match(/m/gi) || []).length > 1\n\t\t\t\t\t\t|| /z\\s*\\S+/i.test(data);\n\t\t\t}\n\t\t\tvar ctor = compound ? CompoundPath : Path;\n\t\t\treturn new ctor(arg);\n\t\t}\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tisClockwise: function() {\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data && data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis[move ? 'moveTo' : 'lineTo'](current = getPoint(j));\n\t\t\t\t\tif (move) {\n\t\t\t\t\t\tstart = current;\n\t\t\t\t\t\tmove = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tcurrent = current.clone();\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(1e-12);\n\t\t\t\tcurrent = start;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = point.isInside(\n\t\t\t\tthis.getBounds({ internal: true, handle: true }))\n\t\t\t\t\t? this._getWinding(point)\n\t\t\t\t\t: {};\n\t\treturn winding.onPath || !!(this.getFillRule() === 'evenodd'\n\t\t\t\t? winding.windingL & 1 || winding.windingR & 1\n\t\t\t\t: winding.winding);\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix._orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix)._orNullIfIdentity();\n\t\treturn self || this.getBounds(matrix1).intersects(\n\t\t\t\tpath.getBounds(matrix2), 1e-12)\n\t\t\t\t? Curve.getIntersections(\n\t\t\t\t\t\tthis.getCurves(), !self && path.getCurves(), include,\n\t\t\t\t\t\tmatrix1, matrix2, _returnFirst)\n\t\t\t\t: [];\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isCrossing();\n\t\t});\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\tvar loc = this.getNearestLocation.apply(this, arguments);\n\t\treturn loc ? loc.getPoint() : loc;\n\t},\n\n\tinterpolate: function(from, to, factor) {\n\t\tvar isPath = !this._children,\n\t\t\tname = isPath ? '_segments' : '_children',\n\t\t\titemsFrom = from[name],\n\t\t\titemsTo = to[name],\n\t\t\titems = this[name];\n\t\tif (!itemsFrom || !itemsTo || itemsFrom.length !== itemsTo.length) {\n\t\t\tthrow new Error('Invalid operands in interpolate() call: ' +\n\t\t\t\t\tfrom + ', ' + to);\n\t\t}\n\t\tvar current = items.length,\n\t\t\tlength = itemsTo.length;\n\t\tif (current < length) {\n\t\t\tvar ctor = isPath ? Segment : Path;\n\t\t\tfor (var i = current; i < length; i++) {\n\t\t\t\tthis.add(new ctor());\n\t\t\t}\n\t\t} else if (current > length) {\n\t\t\tthis[isPath ? 'removeSegments' : 'removeChildren'](length, current);\n\t\t}\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\titems[i].interpolate(itemsFrom[i], itemsTo[i], factor);\n\t\t}\n\t\tif (isPath) {\n\t\t\tthis.setClosed(from._closed);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tcompare: function(path) {\n\t\tvar ok = false;\n\t\tif (path) {\n\t\t\tvar paths1 = this._children || [this],\n\t\t\t\tpaths2 = path._children ? path._children.slice() : [path],\n\t\t\t\tlength1 = paths1.length,\n\t\t\t\tlength2 = paths2.length,\n\t\t\t\tmatched = [],\n\t\t\t\tcount = 0;\n\t\t\tok = true;\n\t\t\tvar boundsOverlaps = CollisionDetection.findItemBoundsCollisions(paths1, paths2, Numerical.GEOMETRIC_EPSILON);\n\t\t\tfor (var i1 = length1 - 1; i1 >= 0 && ok; i1--) {\n\t\t\t\tvar path1 = paths1[i1];\n\t\t\t\tok = false;\n\t\t\t\tvar pathBoundsOverlaps = boundsOverlaps[i1];\n\t\t\t\tif (pathBoundsOverlaps) {\n\t\t\t\t\tfor (var i2 = pathBoundsOverlaps.length - 1; i2 >= 0 && !ok; i2--) {\n\t\t\t\t\t\tif (path1.compare(paths2[pathBoundsOverlaps[i2]])) {\n\t\t\t\t\t\t\tif (!matched[pathBoundsOverlaps[i2]]) {\n\t\t\t\t\t\t\t\tmatched[pathBoundsOverlaps[i2]] = true;\n\t\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tok = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tok = ok && count === length2;\n\t\t}\n\t\treturn ok;\n\t},\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar args = arguments,\n\t\t\tsegments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: args\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? args\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._segmentSelection = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setSegments(source._segments);\n\t\tthis._closed = source._closed;\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tthis._length = this._area = undefined;\n\t\t\tif (flags & 32) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 64) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected(),\n\t\t\tlength = segments && segments.length;\n\t\tthis._segments.length = 0;\n\t\tthis._segmentSelection = 0;\n\t\tthis._curves = undefined;\n\t\tif (length) {\n\t\t\tvar last = segments[length - 1];\n\t\t\tif (typeof last === 'boolean') {\n\t\t\t\tthis.setClosed(last);\n\t\t\t\tlength--;\n\t\t\t}\n\t\t\tthis._add(Segment.readList(segments, 0, {}, length));\n\t\t}\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(41);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine) {\n\t\t\t\t\t\tvar dx = curX - prevX,\n\t\t\t\t\t\t\tdy = curY - prevY;\n\t\t\t\t\t\tparts.push(\n\t\t\t\t\t\t\t  dx === 0 ? 'v' + f.number(dy)\n\t\t\t\t\t\t\t: dy === 0 ? 'h' + f.number(dx)\n\t\t\t\t\t\t\t: 'l' + f.pair(dx, dy));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair( inX - prevX,  inY - prevY)\n\t\t\t\t\t\t\t + ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (!length)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._segments.length;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar segments = this._segments,\n\t\t\tcoords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selection);\n\t\t}\n\t\tif (append) {\n\t\t\tBase.push(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tstart = index > 0 && index + amount - 1 === total ? index - 1\n\t\t\t\t\t: index,\n\t\t\t\tinsert = start,\n\t\t\t\tend = Math.min(start + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [start, 0].concat(segs._curves));\n\t\t\t\tinsert += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = insert; i < end; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(start, end);\n\t\t}\n\t\tthis._changed(41);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(start, end) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && !start ? segments.length - 1\n\t\t\t\t: start - 1]) {\n\t\t\tcurve._segment2 = segments[start] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[end]) {\n\t\t\tcurve._segment1 = segments[end];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\tvar args = arguments;\n\t\treturn args.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(args))\n\t\t\t: this._add([ Segment.read(args) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\tvar args = arguments;\n\t\treturn args.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readList(args, 1), index)\n\t\t\t: this._add([ Segment.read(args, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readList(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readList(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(start, end, _includeCurves) {\n\t\tstart = start || 0;\n\t\tend = Base.pick(end, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(start, end - start),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selection)\n\t\t\t\tthis._updateSelection(segment, segment._selection, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = start, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = start > 0 && end === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? start - 1\n\t\t\t\t\t: start,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\t\tcurves[i]._path = null;\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(41);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar area = this._area;\n\t\tif (area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tclosed = this._closed;\n\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar last = i + 1 === l;\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[last ? 0 : i + 1],\n\t\t\t\t\t\tnull, last && !closed));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this.isSelected() && length > 0 && this._segmentSelection\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelection: function setSelection(selection) {\n\t\tif (!(selection & 1))\n\t\t\tthis._selectSegments(false);\n\t\tsetSelection.base.call(this, selection);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tselection = selected ? 7 : 0;\n\t\tthis._segmentSelection = selection * length;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tsegments[i]._selection = selection;\n\t},\n\n\t_updateSelection: function(segment, oldSelection, newSelection) {\n\t\tsegment._selection = newSelection;\n\t\tvar selection = this._segmentSelection += newSelection - oldSelection;\n\t\tif (selection > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tdivideAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tcurve;\n\t\treturn loc && (curve = loc.getCurve().divideAt(loc.getCurveOffset()))\n\t\t\t\t? curve._segment1\n\t\t\t\t: null;\n\t},\n\n\tsplitAt: function(location) {\n\t\tvar loc = this.getLocationAt(location),\n\t\t\tindex = loc && loc.index,\n\t\t\ttime = loc && loc.time,\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin;\n\t\tif (time > tMax) {\n\t\t\tindex++;\n\t\t\ttime = 0;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (time >= tMin) {\n\t\t\t\tcurves[index++].divideAtTime(time);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this);\n\t\t\t\tpath.copyAttributes(this);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tsplit: function(index, time) {\n\t\tvar curve,\n\t\t\tlocation = time === undefined ? index\n\t\t\t\t: (curve = this.getCurves()[index])\n\t\t\t\t\t&& curve.getLocationAtTime(time);\n\t\treturn location != null ? this.splitAt(location) : null;\n\t},\n\n\tjoin: function(path, tolerance) {\n\t\tvar epsilon = tolerance || 0;\n\t\tif (path && path !== this) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.isClose(last2._point, epsilon))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.isClose(first2._point, epsilon)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.isClose(first2._point, epsilon))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.isClose(last2._point, epsilon)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.isClose(last._point, epsilon)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\treduce: function(options) {\n\t\tvar curves = this.getCurves(),\n\t\t\tsimplify = options && options.simplify,\n\t\t\ttolerance = simplify ? 1e-7 : 0;\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (!curve.hasLength(tolerance)\n\t\t\t\t\t|| simplify && curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tthis._changed(9);\n\t},\n\n\tflatten: function(flatness) {\n\t\tvar flattener = new PathFlattener(this, flatness || 0.25, 256, true),\n\t\t\tparts = flattener.parts,\n\t\t\tlength = parts.length,\n\t\t\tsegments = [];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tsegments.push(new Segment(parts[i].curve.slice(0, 2)));\n\t\t}\n\t\tif (!this._closed && length > 0) {\n\t\t\tsegments.push(new Segment(parts[length - 1].curve.slice(6)));\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tvar segments = new PathFitter(this).fit(tolerance || 2.5);\n\t\tif (segments)\n\t\t\tthis.setSegments(segments);\n\t\treturn !!segments;\n\t},\n\n\tsmooth: function(options) {\n\t\tvar that = this,\n\t\t\topts = options || {},\n\t\t\ttype = opts.type || 'asymmetric',\n\t\t\tsegments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tclosed = this._closed;\n\n\t\tfunction getIndex(value, _default) {\n\t\t\tvar index = value && value.index;\n\t\t\tif (index != null) {\n\t\t\t\tvar path = value.path;\n\t\t\t\tif (path && path !== that)\n\t\t\t\t\tthrow new Error(value._class + ' ' + index + ' of ' + path\n\t\t\t\t\t\t\t+ ' is not part of ' + that);\n\t\t\t\tif (_default && value instanceof Curve)\n\t\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tindex = typeof value === 'number' ? value : _default;\n\t\t\t}\n\t\t\treturn Math.min(index < 0 && closed\n\t\t\t\t\t? index % length\n\t\t\t\t\t: index < 0 ? index + length : index, length - 1);\n\t\t}\n\n\t\tvar loop = closed && opts.from === undefined && opts.to === undefined,\n\t\t\tfrom = getIndex(opts.from, 0),\n\t\t\tto = getIndex(opts.to, length - 1);\n\n\t\tif (from > to) {\n\t\t\tif (closed) {\n\t\t\t\tfrom -= length;\n\t\t\t} else {\n\t\t\t\tvar tmp = from;\n\t\t\t\tfrom = to;\n\t\t\t\tto = tmp;\n\t\t\t}\n\t\t}\n\t\tif (/^(?:asymmetric|continuous)$/.test(type)) {\n\t\t\tvar asymmetric = type === 'asymmetric',\n\t\t\t\tmin = Math.min,\n\t\t\t\tamount = to - from + 1,\n\t\t\t\tn = amount - 1,\n\t\t\t\tpadding = loop ? min(amount, 4) : 1,\n\t\t\t\tpaddingLeft = padding,\n\t\t\t\tpaddingRight = padding,\n\t\t\t\tknots = [];\n\t\t\tif (!closed) {\n\t\t\t\tpaddingLeft = min(1, from);\n\t\t\t\tpaddingRight = min(1, length - to - 1);\n\t\t\t}\n\t\t\tn += paddingLeft + paddingRight;\n\t\t\tif (n <= 1)\n\t\t\t\treturn;\n\t\t\tfor (var i = 0, j = from - paddingLeft; i <= n; i++, j++) {\n\t\t\t\tknots[i] = segments[(j < 0 ? j + length : j) % length]._point;\n\t\t\t}\n\n\t\t\tvar x = knots[0]._x + 2 * knots[1]._x,\n\t\t\t\ty = knots[0]._y + 2 * knots[1]._y,\n\t\t\t\tf = 2,\n\t\t\t\tn_1 = n - 1,\n\t\t\t\trx = [x],\n\t\t\t\try = [y],\n\t\t\t\trf = [f],\n\t\t\t\tpx = [],\n\t\t\t\tpy = [];\n\t\t\tfor (var i = 1; i < n; i++) {\n\t\t\t\tvar internal = i < n_1,\n\t\t\t\t\ta = internal ? 1 : asymmetric ? 1 : 2,\n\t\t\t\t\tb = internal ? 4 : asymmetric ? 2 : 7,\n\t\t\t\t\tu = internal ? 4 : asymmetric ? 3 : 8,\n\t\t\t\t\tv = internal ? 2 : asymmetric ? 0 : 1,\n\t\t\t\t\tm = a / f;\n\t\t\t\tf = rf[i] = b - m;\n\t\t\t\tx = rx[i] = u * knots[i]._x + v * knots[i + 1]._x - m * x;\n\t\t\t\ty = ry[i] = u * knots[i]._y + v * knots[i + 1]._y - m * y;\n\t\t\t}\n\n\t\t\tpx[n_1] = rx[n_1] / rf[n_1];\n\t\t\tpy[n_1] = ry[n_1] / rf[n_1];\n\t\t\tfor (var i = n - 2; i >= 0; i--) {\n\t\t\t\tpx[i] = (rx[i] - px[i + 1]) / rf[i];\n\t\t\t\tpy[i] = (ry[i] - py[i + 1]) / rf[i];\n\t\t\t}\n\t\t\tpx[n] = (3 * knots[n]._x - px[n_1]) / 2;\n\t\t\tpy[n] = (3 * knots[n]._y - py[n_1]) / 2;\n\n\t\t\tfor (var i = paddingLeft, max = n - paddingRight, j = from;\n\t\t\t\t\ti <= max; i++, j++) {\n\t\t\t\tvar segment = segments[j < 0 ? j + length : j],\n\t\t\t\t\tpt = segment._point,\n\t\t\t\t\thx = px[i] - pt._x,\n\t\t\t\t\thy = py[i] - pt._y;\n\t\t\t\tif (loop || i < max)\n\t\t\t\t\tsegment.setHandleOut(hx, hy);\n\t\t\t\tif (loop || i > paddingLeft)\n\t\t\t\t\tsegment.setHandleIn(-hx, -hy);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = from; i <= to; i++) {\n\t\t\t\tsegments[i < 0 ? i + length : i].smooth(opts,\n\t\t\t\t\t\t!loop && i === from, !loop && i === to);\n\t\t\t}\n\t\t}\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t});\n\t\t\tshape.copyAttributes(this, true);\n\t\t\tshape._matrix.prepend(this._matrix);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\tif (insert === undefined || insert)\n\t\t\t\tshape.insertAbove(this);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\ttoPath: '#clone',\n\n\tcompare: function compare(path) {\n\t\tif (!path || path instanceof CompoundPath)\n\t\t\treturn compare.base.call(this, path);\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = curves2.length;\n\t\tif (!length1 || !length2) {\n\t\t\treturn length1 == length2;\n\t\t}\n\t\tvar v1 = curves1[0].getValues(),\n\t\t\tvalues2 = [],\n\t\t\tpos1 = 0, pos2,\n\t\t\tend1 = 0, end2;\n\t\tfor (var i = 0; i < length2; i++) {\n\t\t\tvar v2 = curves2[i].getValues();\n\t\t\tvalues2.push(v2);\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tpos2 = !i && overlaps[0][0] > 0 ? length2 - 1 : i;\n\t\t\t\tend2 = overlaps[0][1];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar abs = Math.abs,\n\t\t\tepsilon = 1e-8,\n\t\t\tv2 = values2[pos2],\n\t\t\tstart2;\n\t\twhile (v1 && v2) {\n\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\tif (overlaps) {\n\t\t\t\tvar t1 = overlaps[0][0];\n\t\t\t\tif (abs(t1 - end1) < epsilon) {\n\t\t\t\t\tend1 = overlaps[1][0];\n\t\t\t\t\tif (end1 === 1) {\n\t\t\t\t\t\tv1 = ++pos1 < length1 ? curves1[pos1].getValues() : null;\n\t\t\t\t\t\tend1 = 0;\n\t\t\t\t\t}\n\t\t\t\t\tvar t2 = overlaps[0][1];\n\t\t\t\t\tif (abs(t2 - end2) < epsilon) {\n\t\t\t\t\t\tif (!start2)\n\t\t\t\t\t\t\tstart2 = [pos2, t2];\n\t\t\t\t\t\tend2 = overlaps[1][1];\n\t\t\t\t\t\tif (end2 === 1) {\n\t\t\t\t\t\t\tif (++pos2 >= length2)\n\t\t\t\t\t\t\t\tpos2 = 0;\n\t\t\t\t\t\t\tv2 = values2[pos2] || curves2[pos2].getValues();\n\t\t\t\t\t\t\tend2 = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!v1) {\n\t\t\t\t\t\t\treturn start2[0] === pos2 && start2[1] === end2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\treturn false;\n\t},\n\n\t_hitTestSelf: function(point, options, viewMatrix, strokeMatrix) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tstrokeRadius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (strokeRadius !== null) {\n\t\t\tif (strokeRadius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tstrokePadding = strokePadding.add(\n\t\t\t\t\tPath._getStrokePadding(strokeRadius, strokeMatrix));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tvar isJoin = closed || segment._index > 0\n\t\t\t\t\t&& segment._index < numSegments - 1;\n\t\t\tif ((isJoin ? join : cap) === 'round') {\n\t\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t\t} else {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (isJoin) {\n\t\t\t\t\tif (!segment.isSmooth()) {\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius,\n\t\t\t\t\t\t\t   miterLimit, null, strokeMatrix, addToArea, true);\n\t\t\t\t\t}\n\t\t\t\t} else if (cap === 'square') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, null,\n\t\t\t\t\t\t\tstrokeMatrix, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (strokeRadius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar time = loc.getTime();\n\t\t\t\tif (time === 0 || time === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point)\n\t\t\t\t\t\t\t<= miterLimit * strokeRadius\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar loc = this.getLocationAt(offset);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset) {\n\t\tif (typeof offset === 'number') {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar start = length,\n\t\t\t\t\tcurve = curves[i];\n\t\t\t\tlength += curve.getLength();\n\t\t\t\tif (length > offset) {\n\t\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (curves.length > 0 && offset <= this.getLength()) {\n\t\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\t\t}\n\t\t} else if (offset && offset.getPath && offset.getPath() === this) {\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetsWithTangent: function() {\n\t\tvar tangent = Point.read(arguments);\n\t\tif (tangent.isZero()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar offsets = [];\n\t\tvar curveStart = 0;\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar curve = curves[i];\n\t\t\tvar curveTimes = curve.getTimesWithTangent(tangent);\n\t\t\tfor (var j = 0, m = curveTimes.length; j < m; j++) {\n\t\t\t\tvar offset = curveStart + curve.getOffsetAtTime(curveTimes[j]);\n\t\t\t\tif (offsets.indexOf(offset) < 0) {\n\t\t\t\t\toffsets.push(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurveStart += curve.length;\n\t\t}\n\t\treturn offsets;\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tif (size <= 0) return;\n\n\t\tvar half = size / 2,\n\t\t\tminiSize = size - 2,\n\t\t\tminiHalf = half - 1,\n\t\t\tcoords = new Array(6),\n\t\t\tpX, pY;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i],\n\t\t\t\tselection = segment._selection;\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tpX = coords[0];\n\t\t\tpY = coords[1];\n\t\t\tif (selection & 2)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (selection & 4)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (miniSize > 0 && !(selection & 1)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - miniHalf, pY - miniHalf, miniSize, miniSize);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar flattener = new PathFlattener(this, 0.25, 32, false,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = flattener.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\tflattener.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (!segments.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar args = arguments,\n\t\t\t\thandle1 = Point.read(args),\n\t\t\t\thandle2 = Point.read(args),\n\t\t\t\tto = Point.read(args),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar args = arguments,\n\t\t\t\thandle = Point.read(args),\n\t\t\t\tto = Point.read(args),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tthrough = Point.read(args),\n\t\t\t\tto = Point.read(args),\n\t\t\t\tt = Base.pick(Base.read(args), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tabs = Math.abs,\n\t\t\t\tsqrt = Math.sqrt,\n\t\t\t\tcurrent = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(args),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(args),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(args) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(args);\n\t\t\t} else if (!from.equals(to)) {\n\t\t\t\tvar radius = Size.read(args),\n\t\t\t\t\tisZero = Numerical.isZero;\n\t\t\t\tif (isZero(radius.width) || isZero(radius.height))\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(args),\n\t\t\t\t\tclockwise = !!Base.read(args),\n\t\t\t\t\tlarge = !!Base.read(args),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq = x * x,\n\t\t\t\t\tySq = y * y;\n\t\t\t\tvar factor = sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1) * sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center, true);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (extent) {\n\t\t\t\tvar epsilon = 1e-7,\n\t\t\t\t\text = abs(extent),\n\t\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil((ext - epsilon) / 90),\n\t\t\t\t\tinc = extent / count,\n\t\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\t\tsegments = [];\n\t\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\t\tvar pt = to,\n\t\t\t\t\t\tout = null;\n\t\t\t\t\tif (i < count) {\n\t\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t\t}\n\t\t\t\t\tvector = vector.rotate(inc);\n\t\t\t\t}\n\t\t\t\tthis._add(segments);\n\t\t\t}\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tthrough = Point.read(args),\n\t\t\t\tto = Point.read(args),\n\t\t\t\tparameter = Base.read(args),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar args = arguments,\n\t\t\t\thandle1 = Point.read(args),\n\t\t\t\thandle2 = Point.read(args),\n\t\t\t\tto = Point.read(args),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar args = arguments,\n\t\t\t\thandle = Point.read(args),\n\t\t\t\tto = Point.read(args),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(args)),\n\t\t\t\tclockwise = Base.pick(Base.peek(args), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(args)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(tolerance) {\n\t\t\tthis.setClosed(true);\n\t\t\tthis.join(this, tolerance);\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(matrix, options) {\n\t\tvar method = options.handle\n\t\t\t\t? 'getHandleBounds'\n\t\t\t\t: options.stroke\n\t\t\t\t? 'getStrokeBounds'\n\t\t\t\t: 'getBounds';\n\t\treturn Path[method](this._segments, this._closed, this, matrix, options);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, path, matrix, options, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6)),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = style.hasStroke(),\n\t\t\tstrokeWidth = style.getStrokeWidth(),\n\t\t\tstrokeMatrix = stroke && path._getStrokeMatrix(matrix, options),\n\t\t\tstrokePadding = stroke && Path._getStrokePadding(strokeWidth,\n\t\t\t\tstrokeMatrix),\n\t\t\tbounds = Path.getBounds(segments, closed, path, matrix, options,\n\t\t\t\tstrokePadding);\n\t\tif (!stroke)\n\t\t\treturn bounds;\n\t\tvar strokeRadius = strokeWidth / 2,\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = style.getMiterLimit(),\n\t\t\tjoinBounds = new Rectangle(new Size(strokePadding));\n\n\t\tfunction addPoint(point) {\n\t\t\tbounds = bounds.include(point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(\n\t\t\t\t\tjoinBounds.setCenter(segment._point.transform(matrix)));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tif (join === 'round' || segment.isSmooth()) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, strokeRadius, miterLimit,\n\t\t\t\t\t\tmatrix, strokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, strokeRadius, matrix,\n\t\t\t\t\t\tstrokeMatrix, addPoint);\n\t\t\t}\n\t\t}\n\n\t\tvar length = segments.length - (closed ? 0 : 1);\n\t\tif (length > 0) {\n\t\t\tfor (var i = 1; i < length; i++) {\n\t\t\t\taddJoin(segments[i], join);\n\t\t\t}\n\t\t\tif (closed) {\n\t\t\t\taddJoin(segments[0], join);\n\t\t\t} else {\n\t\t\t\taddCap(segments[0], cap);\n\t\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getStrokePadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar hor = new Point(radius, 0).transform(matrix),\n\t\t\tver = new Point(0, radius).transform(matrix),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = Math.atan2(b * tan, a),\n\t\t\tty = Math.atan2(b, tan * a);\n\t\treturn [Math.abs(a * Math.cos(tx) * cos + b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, matrix,\n\t\t\tstrokeMatrix, addPoint, isArea) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPoint1().transform(matrix),\n\t\t\tnormal1 = curve1.getNormalAtTime(1).multiply(radius)\n\t\t\t\t.transform(strokeMatrix),\n\t\t\tnormal2 = curve2.getNormalAtTime(0).multiply(radius)\n\t\t\t\t.transform(strokeMatrix),\n\t\t\t\tangle = normal1.getDirectedAngle(normal2);\n\t\tif (angle < 0 || angle >= 180) {\n\t\t\tnormal1 = normal1.negate();\n\t\t\tnormal2 = normal2.negate();\n\t\t}\n\t\tif (isArea)\n\t\t\taddPoint(point);\n\t\taddPoint(point.add(normal1));\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(point.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(point.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit * radius) {\n\t\t\t\taddPoint(corner);\n\t\t\t}\n\t\t}\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, matrix, strokeMatrix,\n\t\t\taddPoint, isArea) {\n\t\tvar point = segment._point.transform(matrix),\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal()\n\t\t\t\t\t.multiply(loc.getTime() === 0 ? radius : -radius)\n\t\t\t\t\t.transform(strokeMatrix);\n\t\tif (cap === 'square') {\n\t\t\tif (isArea) {\n\t\t\t\taddPoint(point.subtract(normal));\n\t\t\t\taddPoint(point.add(normal));\n\t\t\t}\n\t\t\tpoint = point.add(normal.rotate(-90));\n\t\t}\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, path, matrix, options) {\n\t\tvar style = path.getStyle(),\n\t\t\tstroke = options.stroke && style.hasStroke(),\n\t\t\tstrokePadding,\n\t\t\tjoinPadding;\n\t\tif (stroke) {\n\t\t\tvar strokeMatrix = path._getStrokeMatrix(matrix, options),\n\t\t\t\tstrokeRadius = style.getStrokeWidth() / 2,\n\t\t\t\tjoinRadius = strokeRadius;\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.SQRT2);\n\t\t\tstrokePadding = Path._getStrokePadding(strokeRadius, strokeMatrix);\n\t\t\tjoinPadding = Path._getStrokePadding(joinRadius, strokeMatrix);\n\t\t}\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = !j ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert == false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props, { insert: true });\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\tvar args = arguments;\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(args, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(args, 'to'))\n\t\t\t], false, args);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tcenter = Point.readNamed(args, 'center'),\n\t\t\t\tradius = Base.readNamed(args, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), args);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar args = arguments,\n\t\t\t\trect = Rectangle.readNamed(args, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(args, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, args);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tellipse = Shape._readEllipse(args);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, args);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tfrom = Point.readNamed(args, 'from'),\n\t\t\t\tthrough = Point.readNamed(args, 'through'),\n\t\t\t\tto = Point.readNamed(args, 'to'),\n\t\t\t\tprops = Base.getNamed(args),\n\t\t\t\tpath = new Path(props && props.insert == false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tcenter = Point.readNamed(args, 'center'),\n\t\t\t\tsides = Base.readNamed(args, 'sides'),\n\t\t\t\tradius = Base.readNamed(args, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = sides % 3 === 0,\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, args);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar args = arguments,\n\t\t\t\tcenter = Point.readNamed(args, 'center'),\n\t\t\t\tpoints = Base.readNamed(args, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(args, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(args, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, args);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\tbeans: true,\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items) {\n\t\tvar list = items,\n\t\t\tfirst = list[0];\n\t\tif (first && typeof first[0] === 'number')\n\t\t\tlist = [list];\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = list[i];\n\t\t\tif (list === items && !(item instanceof Path))\n\t\t\t\tlist = Base.slice(list);\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\tlist[i] = new Path({ segments: item, insert: false });\n\t\t\t} else if (item instanceof CompoundPath) {\n\t\t\t\tlist.splice.apply(list, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\treturn insertChildren.base.call(this, index, list);\n\t},\n\n\treduce: function reduce(options) {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce(options);\n\t\t\tif (path.isEmpty())\n\t\t\t\tpath.remove();\n\t\t}\n\t\tif (!children.length) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.copyAttributes(this);\n\t\t\tpath.insertAbove(this);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClosed: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tif (!children[i]._closed)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tchildren[i].setClosed(closed);\n\t\t}\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tBase.push(curves, children[i].getCurves());\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t},\n\n\tgetLength: function() {\n\t\tvar children = this._children,\n\t\t\tlength = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tlength += children[i].getLength();\n\t\treturn length;\n\t},\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.appended(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join('');\n\t},\n\n\t_hitTestChildren: function _hitTestChildren(point, options, viewMatrix) {\n\t\treturn _hitTestChildren.base.call(this, point,\n\t\t\t\toptions.class === Path || options.type === 'path' ? options\n\t\t\t\t\t: Base.set({}, options, { fill: false }),\n\t\t\t\tviewMatrix);\n\t},\n\n\t_draw: function(ctx, param, viewMatrix, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (!children.length)\n\t\t\treturn;\n\n\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\tctx.beginPath();\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getFillRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectionItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectionItems[child._id]) {\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.appended(mx));\n\t\t\t}\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && !children.length)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\treturn Base.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo',\n\t\t\t'arcTo', 'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy',\n\t\t\t'arcBy'],\n\t\tfunction(key) {\n\t\t\tthis[key] = function() {\n\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t};\n\t\t}, {\n\t\t\tmoveTo: function() {\n\t\t\t\tvar current = getCurrentPath(this),\n\t\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\t\tif (path !== current)\n\t\t\t\t\tthis.addChild(path);\n\t\t\t\tpath.moveTo.apply(path, arguments);\n\t\t\t},\n\n\t\t\tmoveBy: function() {\n\t\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\t\tpoint = Point.read(arguments);\n\t\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t\t},\n\n\t\t\tclosePath: function(tolerance) {\n\t\t\t\tgetCurrentPath(this, true).closePath(tolerance);\n\t\t\t}\n\t\t}\n\t);\n}, Base.each(['reverse', 'flatten', 'simplify', 'smooth'], function(key) {\n\tthis[key] = function(param) {\n\t\tvar children = this._children,\n\t\t\tres;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tres = children[i][key](param) || res;\n\t\t}\n\t\treturn res;\n\t};\n}, {}));\n\nPathItem.inject(new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\toperators = {\n\t\t\tunite:     { '1': true, '2': true },\n\t\t\tintersect: { '2': true },\n\t\t\tsubtract:  { '1': true },\n\t\t\texclude:   { '1': true, '-1': true }\n\t\t};\n\n\tfunction getPaths(path) {\n\t\treturn path._children || [path];\n\t}\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path\n\t\t\t.clone(false)\n\t\t\t.reduce({ simplify: true })\n\t\t\t.transform(null, true, true);\n\t\tif (resolve) {\n\t\t\tvar paths = getPaths(res);\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tif (!path._closed && !path.isEmpty()) {\n\t\t\t\t\tpath.closePath(1e-12);\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t\tpath.getLastSegment().setHandleOut(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tres = res\n\t\t\t\t.resolveCrossings()\n\t\t\t\t.reorient(res.getFillRule() === 'nonzero', true);\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction createResult(paths, simplify, path1, path2, options) {\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tresult = result.reduce({ simplify: simplify });\n\t\tif (!(options && options.insert == false)) {\n\t\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t\t&& path1.getIndex() < path2.getIndex() ? path2 : path1);\n\t\t}\n\t\tresult.copyAttributes(path1, true);\n\t\treturn result;\n\t}\n\n\tfunction filterIntersection(inter) {\n\t\treturn inter.hasOverlap() || inter.isCrossing();\n\t}\n\n\tfunction traceBoolean(path1, path2, operation, options) {\n\t\tif (options && (options.trace == false || options.stroke) &&\n\t\t\t\t/^(subtract|intersect)$/.test(operation))\n\t\t\treturn splitBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true),\n\t\t\toperator = operators[operation];\n\t\toperator[operation] = true;\n\t\tif (_path2 && (operator.subtract || operator.exclude)\n\t\t\t\t^ (_path2.isClockwise() ^ _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar crossings = divideLocations(CurveLocation.expand(\n\t\t\t\t_path1.getIntersections(_path2, filterIntersection))),\n\t\t\tpaths1 = getPaths(_path1),\n\t\t\tpaths2 = _path2 && getPaths(_path2),\n\t\t\tsegments = [],\n\t\t\tcurves = [],\n\t\t\tpaths;\n\n\t\tfunction collectPaths(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tBase.push(segments, path._segments);\n\t\t\t\tBase.push(curves, path.getCurves());\n\t\t\t\tpath._overlapsOnly = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getCurves(indices) {\n\t\t\tvar list = [];\n\t\t\tfor (var i = 0, l = indices && indices.length; i < l; i++) {\n\t\t\t\tlist.push(curves[indices[i]]);\n\t\t\t}\n\t\t\treturn list;\n\t\t}\n\n\t\tif (crossings.length) {\n\t\t\tcollectPaths(paths1);\n\t\t\tif (paths2)\n\t\t\t\tcollectPaths(paths2);\n\n\t\t\tvar curvesValues = new Array(curves.length);\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tcurvesValues[i] = curves[i].getValues();\n\t\t\t}\n\t\t\tvar curveCollisions = CollisionDetection.findCurveBoundsCollisions(\n\t\t\t\t\tcurvesValues, curvesValues, 0, true);\n\t\t\tvar curveCollisionsMap = {};\n\t\t\tfor (var i = 0; i < curves.length; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tid = curve._path._id,\n\t\t\t\t\tmap = curveCollisionsMap[id] = curveCollisionsMap[id] || {};\n\t\t\t\tmap[curve.getIndex()] = {\n\t\t\t\t\thor: getCurves(curveCollisions[i].hor),\n\t\t\t\t\tver: getCurves(curveCollisions[i].ver)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfor (var i = 0, l = crossings.length; i < l; i++) {\n\t\t\t\tpropagateWinding(crossings[i]._segment, _path1, _path2,\n\t\t\t\t\t\tcurveCollisionsMap, operator);\n\t\t\t}\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tvar segment = segments[i],\n\t\t\t\t\tinter = segment._intersection;\n\t\t\t\tif (!segment._winding) {\n\t\t\t\t\tpropagateWinding(segment, _path1, _path2,\n\t\t\t\t\t\t\tcurveCollisionsMap, operator);\n\t\t\t\t}\n\t\t\t\tif (!(inter && inter._overlap))\n\t\t\t\t\tsegment._path._overlapsOnly = false;\n\t\t\t}\n\t\t\tpaths = tracePaths(segments, operator);\n\t\t} else {\n\t\t\tpaths = reorientPaths(\n\t\t\t\t\tpaths2 ? paths1.concat(paths2) : paths1.slice(),\n\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\treturn !!operator[w];\n\t\t\t\t\t});\n\t\t}\n\t\treturn createResult(paths, true, path1, path2, options);\n\t}\n\n\tfunction splitBoolean(path1, path2, operation) {\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = preparePath(path2),\n\t\t\tcrossings = _path1.getIntersections(_path2, filterIntersection),\n\t\t\tsubtract = operation === 'subtract',\n\t\t\tdivide = operation === 'divide',\n\t\t\tadded = {},\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (!added[path._id] && (divide ||\n\t\t\t\t\t_path2.contains(path.getPointAt(path.getLength() / 2))\n\t\t\t\t\t\t^ subtract)) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn added[path._id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = crossings.length - 1; i >= 0; i--) {\n\t\t\tvar path = crossings[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn createResult(paths, false, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._previous;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._previous)\n\t\t\t\tto = to._previous;\n\t\t\tfrom._next = to;\n\t\t\tto._previous = from;\n\t\t}\n\t}\n\n\tfunction clearCurveHandles(curves) {\n\t\tfor (var i = curves.length - 1; i >= 0; i--)\n\t\t\tcurves[i].clearHandles();\n\t}\n\n\tfunction reorientPaths(paths, isInside, clockwise) {\n\t\tvar length = paths && paths.length;\n\t\tif (length) {\n\t\t\tvar lookup = Base.each(paths, function (path, i) {\n\t\t\t\t\tthis[path._id] = {\n\t\t\t\t\t\tcontainer: null,\n\t\t\t\t\t\twinding: path.isClockwise() ? 1 : -1,\n\t\t\t\t\t\tindex: i\n\t\t\t\t\t};\n\t\t\t\t}, {}),\n\t\t\t\tsorted = paths.slice().sort(function (a, b) {\n\t\t\t\t\treturn abs(b.getArea()) - abs(a.getArea());\n\t\t\t\t}),\n\t\t\t\tfirst = sorted[0];\n\t\t\tvar collisions = CollisionDetection.findItemBoundsCollisions(sorted,\n\t\t\t\t\tnull, Numerical.GEOMETRIC_EPSILON);\n\t\t\tif (clockwise == null)\n\t\t\t\tclockwise = first.isClockwise();\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar path1 = sorted[i],\n\t\t\t\t\tentry1 = lookup[path1._id],\n\t\t\t\t\tcontainerWinding = 0,\n\t\t\t\t\tindices = collisions[i];\n\t\t\t\tif (indices) {\n\t\t\t\t\tvar point = null;\n\t\t\t\t\tfor (var j = indices.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tif (indices[j] < i) {\n\t\t\t\t\t\t\tpoint = point || path1.getInteriorPoint();\n\t\t\t\t\t\t\tvar path2 = sorted[indices[j]];\n\t\t\t\t\t\t\tif (path2.contains(point)) {\n\t\t\t\t\t\t\t\tvar entry2 = lookup[path2._id];\n\t\t\t\t\t\t\t\tcontainerWinding = entry2.winding;\n\t\t\t\t\t\t\t\tentry1.winding += containerWinding;\n\t\t\t\t\t\t\t\tentry1.container = entry2.exclude\n\t\t\t\t\t\t\t\t\t? entry2.container : path2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isInside(entry1.winding) === isInside(containerWinding)) {\n\t\t\t\t\tentry1.exclude = true;\n\t\t\t\t\tpaths[entry1.index] = null;\n\t\t\t\t} else {\n\t\t\t\t\tvar container = entry1.container;\n\t\t\t\t\tpath1.setClockwise(\n\t\t\t\t\t\t\tcontainer ? !container.isClockwise() : clockwise);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\tfunction divideLocations(locations, include, clearLater) {\n\t\tvar results = include && [],\n\t\t\ttMin = 1e-8,\n\t\t\ttMax = 1 - tMin,\n\t\t\tclearHandles = false,\n\t\t\tclearCurves = clearLater || [],\n\t\t\tclearLookup = clearLater && {},\n\t\t\trenormalizeLocs,\n\t\t\tprevCurve,\n\t\t\tprevTime;\n\n\t\tfunction getId(curve) {\n\t\t\treturn curve._path._id + '.' + curve._segment1._index;\n\t\t}\n\n\t\tfor (var i = (clearLater && clearLater.length) - 1; i >= 0; i--) {\n\t\t\tvar curve = clearLater[i];\n\t\t\tif (curve._path)\n\t\t\t\tclearLookup[getId(curve)] = true;\n\t\t}\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\ttime = loc._time,\n\t\t\t\torigTime = time,\n\t\t\t\texclude = include && !include(loc),\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tsegment;\n\t\t\tif (curve) {\n\t\t\t\tif (curve !== prevCurve) {\n\t\t\t\t\tclearHandles = !curve.hasHandles()\n\t\t\t\t\t\t\t|| clearLookup && clearLookup[getId(curve)];\n\t\t\t\t\trenormalizeLocs = [];\n\t\t\t\t\tprevTime = null;\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t} else if (prevTime >= tMin) {\n\t\t\t\t\ttime /= prevTime;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (exclude) {\n\t\t\t\tif (renormalizeLocs)\n\t\t\t\t\trenormalizeLocs.push(loc);\n\t\t\t\tcontinue;\n\t\t\t} else if (include) {\n\t\t\t\tresults.unshift(loc);\n\t\t\t}\n\t\t\tprevTime = origTime;\n\t\t\tif (time < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (time > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tvar newCurve = curve.divideAtTime(time, true);\n\t\t\t\tif (clearHandles)\n\t\t\t\t\tclearCurves.push(curve, newCurve);\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tfor (var j = renormalizeLocs.length - 1; j >= 0; j--) {\n\t\t\t\t\tvar l = renormalizeLocs[j];\n\t\t\t\t\tl._time = (l._time - time) / (1 - time);\n\t\t\t\t}\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t}\n\t\tif (!clearLater)\n\t\t\tclearCurveHandles(clearCurves);\n\t\treturn results || locations;\n\t}\n\n\tfunction getWinding(point, curves, dir, closed, dontFlip) {\n\t\tvar curvesList = Array.isArray(curves)\n\t\t\t? curves\n\t\t\t: curves[dir ? 'hor' : 'ver'];\n\t\tvar ia = dir ? 1 : 0,\n\t\t\tio = ia ^ 1,\n\t\t\tpv = [point.x, point.y],\n\t\t\tpa = pv[ia],\n\t\t\tpo = pv[io],\n\t\t\twindingEpsilon = 1e-9,\n\t\t\tqualityEpsilon = 1e-6,\n\t\t\tpaL = pa - windingEpsilon,\n\t\t\tpaR = pa + windingEpsilon,\n\t\t\twindingL = 0,\n\t\t\twindingR = 0,\n\t\t\tpathWindingL = 0,\n\t\t\tpathWindingR = 0,\n\t\t\tonPath = false,\n\t\t\tonAnyPath = false,\n\t\t\tquality = 1,\n\t\t\troots = [],\n\t\t\tvPrev,\n\t\t\tvClose;\n\n\t\tfunction addWinding(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po < min(o0, o3) || po > max(o0, o3)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar a0 = v[ia + 0],\n\t\t\t\ta1 = v[ia + 2],\n\t\t\t\ta2 = v[ia + 4],\n\t\t\t\ta3 = v[ia + 6];\n\t\t\tif (o0 === o3) {\n\t\t\t\tif (a0 < paR && a3 > paL || a3 < paR && a0 > paL) {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar t =   po === o0 ? 0\n\t\t\t\t\t: po === o3 ? 1\n\t\t\t\t\t: paL > max(a0, a1, a2, a3) || paR < min(a0, a1, a2, a3)\n\t\t\t\t\t? 1\n\t\t\t\t\t: Curve.solveCubic(v, io, po, roots, 0, 1) > 0\n\t\t\t\t\t\t? roots[0]\n\t\t\t\t\t\t: 1,\n\t\t\t\ta =   t === 0 ? a0\n\t\t\t\t\t: t === 1 ? a3\n\t\t\t\t\t: Curve.getPoint(v, t)[dir ? 'y' : 'x'],\n\t\t\t\twinding = o0 > o3 ? 1 : -1,\n\t\t\t\twindingPrev = vPrev[io] > vPrev[io + 6] ? 1 : -1,\n\t\t\t\ta3Prev = vPrev[ia + 6];\n\t\t\tif (po !== o0) {\n\t\t\t\tif (a < paL) {\n\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t} else if (a > paR) {\n\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t} else {\n\t\t\t\t\tonPath = true;\n\t\t\t\t}\n\t\t\t\tif (a > pa - qualityEpsilon && a < pa + qualityEpsilon)\n\t\t\t\t\tquality /= 2;\n\t\t\t} else {\n\t\t\t\tif (winding !== windingPrev) {\n\t\t\t\t\tif (a0 < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t} else if (a0 > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t}\n\t\t\t\t} else if (a0 != a3Prev) {\n\t\t\t\t\tif (a3Prev < paR && a > paR) {\n\t\t\t\t\t\tpathWindingR += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t} else if (a3Prev > paL && a < paL) {\n\t\t\t\t\t\tpathWindingL += winding;\n\t\t\t\t\t\tonPath = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tquality /= 4;\n\t\t\t}\n\t\t\tvPrev = v;\n\t\t\treturn !dontFlip && a > paL && a < paR\n\t\t\t\t\t&& Curve.getTangent(v, t)[dir ? 'x' : 'y'] === 0\n\t\t\t\t\t&& getWinding(point, curves, !dir, closed, true);\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tvar o0 = v[io + 0],\n\t\t\t\to1 = v[io + 2],\n\t\t\t\to2 = v[io + 4],\n\t\t\t\to3 = v[io + 6];\n\t\t\tif (po <= max(o0, o1, o2, o3) && po >= min(o0, o1, o2, o3)) {\n\t\t\t\tvar a0 = v[ia + 0],\n\t\t\t\t\ta1 = v[ia + 2],\n\t\t\t\t\ta2 = v[ia + 4],\n\t\t\t\t\ta3 = v[ia + 6],\n\t\t\t\t\tmonoCurves = paL > max(a0, a1, a2, a3) ||\n\t\t\t\t\t\t\t\t paR < min(a0, a1, a2, a3)\n\t\t\t\t\t\t\t? [v] : Curve.getMonoCurves(v, dir),\n\t\t\t\t\tres;\n\t\t\t\tfor (var i = 0, l = monoCurves.length; i < l; i++) {\n\t\t\t\t\tif (res = addWinding(monoCurves[i]))\n\t\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = curvesList.length; i < l; i++) {\n\t\t\tvar curve = curvesList[i],\n\t\t\t\tpath = curve._path,\n\t\t\t\tv = curve.getValues(),\n\t\t\t\tres;\n\t\t\tif (!i || curvesList[i - 1]._path !== path) {\n\t\t\t\tvPrev = null;\n\t\t\t\tif (!path._closed) {\n\t\t\t\t\tvClose = Curve.getValues(\n\t\t\t\t\t\t\tpath.getLastCurve().getSegment2(),\n\t\t\t\t\t\t\tcurve.getSegment1(),\n\t\t\t\t\t\t\tnull, !closed);\n\t\t\t\t\tif (vClose[io] !== vClose[io + 6]) {\n\t\t\t\t\t\tvPrev = vClose;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!vPrev) {\n\t\t\t\t\tvPrev = v;\n\t\t\t\t\tvar prev = path.getLastCurve();\n\t\t\t\t\twhile (prev && prev !== curve) {\n\t\t\t\t\t\tvar v2 = prev.getValues();\n\t\t\t\t\t\tif (v2[io] !== v2[io + 6]) {\n\t\t\t\t\t\t\tvPrev = v2;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprev = prev.getPrevious();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (res = handleCurve(v))\n\t\t\t\treturn res;\n\n\t\t\tif (i + 1 === l || curvesList[i + 1]._path !== path) {\n\t\t\t\tif (vClose && (res = handleCurve(vClose)))\n\t\t\t\t\treturn res;\n\t\t\t\tif (onPath && !pathWindingL && !pathWindingR) {\n\t\t\t\t\tpathWindingL = pathWindingR = path.isClockwise(closed) ^ dir\n\t\t\t\t\t\t\t? 1 : -1;\n\t\t\t\t}\n\t\t\t\twindingL += pathWindingL;\n\t\t\t\twindingR += pathWindingR;\n\t\t\t\tpathWindingL = pathWindingR = 0;\n\t\t\t\tif (onPath) {\n\t\t\t\t\tonAnyPath = true;\n\t\t\t\t\tonPath = false;\n\t\t\t\t}\n\t\t\t\tvClose = null;\n\t\t\t}\n\t\t}\n\t\twindingL = abs(windingL);\n\t\twindingR = abs(windingR);\n\t\treturn {\n\t\t\twinding: max(windingL, windingR),\n\t\t\twindingL: windingL,\n\t\t\twindingR: windingR,\n\t\t\tquality: quality,\n\t\t\tonPath: onAnyPath\n\t\t};\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, curveCollisionsMap,\n\t\t\toperator) {\n\t\tvar chain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twinding;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve();\n\t\t\tif (curve) {\n\t\t\t\tvar length = curve.getLength();\n\t\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t}\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tvar offsets = [0.5, 0.25, 0.75],\n\t\t\twinding = { winding: 0, quality: -1 },\n\t\t\ttMin = 1e-3,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0; i < offsets.length && winding.quality < 0.5; i++) {\n\t\t\tvar length = totalLength * offsets[i];\n\t\t\tfor (var j = 0, l = chain.length; j < l; j++) {\n\t\t\t\tvar entry = chain[j],\n\t\t\t\t\tcurveLength = entry.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tvar curve = entry.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\toperand = parent instanceof CompoundPath ? parent : path,\n\t\t\t\t\t\tt = Numerical.clamp(curve.getTimeAt(length), tMin, tMax),\n\t\t\t\t\t\tpt = curve.getPointAtTime(t),\n\t\t\t\t\t\tdir = abs(curve.getTangentAtTime(t).y) < Math.SQRT1_2;\n\t\t\t\t\tvar wind = null;\n\t\t\t\t\tif (operator.subtract && path2) {\n\t\t\t\t\t\tvar otherPath = operand === path1 ? path2 : path1,\n\t\t\t\t\t\t\tpathWinding = otherPath._getWinding(pt, dir, true);\n\t\t\t\t\t\tif (operand === path1 && pathWinding.winding ||\n\t\t\t\t\t\t\toperand === path2 && !pathWinding.winding) {\n\t\t\t\t\t\t\tif (pathWinding.quality < 1) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\twind = { winding: 0, quality: 1 };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\twind =  wind || getWinding(\n\t\t\t\t\t\t\tpt, curveCollisionsMap[path._id][curve.getIndex()],\n\t\t\t\t\t\t\tdir, true);\n\t\t\t\t\tif (wind.quality > winding.quality)\n\t\t\t\t\t\twinding = wind;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tfor (var j = chain.length - 1; j >= 0; j--) {\n\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t}\n\n\tfunction tracePaths(segments, operator) {\n\t\tvar paths = [],\n\t\t\tstarts;\n\n\t\tfunction isValid(seg) {\n\t\t\tvar winding;\n\t\t\treturn !!(seg && !seg._visited && (!operator\n\t\t\t\t\t|| operator[(winding = seg._winding || {}).winding]\n\t\t\t\t\t\t&& !(operator.unite && winding.winding === 2\n\t\t\t\t\t\t\t&& winding.windingL && winding.windingR)));\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\tif (seg) {\n\t\t\t\tfor (var i = 0, l = starts.length; i < l; i++) {\n\t\t\t\t\tif (seg === starts[i])\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction visitPath(path) {\n\t\t\tvar segments = path._segments;\n\t\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\t\tsegments[i]._visited = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getCrossingSegments(segment, collectStarts) {\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tstart = inter,\n\t\t\t\tcrossings = [];\n\t\t\tif (collectStarts)\n\t\t\t\tstarts = [segment];\n\n\t\t\tfunction collect(inter, end) {\n\t\t\t\twhile (inter && inter !== end) {\n\t\t\t\t\tvar other = inter._segment,\n\t\t\t\t\t\tpath = other && other._path;\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tvar next = other.getNext() || path.getFirstSegment(),\n\t\t\t\t\t\t\tnextInter = next._intersection;\n\t\t\t\t\t\tif (other !== segment && (isStart(other)\n\t\t\t\t\t\t\t|| isStart(next)\n\t\t\t\t\t\t\t|| next && (isValid(other) && (isValid(next)\n\t\t\t\t\t\t\t\t|| nextInter && isValid(nextInter._segment))))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcrossings.push(other);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (collectStarts)\n\t\t\t\t\t\t\tstarts.push(other);\n\t\t\t\t\t}\n\t\t\t\t\tinter = inter._next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (inter) {\n\t\t\t\tcollect(inter);\n\t\t\t\twhile (inter && inter._previous)\n\t\t\t\t\tinter = inter._previous;\n\t\t\t\tcollect(inter, start);\n\t\t\t}\n\t\t\treturn crossings;\n\t\t}\n\n\t\tsegments.sort(function(seg1, seg2) {\n\t\t\tvar inter1 = seg1._intersection,\n\t\t\t\tinter2 = seg2._intersection,\n\t\t\t\tover1 = !!(inter1 && inter1._overlap),\n\t\t\t\tover2 = !!(inter2 && inter2._overlap),\n\t\t\t\tpath1 = seg1._path,\n\t\t\t\tpath2 = seg2._path;\n\t\t\treturn over1 ^ over2\n\t\t\t\t\t? over1 ? 1 : -1\n\t\t\t\t\t: !inter1 ^ !inter2\n\t\t\t\t\t\t? inter1 ? 1 : -1\n\t\t\t\t\t\t: path1 !== path2\n\t\t\t\t\t\t\t? path1._id - path2._id\n\t\t\t\t\t\t\t: seg1._index - seg2._index;\n\t\t});\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tvalid = isValid(seg),\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false,\n\t\t\t\tclosed = true,\n\t\t\t\tbranches = [],\n\t\t\t\tbranch,\n\t\t\t\tvisited,\n\t\t\t\thandleIn;\n\t\t\tif (valid && seg._path._overlapsOnly) {\n\t\t\t\tvar path1 = seg._path,\n\t\t\t\t\tpath2 = seg._intersection._segment._path;\n\t\t\t\tif (path1.compare(path2)) {\n\t\t\t\t\tif (path1.getArea())\n\t\t\t\t\t\tpaths.push(path1.clone(false));\n\t\t\t\t\tvisitPath(path1);\n\t\t\t\t\tvisitPath(path2);\n\t\t\t\t\tvalid = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (valid) {\n\t\t\t\tvar first = !path,\n\t\t\t\t\tcrossings = getCrossingSegments(seg, first),\n\t\t\t\t\tother = crossings.shift(),\n\t\t\t\t\tfinished = !first && (isStart(seg) || isStart(other)),\n\t\t\t\t\tcross = !finished && other;\n\t\t\t\tif (first) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (finished) {\n\t\t\t\t\tif (seg.isFirst() || seg.isLast())\n\t\t\t\t\t\tclosed = seg._path._closed;\n\t\t\t\t\tseg._visited = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (cross && branch) {\n\t\t\t\t\tbranches.push(branch);\n\t\t\t\t\tbranch = null;\n\t\t\t\t}\n\t\t\t\tif (!branch) {\n\t\t\t\t\tif (cross)\n\t\t\t\t\t\tcrossings.push(seg);\n\t\t\t\t\tbranch = {\n\t\t\t\t\t\tstart: path._segments.length,\n\t\t\t\t\t\tcrossings: crossings,\n\t\t\t\t\t\tvisited: visited = [],\n\t\t\t\t\t\thandleIn: handleIn\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (cross)\n\t\t\t\t\tseg = other;\n\t\t\t\tif (!isValid(seg)) {\n\t\t\t\t\tpath.removeSegments(branch.start);\n\t\t\t\t\tfor (var j = 0, k = visited.length; j < k; j++) {\n\t\t\t\t\t\tvisited[j]._visited = false;\n\t\t\t\t\t}\n\t\t\t\t\tvisited.length = 0;\n\t\t\t\t\tdo {\n\t\t\t\t\t\tseg = branch && branch.crossings.shift();\n\t\t\t\t\t\tif (!seg || !seg._path) {\n\t\t\t\t\t\t\tseg = null;\n\t\t\t\t\t\t\tbranch = branches.pop();\n\t\t\t\t\t\t\tif (branch) {\n\t\t\t\t\t\t\t\tvisited = branch.visited;\n\t\t\t\t\t\t\t\thandleIn = branch.handleIn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (branch && !isValid(seg));\n\t\t\t\t\tif (!seg)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tvar next = seg.getNext();\n\t\t\t\tpath.add(new Segment(seg._point, handleIn,\n\t\t\t\t\t\tnext && seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tvisited.push(seg);\n\t\t\t\tseg = next || seg._path.getFirstSegment();\n\t\t\t\thandleIn = next && next._handleIn;\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tif (closed) {\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(handleIn);\n\t\t\t\t\tpath.setClosed(closed);\n\t\t\t\t}\n\t\t\t\tif (path.getArea() !== 0) {\n\t\t\t\t\tpaths.push(path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, dir, closed) {\n\t\t\treturn getWinding(point, this.getCurves(), dir, closed);\n\t\t},\n\n\t\tunite: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'unite', options);\n\t\t},\n\n\t\tintersect: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'intersect', options);\n\t\t},\n\n\t\tsubtract: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'subtract', options);\n\t\t},\n\n\t\texclude: function(path, options) {\n\t\t\treturn traceBoolean(this, path, 'exclude', options);\n\t\t},\n\n\t\tdivide: function(path, options) {\n\t\t\treturn options && (options.trace == false || options.stroke)\n\t\t\t\t\t? splitBoolean(this, path, 'divide')\n\t\t\t\t\t: createResult([\n\t\t\t\t\t\tthis.subtract(path, options),\n\t\t\t\t\t\tthis.intersect(path, options)\n\t\t\t\t\t], true, this, path, options);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar children = this._children,\n\t\t\t\tpaths = children || [this];\n\n\t\t\tfunction hasOverlap(seg, path) {\n\t\t\t\tvar inter = seg && seg._intersection;\n\t\t\t\treturn inter && inter._overlap && inter._path === path;\n\t\t\t}\n\n\t\t\tvar hasOverlaps = false,\n\t\t\t\thasCrossings = false,\n\t\t\t\tintersections = this.getIntersections(null, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap() && (hasOverlaps = true) ||\n\t\t\t\t\t\t\tinter.isCrossing() && (hasCrossings = true);\n\t\t\t\t}),\n\t\t\t\tclearCurves = hasOverlaps && hasCrossings && [];\n\t\t\tintersections = CurveLocation.expand(intersections);\n\t\t\tif (hasOverlaps) {\n\t\t\t\tvar overlaps = divideLocations(intersections, function(inter) {\n\t\t\t\t\treturn inter.hasOverlap();\n\t\t\t\t}, clearCurves);\n\t\t\t\tfor (var i = overlaps.length - 1; i >= 0; i--) {\n\t\t\t\t\tvar overlap = overlaps[i],\n\t\t\t\t\t\tpath = overlap._path,\n\t\t\t\t\t\tseg = overlap._segment,\n\t\t\t\t\t\tprev = seg.getPrevious(),\n\t\t\t\t\t\tnext = seg.getNext();\n\t\t\t\t\tif (hasOverlap(prev, path) && hasOverlap(next, path)) {\n\t\t\t\t\t\tseg.remove();\n\t\t\t\t\t\tprev._handleOut._set(0, 0);\n\t\t\t\t\t\tnext._handleIn._set(0, 0);\n\t\t\t\t\t\tif (prev !== seg && !prev.getCurve().hasLength()) {\n\t\t\t\t\t\t\tnext._handleIn.set(prev._handleIn);\n\t\t\t\t\t\t\tprev.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasCrossings) {\n\t\t\t\tdivideLocations(intersections, hasOverlaps && function(inter) {\n\t\t\t\t\tvar curve1 = inter.getCurve(),\n\t\t\t\t\t\tseg1 = inter.getSegment(),\n\t\t\t\t\t\tother = inter._intersection,\n\t\t\t\t\t\tcurve2 = other._curve,\n\t\t\t\t\t\tseg2 = other._segment;\n\t\t\t\t\tif (curve1 && curve2 && curve1._path && curve2._path)\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif (seg1)\n\t\t\t\t\t\tseg1._intersection = null;\n\t\t\t\t\tif (seg2)\n\t\t\t\t\t\tseg2._intersection = null;\n\t\t\t\t}, clearCurves);\n\t\t\t\tif (clearCurves)\n\t\t\t\t\tclearCurveHandles(clearCurves);\n\t\t\t\tpaths = tracePaths(Base.each(paths, function(path) {\n\t\t\t\t\tBase.push(this, path._segments);\n\t\t\t\t}, []));\n\t\t\t}\n\t\t\tvar length = paths.length,\n\t\t\t\titem;\n\t\t\tif (length > 1 && children) {\n\t\t\t\tif (paths !== children)\n\t\t\t\t\tthis.setChildren(paths);\n\t\t\t\titem = this;\n\t\t\t} else if (length === 1 && !children) {\n\t\t\t\tif (paths[0] !== this)\n\t\t\t\t\tthis.setSegments(paths[0].removeSegments());\n\t\t\t\titem = this;\n\t\t\t}\n\t\t\tif (!item) {\n\t\t\t\titem = new CompoundPath(Item.NO_INSERT);\n\t\t\t\titem.addChildren(paths);\n\t\t\t\titem = item.reduce();\n\t\t\t\titem.copyAttributes(this);\n\t\t\t\tthis.replaceWith(item);\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\n\t\treorient: function(nonZero, clockwise) {\n\t\t\tvar children = this._children;\n\t\t\tif (children && children.length) {\n\t\t\t\tthis.setChildren(reorientPaths(this.removeChildren(),\n\t\t\t\t\t\tfunction(w) {\n\t\t\t\t\t\t\treturn !!(nonZero ? w : w & 1);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclockwise));\n\t\t\t} else if (clockwise !== undefined) {\n\t\t\t\tthis.setClockwise(clockwise);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tgetInteriorPoint: function() {\n\t\t\tvar bounds = this.getBounds(),\n\t\t\t\tpoint = bounds.getCenter(true);\n\t\t\tif (!this.contains(point)) {\n\t\t\t\tvar curves = this.getCurves(),\n\t\t\t\t\ty = point.y,\n\t\t\t\t\tintercepts = [],\n\t\t\t\t\troots = [];\n\t\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\t\tvar v = curves[i].getValues(),\n\t\t\t\t\t\to0 = v[1],\n\t\t\t\t\t\to1 = v[3],\n\t\t\t\t\t\to2 = v[5],\n\t\t\t\t\t\to3 = v[7];\n\t\t\t\t\tif (y >= min(o0, o1, o2, o3) && y <= max(o0, o1, o2, o3)) {\n\t\t\t\t\t\tvar monoCurves = Curve.getMonoCurves(v);\n\t\t\t\t\t\tfor (var j = 0, m = monoCurves.length; j < m; j++) {\n\t\t\t\t\t\t\tvar mv = monoCurves[j],\n\t\t\t\t\t\t\t\tmo0 = mv[1],\n\t\t\t\t\t\t\t\tmo3 = mv[7];\n\t\t\t\t\t\t\tif ((mo0 !== mo3) &&\n\t\t\t\t\t\t\t\t(y >= mo0 && y <= mo3 || y >= mo3 && y <= mo0)){\n\t\t\t\t\t\t\t\tvar x = y === mo0 ? mv[0]\n\t\t\t\t\t\t\t\t\t: y === mo3 ? mv[6]\n\t\t\t\t\t\t\t\t\t: Curve.solveCubic(mv, 1, y, roots, 0, 1)\n\t\t\t\t\t\t\t\t\t\t=== 1\n\t\t\t\t\t\t\t\t\t\t? Curve.getPoint(mv, roots[0]).x\n\t\t\t\t\t\t\t\t\t\t: (mv[0] + mv[6]) / 2;\n\t\t\t\t\t\t\t\tintercepts.push(x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (intercepts.length > 1) {\n\t\t\t\t\tintercepts.sort(function(a, b) { return a - b; });\n\t\t\t\t\tpoint.x = (intercepts[0] + intercepts[1]) / 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn point;\n\t\t}\n\t};\n});\n\nvar PathFlattener = Base.extend({\n\t_class: 'PathFlattener',\n\n\tinitialize: function(path, flatness, maxRecursion, ignoreStraight, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminSpan = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, t1, t2) {\n\t\t\tif ((t2 - t1) > minSpan\n\t\t\t\t\t&& !(ignoreStraight && Curve.isStraight(curve))\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, flatness || 0.25)) {\n\t\t\t\tvar halves = Curve.subdivide(curve, 0.5),\n\t\t\t\t\ttMid = (t1 + t2) / 2;\n\t\t\t\tcomputeParts(halves[0], index, t1, tMid);\n\t\t\t\tcomputeParts(halves[1], index, tMid, t2);\n\t\t\t} else {\n\t\t\t\tvar dx = curve[6] - curve[0],\n\t\t\t\t\tdy = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(dx * dx + dy * dy);\n\t\t\t\tif (dist > 0) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tcurve: curve,\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\ttime: t2,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2 || segment1, segments[0]);\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\t_get: function(offset) {\n\t\tvar parts = this.parts,\n\t\t\tlength = parts.length,\n\t\t\tstart,\n\t\t\ti, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (!j || parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (; i < length; i++) {\n\t\t\tvar part = parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = parts[i - 1],\n\t\t\t\t\tprevTime = prev && prev.index === part.index ? prev.time : 0,\n\t\t\t\t\tprevOffset = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tindex: part.index,\n\t\t\t\t\ttime: prevTime + (part.time - prevTime)\n\t\t\t\t\t\t* (offset - prevOffset) / (part.offset - prevOffset)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tindex: parts[length - 1].index,\n\t\t\ttime: 1\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tvar start = this._get(from),\n\t\t\tend = this._get(to);\n\t\tfor (var i = start.index, l = end.index; i <= l; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti === start.index ? start.time : 0,\n\t\t\t\t\ti === end.index ? end.time : 1);\n\t\t\tif (i === start.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve._evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset) {\n\t\t\tvar param = this._get(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.time);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tclosed = path._closed;\n\t\tfor (var i = 0, prev, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point;\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(prev = point.clone());\n\t\t\t}\n\t\t}\n\t\tif (closed) {\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\t\tthis.closed = closed;\n\t},\n\n\tfit: function(error) {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = null;\n\t\tif (length > 0) {\n\t\t\tsegments = [new Segment(points[0])];\n\t\t\tif (length > 1) {\n\t\t\t\tthis.fitCubic(segments, error, 0, length - 1,\n\t\t\t\t\t\tpoints[1].subtract(points[0]),\n\t\t\t\t\t\tpoints[length - 2].subtract(points[length - 1]));\n\t\t\t\tif (this.closed) {\n\t\t\t\t\tsegments.shift();\n\t\t\t\t\tsegments.pop();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(segments, error, first, last, tan1, tan2) {\n\t\tvar points = this.points;\n\t\tif (last - first === 1) {\n\t\t\tvar pt1 = points[first],\n\t\t\t\tpt2 = points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve(segments, [pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(error, error * error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < error && parametersInOrder) {\n\t\t\t\tthis.addCurve(segments, curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar tanCenter = points[split - 1].subtract(points[split + 1]);\n\t\tthis.fitCubic(segments, error, first, split, tan1, tanCenter);\n\t\tthis.fitCubic(segments, error, split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(segments, curve) {\n\t\tvar prev = segments[segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tsegments.push(new Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tabs = Math.abs,\n\t\t\tpoints = this.points,\n\t\t\tpt1 = points[first],\n\t\t\tpt2 = points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1,\n\t\t\talpha2;\n\t\tif (abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X = C[0][0] * X[1]    - C[1][0] * X[0],\n\t\t\t\tdetXC1 = X[0]    * C[1][1] - X[1]    * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\talpha1 = alpha2 = abs(c0) > epsilon ? X[0] / c0\n\t\t\t\t\t\t\t: abs(c1) > epsilon ? X[1] / c1\n\t\t\t\t\t\t\t: 0;\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1,\n\t\t\t\tpt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)),\n\t\t\t\tpt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\treturn Numerical.isMachineZero(df) ? u : u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsOptions: { stroke: false, handle: false },\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\tcopyContent: function(source) {\n\t\tthis.setContent(source._content);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(521);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx, param, viewMatrix) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx, param, viewMatrix);\n\t\tvar lines = this._lines,\n\t\t\tstyle = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(matrix, options) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar rect = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(rect, rect) : rect;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tnamedColors = {\n\t\t\ttransparent: [0, 0, 0, 0]\n\t\t},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(\n\t\t\t\t/^#([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})([\\da-f]{2})?$/i\n\t\t\t) || string.match(\n\t\t\t\t/^#([\\da-f])([\\da-f])([\\da-f])([\\da-f])?$/i\n\t\t\t),\n\t\t\ttype = 'rgb',\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tvar amount = match[4] ? 4 : 3;\n\t\t\tcomponents = new Array(amount);\n\t\t\tfor (var i = 0; i < amount; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^(rgb|hsl)a?\\((.*)\\)$/)) {\n\t\t\ttype = match[1];\n\t\t\tcomponents = match[2].trim().split(/[,\\s]+/g);\n\t\t\tvar isHSL = type === 'hsl';\n\t\t\tfor (var i = 0, l = Math.min(components.length, 4); i < l; i++) {\n\t\t\t\tvar component = components[i];\n\t\t\t\tvar value = parseFloat(component);\n\t\t\t\tif (isHSL) {\n\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\tvar unit = component.match(/([a-z]*)$/)[1];\n\t\t\t\t\t\tvalue *= ({\n\t\t\t\t\t\t\tturn: 360,\n\t\t\t\t\t\t\trad: 180 / Math.PI,\n\t\t\t\t\t\t\tgrad: 0.9\n\t\t\t\t\t\t}[unit] || 1);\n\t\t\t\t\t} else if (i < 3) {\n\t\t\t\t\t\tvalue /= 100;\n\t\t\t\t\t}\n\t\t\t\t} else if (i < 3) {\n\t\t\t\t\tvalue /= /%$/.test(component) ? 100 : 255;\n\t\t\t\t}\n\t\t\t\tcomponents[i] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar color = namedColors[string];\n\t\t\tif (!color) {\n\t\t\t\tif (window) {\n\t\t\t\t\tif (!colorCtx) {\n\t\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t\t}\n\t\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\t\tcolor = namedColors[string] = [\n\t\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\t\tdata[2] / 255\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tcolor = [0, 0, 0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponents = color.slice();\n\t\t}\n\t\treturn [type, components];\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:   ( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:            (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = type === 'gradient'\n\t\t\t\t\t? name === 'gradient'\n\t\t\t\t\t\t? function(value) {\n\t\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\t\tvalue = Gradient.read(\n\t\t\t\t\t\t\t\tArray.isArray(value)\n\t\t\t\t\t\t\t\t\t? value\n\t\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t: function(value) {\n\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : +value;\n\t\t\t\t\t};\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar args = arguments,\n\t\t\t\treading = this.__read,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (reading)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = Base.slice(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (reading) {\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = Base.slice(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\tvar converted = fromCSS(arg);\n\t\t\t\t\ttype = converted[0];\n\t\t\t\t\tcomponents = converted[1];\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && !i && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (reading && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (reading)\n\t\t\t\tthis.__read = read;\n\t\t\treturn this;\n\t\t},\n\n\t\tset: '#initialize',\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner) {\n\t\t\t\tif (this._setter) {\n\t\t\t\t\tthis._owner[this._setter](this);\n\t\t\t\t} else {\n\t\t\t\t\tthis._owner._changed(129);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this.getAlpha() === col.getAlpha()\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx, matrix) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\thighlight = components[3],\n\t\t\t\tinverse = matrix && matrix.inverted(),\n\t\t\t\tcanvasGradient;\n\t\t\tif (inverse) {\n\t\t\t\torigin = inverse._transformPoint(origin);\n\t\t\t\tdestination = inverse._transformPoint(destination);\n\t\t\t\tif (highlight)\n\t\t\t\t\thighlight = inverse._transformPoint(highlight);\n\t\t\t}\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin);\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tcanvasGradient.addColorStop(\n\t\t\t\t\t\toffset == null ? i / (l - 1) : offset,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t},\n\n\t\t\t_setOwner: function(color, owner, setter) {\n\t\t\t\tif (color) {\n\t\t\t\t\tif (color._owner && owner && color._owner !== owner) {\n\t\t\t\t\t\tcolor = color.clone();\n\t\t\t\t\t}\n\t\t\t\t\tif (!color._owner ^ !owner) {\n\t\t\t\t\t\tcolor._owner = owner || null;\n\t\t\t\t\t\tcolor._setter = setter || null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn color;\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && Base.isPlainObject(stops)) {\n\t\t\tthis.set(stops);\n\t\t\tstops = radial = null;\n\t\t}\n\t\tif (this._stops == null) {\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\t}\n\t\tif (this._radial == null) {\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t\t}\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++) {\n\t\t\tthis._owners[i]._changed();\n\t\t}\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (!this._owners.length)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tstops[i] = this._stops[i].clone();\n\t\t}\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (stops.length < 2) {\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\t}\n\t\tvar _stops = this._stops;\n\t\tif (_stops) {\n\t\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t\t_stops[i]._owner = undefined;\n\t\t}\n\t\t_stops = this._stops = GradientStop.readList(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = _stops.length; i < l; i++)\n\t\t\t_stops[i]._owner = this;\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class) {\n\t\t\tvar stops1 = this._stops,\n\t\t\t\tstops2 = gradient._stops,\n\t\t\t\tlength = stops1.length;\n\t\t\tif (length === stops2.length) {\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tif (!stops1[i].equals(stops2[i]))\n\t\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tvar color = arg0,\n\t\t\toffset = arg1;\n\t\tif (typeof arg0 === 'object' && arg1 === undefined) {\n\t\t\tif (Array.isArray(arg0) && typeof arg0[0] !== 'number') {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\toffset = arg0[1];\n\t\t\t} else if ('color' in arg0 || 'offset' in arg0\n\t\t\t\t\t|| 'rampPoint' in arg0) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\toffset = arg0.offset || arg0.rampPoint || 0;\n\t\t\t}\n\t\t}\n\t\tthis.setColor(color);\n\t\tthis.setOffset(offset);\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._offset);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar color = this._color,\n\t\t\toffset = this._offset;\n\t\treturn Base.serialize(offset == null ? [color] : [color, offset],\n\t\t\t\toptions, true, dictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(129);\n\t},\n\n\tgetOffset: function() {\n\t\treturn this._offset;\n\t},\n\n\tsetOffset: function(offset) {\n\t\tthis._offset = offset;\n\t\tthis._changed();\n\t},\n\n\tgetRampPoint: '#getOffset',\n\tsetRampPoint: '#setOffset',\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function() {\n\t\tColor._setOwner(this._color, null);\n\t\tthis._color = Color._setOwner(Color.read(arguments, 0), this,\n\t\t\t\t'setColor');\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._offset == stop._offset\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar itemDefaults = {\n\t\tfillColor: null,\n\t\tfillRule: 'nonzero',\n\t\tstrokeColor: null,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\tshadowColor: null,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: null\n\t},\n\tgroupDefaults = Base.set({}, itemDefaults, {\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tleading: null,\n\t\tjustification: 'left'\n\t}),\n\ttextDefaults = Base.set({}, groupDefaults, {\n\t\tfillColor: new Color()\n\t}),\n\tflags = {\n\t\tstrokeWidth: 193,\n\t\tstrokeCap: 193,\n\t\tstrokeJoin: 193,\n\t\tstrokeScaling: 201,\n\t\tmiterLimit: 193,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t},\n\titem = {\n\t\tbeans: true\n\t},\n\tfields = {\n\t\t_class: 'Style',\n\t\tbeans: true,\n\n\t\tinitialize: function Style(style, _owner, _project) {\n\t\t\tthis._values = {};\n\t\t\tthis._owner = _owner;\n\t\t\tthis._project = _owner && _owner._project || _project\n\t\t\t\t\t|| paper.project;\n\t\t\tthis._defaults = !_owner || _owner instanceof Group ? groupDefaults\n\t\t\t\t\t: _owner instanceof TextItem ? textDefaults\n\t\t\t\t\t: itemDefaults;\n\t\t\tif (style)\n\t\t\t\tthis.set(style);\n\t\t}\n\t};\n\n\tBase.each(groupDefaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tapplyToChildren = children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath);\n\t\t\tif (applyToChildren) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t}\n\t\t\tif ((key === 'selectedColor' || !applyToChildren)\n\t\t\t\t\t&& key in this._defaults) {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old) {\n\t\t\t\t\t\t\tColor._setOwner(old, null);\n\t\t\t\t\t\t\told._canvasStyle = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tvalue = Color._setOwner(value, owner,\n\t\t\t\t\t\t\t\t\tapplyToChildren && set);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 129);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tapplyToChildren = children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath),\n\t\t\t\tvalue;\n\t\t\tif (applyToChildren && !_dontMerge) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\t\tif (!i) {\n\t\t\t\t\t\tvalue = childValue;\n\t\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (key in this._defaults) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone) {\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (value && isColor) {\n\t\t\t\tvalue = Color._setOwner(value, owner, applyToChildren && set);\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tBase.each({\n\t\tFont: 'FontFamily',\n\t\tWindingRule: 'FillRule'\n\t}, function(value, key) {\n\t\tvar get = 'get' + key,\n\t\t\tset = 'set' + key;\n\t\tfields[get] = item[get] = '#get' + value;\n\t\tfields[set] = item[set] = '#set' + value;\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\tfunction compare(style1, style2, secondary) {\n\t\t\tvar values1 = style1._values,\n\t\t\t\tvalues2 = style2._values,\n\t\t\t\tdefaults2 = style2._defaults;\n\t\t\tfor (var key in values1) {\n\t\t\t\tvar value1 = values1[key],\n\t\t\t\t\tvalue2 = values2[key];\n\t\t\t\tif (!(secondary && key in values2) && !Base.equals(value1,\n\t\t\t\t\t\tvalue2 === undefined ? defaults2[key] : value2))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& compare(this, style)\n\t\t\t\t&& compare(style, this, true)\n\t\t\t\t|| false;\n\t},\n\n\t_dispose: function() {\n\t\tvar color;\n\t\tcolor = this.getFillColor();\n\t\tif (color) color._canvasStyle = null;\n\t\tcolor = this.getStrokeColor();\n\t\tif (color) color._canvasStyle = null;\n\t\tcolor = this.getShadowColor();\n\t\tif (color) color._canvasStyle = null;\n\t},\n\n\thasFill: function() {\n\t\tvar color = this.getFillColor();\n\t\treturn !!color && color.alpha > 0;\n\t},\n\n\thasStroke: function() {\n\t\tvar color = this.getStrokeColor();\n\t\treturn !!color && color.alpha > 0 && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\tvar color = this.getShadowColor();\n\t\treturn !!color && color.alpha > 0 && (this.getShadowBlur() > 0\n\t\t\t\t|| !this.getShadowOffset().isZero());\n\t},\n\n\tgetView: function() {\n\t\treturn this._project._view;\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tisInserted: function(el) {\n\t\t\treturn document.body.contains(el);\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn el && handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++) {\n\t\t\t\t\tvar name = parts[i];\n\t\t\t\t\tvar options = (\n\t\t\t\t\t\tel === document\n\t\t\t\t\t\t&& (name === 'touchstart' || name === 'touchmove')\n\t\t\t\t\t) ? { passive: false } : false;\n\t\t\t\t\tel.addEventListener(name, func, options);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tif (el) {\n\t\t\tfor (var type in events) {\n\t\t\t\tvar func = events[type],\n\t\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t\t}\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\ttimer;\n\n\tfunction handleCallbacks() {\n\t\tvar functions = callbacks;\n\t\tcallbacks = [];\n\t\tfor (var i = 0, l = functions.length; i < l; i++)\n\t\t\tfunctions[i]();\n\t\trequested = nativeRequest && callbacks.length;\n\t\tif (requested)\n\t\t\tnativeRequest(handleCallbacks);\n\t}\n\n\treturn function(callback) {\n\t\tcallbacks.push(callback);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t}\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t}\n\n\t\tvar size;\n\t\tif (window && element) {\n\t\t\tthis._id = element.getAttribute('id');\n\t\t\tif (this._id == null)\n\t\t\t\telement.setAttribute('id', this._id = 'paper-view-' + View._id++);\n\t\t\tDomEvent.add(element, this._viewEvents);\n\t\t\tvar none = 'none';\n\t\t\tDomElement.setPrefixed(element.style, {\n\t\t\t\tuserDrag: none,\n\t\t\t\tuserSelect: none,\n\t\t\t\ttouchCallout: none,\n\t\t\t\tcontentZooming: none,\n\t\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t\t});\n\n\t\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar that = this;\n\t\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\t\tresize: function() {\n\t\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsize = getCanvasSize();\n\n\t\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\t\tthis._stats = new Stats();\n\t\t\t\tvar stats = this._stats.domElement,\n\t\t\t\t\tstyle = stats.style,\n\t\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\t\tstyle.position = 'absolute';\n\t\t\t\tstyle.left = offset.x + 'px';\n\t\t\t\tstyle.top = offset.y + 'px';\n\t\t\t\tdocument.body.appendChild(stats);\n\t\t\t}\n\t\t} else {\n\t\t\tsize = new Size(element);\n\t\t\telement = null;\n\t\t}\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window && window.devicePixelRatio || 1;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize = size;\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t\tthis._itemEvents = { native: {}, virtual: {} };\n\t\tthis._autoUpdate = !paper.agent.node;\n\t\tthis._needsUpdate = false;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tvar project = this._project;\n\t\tif (project._view === this)\n\t\t\tproject._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(\n\t\tItem._itemHandlers.concat(['onResize', 'onKeyDown', 'onKeyUp']),\n\t\tfunction(name) {\n\t\t\tthis[name] = {};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\tgetAutoUpdate: function() {\n\t\treturn this._autoUpdate;\n\t},\n\n\tsetAutoUpdate: function(autoUpdate) {\n\t\tthis._autoUpdate = autoUpdate;\n\t\tif (autoUpdate)\n\t\t\tthis.requestUpdate();\n\t},\n\n\tupdate: function() {\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\trequestUpdate: function() {\n\t\tif (!this._requested) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\t\tthat._requested = false;\n\t\t\t\tif (that._animate) {\n\t\t\t\t\tthat.requestUpdate();\n\t\t\t\t\tvar element = that._element;\n\t\t\t\t\tif ((!DomElement.getPrefixed(document, 'hidden')\n\t\t\t\t\t\t\t|| PaperScope.getAttribute(element, 'keepalive')\n\t\t\t\t\t\t\t\t=== 'true') && DomElement.isInView(element)) {\n\t\t\t\t\t\tthat._handleFrame();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (that._autoUpdate)\n\t\t\t\t\tthat.update();\n\t\t\t});\n\t\t\tthis._requested = true;\n\t\t}\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tthis.requestUpdate();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._last ? now - this._last : 0;\n\t\tthis._last = now;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._project._changed(4097);\n\t\tthis._bounds = this._decomposed = undefined;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._setElementSize(size.width, size.height);\n\t\tthis._viewSize.set(size);\n\t\tthis._changed();\n\t\tthis.emit('resize', { size: size, delta: delta });\n\t\tif (this._autoUpdate) {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_setElementSize: function(width, height) {\n\t\tvar element = this._element;\n\t\tif (element) {\n\t\t\tif (element.width !== width)\n\t\t\t\telement.width = width;\n\t\t\tif (element.height !== height)\n\t\t\t\telement.height = height;\n\t\t}\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tisInserted: function() {\n\t\treturn DomElement.isInserted(this._element);\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixels;\n\t\tif (element) {\n\t\t\tvar parent = element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tpixels = parseFloat(pixels);\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\treturn 0;\n\t}\n}, Base.each(['rotate', 'scale', 'shear', 'skew'], function(key) {\n\tvar rotate = key === 'rotate';\n\tthis[key] = function() {\n\t\tvar args = arguments,\n\t\t\tvalue = (rotate ? Base : Point).read(args),\n\t\t\tcenter = Point.read(args, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[key](value,\n\t\t\t\tcenter || this.getCenter(true)));\n\t};\n}, {\n\t_decompose: function() {\n\t\treturn this._decomposed || (this._decomposed = this._matrix.decompose());\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.translate(this.getCenter().subtract(center));\n\t},\n\n\tgetZoom: function() {\n\t\tvar scaling = this._decompose().scaling;\n\t\treturn (scaling.x + scaling.y) / 2;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis.transform(new Matrix().scale(zoom / this.getZoom(),\n\t\t\tthis.getCenter()));\n\t},\n\n\tgetRotation: function() {\n\t\treturn this._decompose().rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tthis.rotate(rotation - current);\n\t\t}\n\t},\n\n\tgetScaling: function() {\n\t\tvar scaling = this._decompose().scaling;\n\t\treturn new LinkedPoint(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling(),\n\t\t\tscaling = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tif (current && scaling) {\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._matrix.append(matrix);\n\t},\n\n\tscrollBy: function() {\n\t\tthis.translate(Point.read(arguments).negate());\n\t}\n}), {\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tgetEventPoint: function(event) {\n\t\treturn this.viewToProject(DomEvent.getOffset(event, this._element));\n\t},\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (document && typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\tvar ctor = window ? CanvasView : View;\n\t\t\treturn new ctor(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tif (!window)\n\t\treturn;\n\tvar prevFocus,\n\t\ttempFocus,\n\t\tdragging = false,\n\t\tmouseDown = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[\n\t\t\t\ttarget.getAttribute('id')];\n\t}\n\n\tfunction updateFocus() {\n\t\tvar view = View._focused;\n\t\tif (!view || !view.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tif ((view = View._views[i]).isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, event, point) {\n\t\tview._handleMouseEvent('mousemove', event, point);\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {},\n\t\tdocEvents = {\n\t\t\tmouseout: function(event) {\n\t\t\t\tvar view = View._focused,\n\t\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\t\tif (view && (!target || target.nodeName === 'HTML')) {\n\t\t\t\t\tvar offset = DomEvent.getOffset(event, view._element),\n\t\t\t\t\t\tx = offset.x,\n\t\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\t\tax = abs(x),\n\t\t\t\t\t\tmax = 1 << 25,\n\t\t\t\t\t\tdiff = ax - max;\n\t\t\t\t\toffset.x = abs(diff) < ax ? diff * (x < 0 ? -1 : 1) : x;\n\t\t\t\t\thandleMouseMove(view, event, view.viewToProject(offset));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tscroll: updateFocus\n\t\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event);\n\t\tif (!dragging) {\n\t\t\tdragging = true;\n\t\t\tview._handleMouseEvent('mousedown', event);\n\t\t}\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!mouseDown) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target) {\n\t\t\t\t\tif (view)\n\t\t\t\t\t\thandleMouseMove(view, event);\n\t\t\t\t\tif (!prevFocus)\n\t\t\t\t\t\tprevFocus = view;\n\t\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t\t}\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tif (prevFocus && !prevFocus.isInserted())\n\t\t\t\t\tprevFocus = null;\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tprevFocus = null;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view)\n\t\t\thandleMouseMove(view, event);\n\t};\n\n\tdocEvents[mousedown] = function() {\n\t\tmouseDown = true;\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (view && dragging)\n\t\t\tview._handleMouseEvent('mouseup', event);\n\t\tmouseDown = dragging = false;\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar called = false,\n\t\tprevented = false,\n\t\tfallbacks = {\n\t\t\tdoubleclick: 'click',\n\t\t\tmousedrag: 'mousemove'\n\t\t},\n\t\twasInView = false,\n\t\toverView,\n\t\tdownPoint,\n\t\tlastPoint,\n\t\tdownItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tclickItem,\n\t\tclickTime,\n\t\tdblClick;\n\n\tfunction emitMouseEvent(obj, target, type, event, point, prevPoint,\n\t\t\tstopItem) {\n\t\tvar stopped = false,\n\t\t\tmouseEvent;\n\n\t\tfunction emit(obj, type) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point,\n\t\t\t\t\t\t\ttarget || obj,\n\t\t\t\t\t\t\tprevPoint ? point.subtract(prevPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent)) {\n\t\t\t\t\tcalled = true;\n\t\t\t\t\tif (mouseEvent.prevented)\n\t\t\t\t\t\tprevented = true;\n\t\t\t\t\tif (mouseEvent.stopped)\n\t\t\t\t\t\treturn stopped = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar fallback = fallbacks[type];\n\t\t\t\tif (fallback)\n\t\t\t\t\treturn emit(obj, fallback);\n\t\t\t}\n\t\t}\n\n\t\twhile (obj && obj !== stopItem) {\n\t\t\tif (emit(obj, type))\n\t\t\t\tbreak;\n\t\t\tobj = obj._parent;\n\t\t}\n\t\treturn stopped;\n\t}\n\n\tfunction emitMouseEvents(view, hitItem, type, event, point, prevPoint) {\n\t\tview._project.removeOn(type);\n\t\tprevented = called = false;\n\t\treturn (dragItem && emitMouseEvent(dragItem, null, type, event,\n\t\t\t\t\tpoint, prevPoint)\n\t\t\t|| hitItem && hitItem !== dragItem\n\t\t\t\t&& !hitItem.isDescendant(dragItem)\n\t\t\t\t&& emitMouseEvent(hitItem, null, type === 'mousedrag' ?\n\t\t\t\t\t'mousemove' : type, event, point, prevPoint, dragItem)\n\t\t\t|| emitMouseEvent(view, dragItem || hitItem || view, type, event,\n\t\t\t\t\tpoint, prevPoint));\n\t}\n\n\tvar itemEventsMap = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleMouseEvent: function(type, event, point) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\thitItems = itemEvents.native[type],\n\t\t\t\tnativeMove = type === 'mousemove',\n\t\t\t\ttool = this._scope.tool,\n\t\t\t\tview = this;\n\n\t\t\tfunction responds(type) {\n\t\t\t\treturn itemEvents.virtual[type] || view.responds(type)\n\t\t\t\t\t\t|| tool && tool.responds(type);\n\t\t\t}\n\n\t\t\tif (nativeMove && dragging && responds('mousedrag'))\n\t\t\t\ttype = 'mousedrag';\n\t\t\tif (!point)\n\t\t\t\tpoint = this.getEventPoint(event);\n\n\t\t\tvar inView = this.getBounds().contains(point),\n\t\t\t\thit = hitItems && inView && view._project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\thitItem = hit && hit.item || null,\n\t\t\t\thandle = false,\n\t\t\t\tmouse = {};\n\t\t\tmouse[type.substr(5)] = true;\n\n\t\t\tif (hitItems && hitItem !== overItem) {\n\t\t\t\tif (overItem) {\n\t\t\t\t\temitMouseEvent(overItem, null, 'mouseleave', event, point);\n\t\t\t\t}\n\t\t\t\tif (hitItem) {\n\t\t\t\t\temitMouseEvent(hitItem, null, 'mouseenter', event, point);\n\t\t\t\t}\n\t\t\t\toverItem = hitItem;\n\t\t\t}\n\t\t\tif (wasInView ^ inView) {\n\t\t\t\temitMouseEvent(this, null, inView ? 'mouseenter' : 'mouseleave',\n\t\t\t\t\t\tevent, point);\n\t\t\t\toverView = inView ? this : null;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tif ((inView || mouse.drag) && !point.equals(lastPoint)) {\n\t\t\t\temitMouseEvents(this, hitItem, nativeMove ? type : 'mousemove',\n\t\t\t\t\t\tevent, point, lastPoint);\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\twasInView = inView;\n\t\t\tif (mouse.down && inView || mouse.up && downPoint) {\n\t\t\t\temitMouseEvents(this, hitItem, type, event, point, downPoint);\n\t\t\t\tif (mouse.down) {\n\t\t\t\t\tdblClick = hitItem === clickItem\n\t\t\t\t\t\t&& (Date.now() - clickTime < 300);\n\t\t\t\t\tdownItem = clickItem = hitItem;\n\t\t\t\t\tif (!prevented && hitItem) {\n\t\t\t\t\t\tvar item = hitItem;\n\t\t\t\t\t\twhile (item && !item.responds('mousedrag'))\n\t\t\t\t\t\t\titem = item._parent;\n\t\t\t\t\t\tif (item)\n\t\t\t\t\t\t\tdragItem = hitItem;\n\t\t\t\t\t}\n\t\t\t\t\tdownPoint = point;\n\t\t\t\t} else if (mouse.up) {\n\t\t\t\t\tif (!prevented && hitItem === downItem) {\n\t\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\t\temitMouseEvents(this, hitItem, dblClick ? 'doubleclick'\n\t\t\t\t\t\t\t\t: 'click', event, point, downPoint);\n\t\t\t\t\t\tdblClick = false;\n\t\t\t\t\t}\n\t\t\t\t\tdownItem = dragItem = null;\n\t\t\t\t}\n\t\t\t\twasInView = false;\n\t\t\t\thandle = true;\n\t\t\t}\n\t\t\tlastPoint = point;\n\t\t\tif (handle && tool) {\n\t\t\t\tcalled = tool._handleMouseEvent(type, event, point, mouse)\n\t\t\t\t\t|| called;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tevent.cancelable !== false\n\t\t\t\t&& (called && !mouse.move || mouse.down && responds('mouseup'))\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_handleKeyEvent: function(type, event, key, character) {\n\t\t\tvar scope = this._scope,\n\t\t\t\ttool = scope.tool,\n\t\t\t\tkeyEvent;\n\n\t\t\tfunction emit(obj) {\n\t\t\t\tif (obj.responds(type)) {\n\t\t\t\t\tpaper = scope;\n\t\t\t\t\tobj.emit(type, keyEvent = keyEvent\n\t\t\t\t\t\t\t|| new KeyEvent(type, event, key, character));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isVisible()) {\n\t\t\t\temit(this);\n\t\t\t\tif (tool && tool.responds(type))\n\t\t\t\t\temit(tool);\n\t\t\t}\n\t\t},\n\n\t\t_countItemEvent: function(type, sign) {\n\t\t\tvar itemEvents = this._itemEvents,\n\t\t\t\tnative = itemEvents.native,\n\t\t\t\tvirtual = itemEvents.virtual;\n\t\t\tfor (var key in itemEventsMap) {\n\t\t\t\tnative[key] = (native[key] || 0)\n\t\t\t\t\t\t+ (itemEventsMap[key][type] || 0) * sign;\n\t\t\t}\n\t\t\tvirtual[type] = (virtual[type] || 0) + sign;\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus,\n\n\t\t\t_resetState: function() {\n\t\t\t\tdragging = mouseDown = called = wasInView = false;\n\t\t\t\tprevFocus = tempFocus = overView = downPoint = lastPoint =\n\t\t\t\t\tdownItem = overItem = dragItem = clickItem = clickTime =\n\t\t\t\t\tdblClick = null;\n\t\t\t}\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof window.HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ Base.slice(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tvar ctx = this._context = canvas.getContext('2d');\n\t\tctx.save();\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(ctx,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t\tthis._needsUpdate = true;\n\t},\n\n\tremove: function remove() {\n\t\tthis._context.restore();\n\t\treturn remove.base.call(this);\n\t},\n\n\t_setElementSize: function _setElementSize(width, height) {\n\t\tvar pixelRatio = this._pixelRatio;\n\t\t_setElementSize.base.call(this, width * pixelRatio, height * pixelRatio);\n\t\tif (pixelRatio !== 1) {\n\t\t\tvar element = this._element,\n\t\t\t\tctx = this._context;\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tctx.restore();\n\t\t\tctx.save();\n\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetContext: function() {\n\t\treturn this._context;\n\t},\n\n\tgetPixelSize: function getPixelSize(size) {\n\t\tvar agent = paper.agent,\n\t\t\tpixels;\n\t\tif (agent && agent.firefox) {\n\t\t\tpixels = getPixelSize.base.call(this, size);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function() {\n\t\tif (!this._needsUpdate)\n\t\t\treturn false;\n\t\tvar project = this._project,\n\t\t\tctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tif (project)\n\t\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tthis._needsUpdate = false;\n\t\treturn true;\n\t}\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t\tthis.type = event && event.type;\n\t},\n\n\tprevented: false,\n\tstopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.prevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.stopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetTimeStamp: function() {\n\t\treturn this.event.timeStamp;\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(type, event, key, character) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\tvar keyLookup = {\n\t\t\t'\\t': 'tab',\n\t\t\t' ': 'space',\n\t\t\t'\\b': 'backspace',\n\t\t\t'\\x7f': 'delete',\n\t\t\t'Spacebar': 'space',\n\t\t\t'Del': 'delete',\n\t\t\t'Win': 'meta',\n\t\t\t'Esc': 'escape'\n\t\t},\n\n\t\tcharLookup = {\n\t\t\t'tab': '\\t',\n\t\t\t'space': ' ',\n\t\t\t'enter': '\\r'\n\t\t},\n\n\t\tkeyMap = {},\n\t\tcharMap = {},\n\t\tmetaFixMap,\n\t\tdownKey,\n\n\t\tmodifiers = new Base({\n\t\t\tshift: false,\n\t\t\tcontrol: false,\n\t\t\talt: false,\n\t\t\tmeta: false,\n\t\t\tcapsLock: false,\n\t\t\tspace: false\n\t\t}).inject({\n\t\t\toption: {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn this.alt;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcommand: {\n\t\t\t\tget: function() {\n\t\t\t\t\tvar agent = paper && paper.agent;\n\t\t\t\t\treturn agent && agent.mac ? this.meta : this.control;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\tfunction getKey(event) {\n\t\tvar key = event.key || event.keyIdentifier;\n\t\tkey = /^U\\+/.test(key)\n\t\t\t\t? String.fromCharCode(parseInt(key.substr(2), 16))\n\t\t\t\t: /^Arrow[A-Z]/.test(key) ? key.substr(5)\n\t\t\t\t: key === 'Unidentified'  || key === undefined\n\t\t\t\t\t? String.fromCharCode(event.keyCode)\n\t\t\t\t\t: key;\n\t\treturn keyLookup[key] ||\n\t\t\t\t(key.length > 1 ? Base.hyphenate(key) : key.toLowerCase());\n\t}\n\n\tfunction handleKey(down, key, character, event) {\n\t\tvar type = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharMap[key] = character;\n\t\t} else {\n\t\t\tdelete charMap[key];\n\t\t}\n\t\tif (key.length > 1 && (name = Base.camelize(key)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar agent = paper && paper.agent;\n\t\t\tif (name === 'meta' && agent && agent.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tmetaFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var k in metaFixMap) {\n\t\t\t\t\t\tif (k in charMap)\n\t\t\t\t\t\t\thandleKey(false, k, metaFixMap[k], event);\n\t\t\t\t\t}\n\t\t\t\t\tmetaFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && metaFixMap) {\n\t\t\tmetaFixMap[key] = character;\n\t\t}\n\t\tif (view) {\n\t\t\tview._handleKeyEvent(down ? 'keydown' : 'keyup', event, key,\n\t\t\t\t\tcharacter);\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar key = getKey(event),\n\t\t\t\tagent = paper && paper.agent;\n\t\t\tif (key.length > 1 || agent && (agent.chrome && (event.altKey\n\t\t\t\t\t\t|| agent.mac && event.metaKey\n\t\t\t\t\t\t|| !agent.mac && event.ctrlKey))) {\n\t\t\t\thandleKey(true, key,\n\t\t\t\t\t\tcharLookup[key] || (key.length > 1 ? '' : key), event);\n\t\t\t} else {\n\t\t\t\tdownKey = key;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downKey) {\n\t\t\t\tvar key = getKey(event),\n\t\t\t\t\tcode = event.charCode,\n\t\t\t\t\tcharacter = code >= 32 ? String.fromCharCode(code)\n\t\t\t\t\t\t: key.length > 1 ? '' : key;\n\t\t\t\tif (key !== downKey) {\n\t\t\t\t\tkey = character.toLowerCase();\n\t\t\t\t}\n\t\t\t\thandleKey(true, key, character, event);\n\t\t\t\tdownKey = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar key = getKey(event);\n\t\t\tif (key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var key in charMap)\n\t\t\t\thandleKey(false, key, charMap[key], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn this.tool[/^mouse(down|up)$/.test(this.type)\n\t\t\t\t? '_downCount' : '_moveCount'];\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: ['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onActivate', 'onDeactivate', 'onEditOptions', 'onKeyDown',\n\t\t\t'onKeyUp'],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._moveCount = -1;\n\t\tthis._downCount = -1;\n\t\tthis.set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_handleMouseEvent: function(type, event, point, mouse) {\n\t\tpaper = this._scope;\n\t\tif (mouse.drag && !this.responds(type))\n\t\t\ttype = 'mousemove';\n\t\tvar move = mouse.move || mouse.drag,\n\t\t\tresponds = this.responds(type),\n\t\t\tminDistance = this.minDistance,\n\t\t\tmaxDistance = this.maxDistance,\n\t\t\tcalled = false,\n\t\t\ttool = this;\n\t\tfunction update(minDistance, maxDistance) {\n\t\t\tvar pt = point,\n\t\t\t\ttoolPoint = move ? tool._point : (tool._downPoint || pt);\n\t\t\tif (move) {\n\t\t\t\tif (tool._moveCount >= 0 && pt.equals(toolPoint)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (toolPoint && (minDistance != null || maxDistance != null)) {\n\t\t\t\t\tvar vector = pt.subtract(toolPoint),\n\t\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\t\tif (distance < (minDistance || 0))\n\t\t\t\t\t\treturn false;\n\t\t\t\t\tif (maxDistance) {\n\t\t\t\t\t\tpt = toolPoint.add(vector.normalize(\n\t\t\t\t\t\t\t\tMath.min(distance, maxDistance)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttool._moveCount++;\n\t\t\t}\n\t\t\ttool._point = pt;\n\t\t\ttool._lastPoint = toolPoint || pt;\n\t\t\tif (mouse.down) {\n\t\t\t\ttool._moveCount = -1;\n\t\t\t\ttool._downPoint = pt;\n\t\t\t\ttool._downCount++;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tfunction emit() {\n\t\t\tif (responds) {\n\t\t\t\tcalled = tool.emit(type, new ToolEvent(tool, type, event))\n\t\t\t\t\t\t|| called;\n\t\t\t}\n\t\t}\n\n\t\tif (mouse.down) {\n\t\t\tupdate();\n\t\t\temit();\n\t\t} else if (mouse.up) {\n\t\t\tupdate(null, maxDistance);\n\t\t\temit();\n\t\t} else if (responds) {\n\t\t\twhile (update(minDistance, maxDistance))\n\t\t\t\temit();\n\t\t}\n\t\treturn called;\n\t}\n\n});\n\nvar Tween = Base.extend(Emitter, {\n\t_class: 'Tween',\n\n\tstatics: {\n\t\teasings: {\n\t\t\tlinear: function(t) {\n\t\t\t\treturn t;\n\t\t\t},\n\n\t\t\teaseInQuad: function(t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\n\t\t\teaseOutQuad: function(t) {\n\t\t\t\treturn t * (2 - t);\n\t\t\t},\n\n\t\t\teaseInOutQuad: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 2 * t * t\n\t\t\t\t\t: -1 + 2 * (2 - t) * t;\n\t\t\t},\n\n\t\t\teaseInCubic: function(t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\n\t\t\teaseOutCubic: function(t) {\n\t\t\t\treturn --t * t * t + 1;\n\t\t\t},\n\n\t\t\teaseInOutCubic: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 4 * t * t * t\n\t\t\t\t\t: (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n\t\t\t},\n\n\t\t\teaseInQuart: function(t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\n\t\t\teaseOutQuart: function(t) {\n\t\t\t\treturn 1 - (--t) * t * t * t;\n\t\t\t},\n\n\t\t\teaseInOutQuart: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 8 * t * t * t * t\n\t\t\t\t\t: 1 - 8 * (--t) * t * t * t;\n\t\t\t},\n\n\t\t\teaseInQuint: function(t) {\n\t\t\t\treturn t * t * t * t * t;\n\t\t\t},\n\n\t\t\teaseOutQuint: function(t) {\n\t\t\t\treturn 1 + --t * t * t * t * t;\n\t\t\t},\n\n\t\t\teaseInOutQuint: function(t) {\n\t\t\t\treturn t < 0.5\n\t\t\t\t\t? 16 * t * t * t * t * t\n\t\t\t\t\t: 1 + 16 * (--t) * t * t * t * t;\n\t\t\t}\n\t\t}\n\t},\n\n\tinitialize: function Tween(object, from, to, duration, easing, start) {\n\t\tthis.object = object;\n\t\tvar type = typeof easing;\n\t\tvar isFunction = type === 'function';\n\t\tthis.type = isFunction\n\t\t\t? type\n\t\t\t: type === 'string'\n\t\t\t\t? easing\n\t\t\t\t: 'linear';\n\t\tthis.easing = isFunction ? easing : Tween.easings[this.type];\n\t\tthis.duration = duration;\n\t\tthis.running = false;\n\n\t\tthis._then = null;\n\t\tthis._startTime = null;\n\t\tvar state = from || to;\n\t\tthis._keys = state ? Object.keys(state) : [];\n\t\tthis._parsedKeys = this._parseKeys(this._keys);\n\t\tthis._from = state && this._getState(from);\n\t\tthis._to = state && this._getState(to);\n\t\tif (start !== false) {\n\t\t\tthis.start();\n\t\t}\n\t},\n\n\tthen: function(then) {\n\t\tthis._then = then;\n\t\treturn this;\n\t},\n\n\tstart: function() {\n\t\tthis._startTime = null;\n\t\tthis.running = true;\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\tthis.running = false;\n\t\treturn this;\n\t},\n\n\tupdate: function(progress) {\n\t\tif (this.running) {\n\t\t\tif (progress > 1) {\n\t\t\t\tprogress = 1;\n\t\t\t\tthis.running = false;\n\t\t\t}\n\n\t\t\tvar factor = this.easing(progress),\n\t\t\t\tkeys = this._keys,\n\t\t\t\tgetValue = function(value) {\n\t\t\t\t\treturn typeof value === 'function'\n\t\t\t\t\t\t? value(factor, progress)\n\t\t\t\t\t\t: value;\n\t\t\t\t};\n\t\t\tfor (var i = 0, l = keys && keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i],\n\t\t\t\t\tfrom = getValue(this._from[key]),\n\t\t\t\t\tto = getValue(this._to[key]),\n\t\t\t\t\tvalue = (from && to && from.__add && to.__add)\n\t\t\t\t\t\t? to.__subtract(from).__multiply(factor).__add(from)\n\t\t\t\t\t\t: ((to - from) * factor) + from;\n\t\t\t\tthis._setProperty(this._parsedKeys[key], value);\n\t\t\t}\n\n\t\t\tif (!this.running && this._then) {\n\t\t\t\tthis._then(this.object);\n\t\t\t}\n\t\t\tif (this.responds('update')) {\n\t\t\t\tthis.emit('update', new Base({\n\t\t\t\t\tprogress: progress,\n\t\t\t\t\tfactor: factor\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\t_events: {\n\t\tonUpdate: {}\n\t},\n\n\t_handleFrame: function(time) {\n\t\tvar startTime = this._startTime,\n\t\t\tprogress = startTime\n\t\t\t\t? (time - startTime) / this.duration\n\t\t\t\t: 0;\n\t\tif (!startTime) {\n\t\t\tthis._startTime = time;\n\t\t}\n\t\tthis.update(progress);\n\t},\n\n\t_getState: function(state) {\n\t\tvar keys = this._keys,\n\t\t\tresult = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i],\n\t\t\t\tpath = this._parsedKeys[key],\n\t\t\t\tcurrent = this._getProperty(path),\n\t\t\t\tvalue;\n\t\t\tif (state) {\n\t\t\t\tvar resolved = this._resolveValue(current, state[key]);\n\t\t\t\tthis._setProperty(path, resolved);\n\t\t\t\tvalue = this._getProperty(path);\n\t\t\t\tvalue = value && value.clone ? value.clone() : value;\n\t\t\t\tthis._setProperty(path, current);\n\t\t\t} else {\n\t\t\t\tvalue = current && current.clone ? current.clone() : current;\n\t\t\t}\n\t\t\tresult[key] = value;\n\t\t}\n\t\treturn result;\n\t},\n\n\t_resolveValue: function(current, value) {\n\t\tif (value) {\n\t\t\tif (Array.isArray(value) && value.length === 2) {\n\t\t\t\tvar operator = value[0];\n\t\t\t\treturn (\n\t\t\t\t\toperator &&\n\t\t\t\t\toperator.match &&\n\t\t\t\t\toperator.match(/^[+\\-\\*\\/]=/)\n\t\t\t\t)\n\t\t\t\t\t? this._calculate(current, operator[0], value[1])\n\t\t\t\t\t: value;\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tvar match = value.match(/^[+\\-*/]=(.*)/);\n\t\t\t\tif (match) {\n\t\t\t\t\tvar parsed = JSON.parse(match[1].replace(\n\t\t\t\t\t\t/(['\"])?([a-zA-Z0-9_]+)(['\"])?:/g,\n\t\t\t\t\t\t'\"$2\": '\n\t\t\t\t\t));\n\t\t\t\t\treturn this._calculate(current, value[0], parsed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t},\n\n\t_calculate: function(left, operator, right) {\n\t\treturn paper.PaperScript.calculateBinary(left, operator, right);\n\t},\n\n\t_parseKeys: function(keys) {\n\t\tvar parsed = {};\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i],\n\t\t\t\tpath = key\n\t\t\t\t\t.replace(/\\.([^.]*)/g, '/$1')\n\t\t\t\t\t.replace(/\\[['\"]?([^'\"\\]]*)['\"]?\\]/g, '/$1');\n\t\t\tparsed[key] = path.split('/');\n\t\t}\n\t\treturn parsed;\n\t},\n\n\t_getProperty: function(path, offset) {\n\t\tvar obj = this.object;\n\t\tfor (var i = 0, l = path.length - (offset || 0); i < l && obj; i++) {\n\t\t\tobj = obj[path[i]];\n\t\t}\n\t\treturn obj;\n\t},\n\n\t_setProperty: function(path, value) {\n\t\tvar dest = this._getProperty(path, 1);\n\t\tif (dest) {\n\t\t\tdest[path[path.length - 1]] = value;\n\t\t}\n\t}\n});\n\nvar Http = {\n\trequest: function(options) {\n\t\tvar xhr = new self.XMLHttpRequest();\n\t\txhr.open((options.method || 'get').toUpperCase(), options.url,\n\t\t\t\tBase.pick(options.async, true));\n\t\tif (options.mimeType)\n\t\t\txhr.overrideMimeType(options.mimeType);\n\t\txhr.onload = function() {\n\t\t\tvar status = xhr.status;\n\t\t\tif (status === 0 || status === 200) {\n\t\t\t\tif (options.onLoad) {\n\t\t\t\t\toptions.onLoad.call(xhr, xhr.responseText);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\txhr.onerror();\n\t\t\t}\n\t\t};\n\t\txhr.onerror = function() {\n\t\t\tvar status = xhr.status,\n\t\t\t\tmessage = 'Could not load \"' + options.url + '\" (Status: '\n\t\t\t\t\t\t+ status + ')';\n\t\t\tif (options.onError) {\n\t\t\t\toptions.onError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tif (!window)\n\t\t\treturn null;\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t\tclear = false;\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (!ctx) {\n\t\t\tthrow new Error('Canvas ' + canvas +\n\t\t\t\t\t' is unable to provide a 2D context.');\n\t\t}\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\tvar canvas = this.getCanvas(width, height);\n\t\treturn canvas ? canvas.getContext('2d') : null;\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj && obj.canvas ? obj.canvas : obj;\n\t\tif (canvas && canvas.getContext) {\n\t\t\tcanvas.getContext('2d').restore();\n\t\t\tthis.canvases.push(canvas);\n\t\t}\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tif (ctx) {\n\t\tBase.each(modes, function(func, mode) {\n\t\t\tvar darken = mode === 'darken',\n\t\t\t\tok = false;\n\t\t\tctx.save();\n\t\t\ttry {\n\t\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tctx.globalCompositeOperation = mode;\n\t\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken\n\t\t\t\t\t\t\t? 170 : 51;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t\tctx.restore();\n\t\t\tnativeModes[mode] = ok;\n\t\t});\n\t\tCanvasProvider.release(ctx);\n\t}\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SvgElement = new function() {\n\tvar svg = 'http://www.w3.org/2000/svg',\n\t\txmlns = 'http://www.w3.org/2000/xmlns',\n\t\txlink = 'http://www.w3.org/1999/xlink',\n\t\tattributeNamespace = {\n\t\t\thref: xlink,\n\t\t\txlink: xmlns,\n\t\t\txmlns: xmlns + '/',\n\t\t\t'xmlns:xlink': xmlns + '/'\n\t\t};\n\n\tfunction create(tag, attributes, formatter) {\n\t\treturn set(document.createElementNS(svg, tag), attributes, formatter);\n\t}\n\n\tfunction get(node, name) {\n\t\tvar namespace = attributeNamespace[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\treturn value === 'null' ? null : value;\n\t}\n\n\tfunction set(node, attributes, formatter) {\n\t\tfor (var name in attributes) {\n\t\t\tvar value = attributes[name],\n\t\t\t\tnamespace = attributeNamespace[name];\n\t\t\tif (typeof value === 'number' && formatter)\n\t\t\t\tvalue = formatter.number(value);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, name, value);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(name, value);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\treturn {\n\t\tsvg: svg,\n\t\txmlns: xmlns,\n\t\txlink: xlink,\n\n\t\tcreate: create,\n\t\tget: get,\n\t\tset: set\n\t};\n};\n\nvar SvgStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tfillRule: ['fill-rule', 'string'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'style']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nnew function() {\n\tvar formatter;\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tvar point;\n\t\t\tif (matrix.isInvertible()) {\n\t\t\t\tmatrix = matrix._shiftless();\n\t\t\t\tpoint = matrix._inverseTransform(trans);\n\t\t\t\ttrans = null;\n\t\t\t} else {\n\t\t\t\tpoint = new Point();\n\t\t\t}\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling,\n\t\t\t\t\tskew = decomposed.skewing;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (skew.x)\n\t\t\t\t\tparts.push('skewX(' + formatter.number(skew.x) + ')');\n\t\t\t\tif (skew.y)\n\t\t\t\t\tparts.push('skewY(' + formatter.number(skew.y) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = SvgElement.create('g', attrs, formatter);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = SvgElement.create('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tSvgElement.set(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages == false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn SvgElement.create('image', attrs, formatter);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\tlength = segments.length,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (matchShapes && length >= 2 && !item.hasHandles()) {\n\t\t\tif (length > 2) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\t}\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar start = segments[0]._point,\n\t\t\t\t\tend = segments[1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: start.x,\n\t\t\t\t\ty1: start.y,\n\t\t\t\t\tx2: end.x,\n\t\t\t\t\ty2: end.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn SvgElement.create(type, attrs, formatter);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn SvgElement.create('path', attrs, formatter);\n\t}\n\n\tfunction exportSymbolItem(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tdefinition = item._definition,\n\t\t\tnode = getDefinition(definition, 'symbol'),\n\t\t\tdefinitionItem = definition._item,\n\t\t\tbounds = definitionItem.getStrokeBounds();\n\t\tif (!node) {\n\t\t\tnode = SvgElement.create('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tnode.appendChild(exportSVG(definitionItem, options));\n\t\t\tsetDefinition(definition, node, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + node.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = bounds.width;\n\t\tattrs.height = bounds.height;\n\t\tattrs.overflow = 'visible';\n\t\treturn SvgElement.create('use', attrs, formatter);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin(),\n\t\t\t\tdestination = color.getDestination(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = SvgElement.create((radial ? 'radial' : 'linear')\n\t\t\t\t\t+ 'Gradient', attrs, formatter);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha(),\n\t\t\t\t\toffset = stop._offset;\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: offset == null ? i / (l - 1) : offset\n\t\t\t\t};\n\t\t\t\tif (stopColor)\n\t\t\t\t\tattrs['stop-color'] = stopColor.toCSS(true);\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(\n\t\t\t\t\t\tSvgElement.create('stop', attrs, formatter));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = SvgElement.create('text', getTransform(item._matrix, true),\n\t\t\t\tformatter);\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tSymbolItem: exportSymbolItem,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent(),\n\t\t\tstyle = [];\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SvgStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tif (type === 'style') {\n\t\t\t\t\tstyle.push(entry.attribute + ': ' + value);\n\t\t\t\t} else {\n\t\t\t\t\tattrs[entry.attribute] = value == null ? 'none'\n\t\t\t\t\t\t\t: type === 'color' ? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array' ? value.join(',')\n\t\t\t\t\t\t\t: type === 'lookup' ? entry.toSVG[value]\n\t\t\t\t\t\t\t: value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (style.length)\n\t\t\tattrs.style = style.join(';');\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn SvgElement.set(node, attrs, formatter);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-'\n\t\t\t\t+ (item._id || item.__id || (item.__id = UID.get('svg')))];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar typeId = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + typeId;\n\t\tdefinitions.svgs[type + '-' + (item._id || item.__id)] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = SvgElement.create('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(SvgElement.create('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new self.XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar children = this._children,\n\t\t\t\tview = this.getView(),\n\t\t\t\tbounds = Base.pick(options.bounds, 'view'),\n\t\t\t\tmx = options.matrix || bounds === 'view' && view._matrix,\n\t\t\t\tmatrix = mx && Matrix.read([mx]),\n\t\t\t\trect = bounds === 'view'\n\t\t\t\t\t? new Rectangle([0, 0], view.getViewSize())\n\t\t\t\t\t: bounds === 'content'\n\t\t\t\t\t\t? Item._getBounds(children, matrix, { stroke: true })\n\t\t\t\t\t\t\t.rect\n\t\t\t\t\t\t: Rectangle.read([bounds], 0, { readNull: true }),\n\t\t\t\tattrs = {\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: SvgElement.svg,\n\t\t\t\t\t'xmlns:xlink': SvgElement.xlink,\n\t\t\t\t};\n\t\t\tif (rect) {\n\t\t\t\tattrs.width = rect.width;\n\t\t\t\tattrs.height = rect.height;\n\t\t\t\tif (rect.x || rect.x === 0 || rect.y || rect.y === 0)\n\t\t\t\t\tattrs.viewBox = formatter.rectangle(rect);\n\t\t\t}\n\t\t\tvar node = SvgElement.create('svg', attrs, formatter),\n\t\t\t\tparent = node;\n\t\t\tif (matrix && !matrix.isIdentity()) {\n\t\t\t\tparent = node.appendChild(SvgElement.create('g',\n\t\t\t\t\t\tgetTransform(matrix), formatter));\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tparent.appendChild(exportSVG(children[i], options, true));\n\t\t\t}\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tvar definitions = {},\n\t\trootSize;\n\n\tfunction getValue(node, name, isString, allowNull, allowPercent,\n\t\t\tdefaultValue) {\n\t\tvar value = SvgElement.get(node, name) || defaultValue,\n\t\t\tres = value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString ? '' : 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t\treturn /%\\s*$/.test(value)\n\t\t\t? (res / 100) * (allowPercent ? 1\n\t\t\t\t: rootSize[/x|^width/.test(name) ? 'width' : 'height'])\n\t\t\t: res;\n\t}\n\n\tfunction getPoint(node, x, y, allowNull, allowPercent, defaultX, defaultY) {\n\t\tx = getValue(node, x || 'x', false, allowNull, allowPercent, defaultX);\n\t\ty = getValue(node, y || 'y', false, allowNull, allowPercent, defaultY);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull, allowPercent) {\n\t\tw = getValue(node, w || 'width', false, allowNull, allowPercent);\n\t\th = getValue(node, h || 'height', false, allowNull, allowPercent);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none' ? null\n\t\t\t\t: type === 'number' ? parseFloat(value)\n\t\t\t\t: type === 'array' ?\n\t\t\t\t\tvalue ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t: type === 'color' ? getDefinition(value) || value\n\t\t\t\t: type === 'lookup' ? lookup[value]\n\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\tisDefs = type === 'defs',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip && !isDefs) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportNode(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& !/^defs$/i.test(childNode.nodeName)\n\t\t\t\t\t&& (child = importNode(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof SymbolDefinition))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || isDefs) {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\treturn PathItem.create(node.getAttribute('d'));\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tradial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t\tif (gradient._radial ^ radial) {\n\t\t\t\tgradient = gradient.clone();\n\t\t\t\tgradient._radial = radial;\n\t\t\t}\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, radial);\n\t\t}\n\t\tvar origin, destination, highlight,\n\t\t\tscaleToBounds = getValue(node, 'gradientUnits', true) !==\n\t\t\t\t'userSpaceOnUse';\n\t\tif (radial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy', false, scaleToBounds,\n\t\t\t\t'50%', '50%');\n\t\t\tdestination = origin.add(\n\t\t\t\tgetValue(node, 'r', false, false, scaleToBounds, '50%'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true, scaleToBounds);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1', false, scaleToBounds,\n\t\t\t\t'0%', '0%');\n\t\t\tdestination = getPoint(node, 'x2', 'y2', false, scaleToBounds,\n\t\t\t\t'100%', '0%');\n\t\t}\n\t\tvar color = applyAttributes(\n\t\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\tcolor._scaleToBounds = scaleToBounds;\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\treturn importNode(child, options, isRoot);\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node);\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = getPoint(node).add(size.divide(2));\n\t\t\t\tthis._matrix.append(new Matrix().translate(center));\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new SymbolDefinition(\n\t\t\t\t\timportGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node);\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof SymbolDefinition\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(\n\t\t\t\t\tgetPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\treturn new Shape.Rectangle(new Rectangle(\n\t\t\t\t\t\tgetPoint(node),\n\t\t\t\t\t\tgetSize(node)\n\t\t\t\t\t), getSize(node, 'rx', 'ry'));\n\t\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(\n\t\t\t\t\tgetPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node).add(\n\t\t\t\t\tgetPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t},\n\n\t\tswitch: importGroup\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tif (item.transform) {\n\t\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\t\tmatrix = new Matrix();\n\t\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\t\tvar transform = transforms[i];\n\t\t\t\tif (!transform)\n\t\t\t\t\tbreak;\n\t\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\t\tcommand = parts[0],\n\t\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\t\tswitch (command) {\n\t\t\t\tcase 'matrix':\n\t\t\t\t\tmatrix.append(\n\t\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'rotate':\n\t\t\t\t\tmatrix.rotate(v[0], v[1] || 0, v[2] || 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'translate':\n\t\t\t\t\tmatrix.translate(v[0], v[1] || 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'scale':\n\t\t\t\t\tmatrix.scale(v);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewX':\n\t\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'skewY':\n\t\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\titem.transform(matrix);\n\t\t}\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar key = name === 'fill-opacity' ? 'getFillColor' : 'getStrokeColor',\n\t\t\tcolor = item[key] && item[key]();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SvgStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\tif (item[entry.set]) {\n\t\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\t\tif (entry.type === 'color') {\n\t\t\t\t\tvar color = item[entry.get]();\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tif (color._scaleToBounds) {\n\t\t\t\t\t\t\tvar bounds = item.getBounds();\n\t\t\t\t\t\t\tcolor.transform(new Matrix()\n\t\t\t\t\t\t\t\t.translate(bounds.getPoint())\n\t\t\t\t\t\t\t\t.scale(bounds.getSize()));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\tif (item.setVisible)\n\t\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tif (item.setOffset) {\n\t\t\t\tvar percent = value.match(/(.*)%$/);\n\t\t\t\titem.setOffset(percent ? percent[1] / 100 : parseFloat(value));\n\t\t\t}\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, null, null, true),\n\t\t\t\tgroup,\n\t\t\t\tmatrix;\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? size.divide(rect.getSize()) : 1,\n\t\t\t\tmatrix = new Matrix().scale(scale)\n\t\t\t\t\t\t.translate(rect.getPoint().negate());\n\t\t\t\tgroup = item;\n\t\t\t} else if (item instanceof SymbolDefinition) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tgroup = item._item;\n\t\t\t}\n\t\t\tif (group)  {\n\t\t\t\tif (getAttribute(node, 'overflow', styles) !== 'visible') {\n\t\t\t\t\tvar clip = new Shape.Rectangle(rect);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t\tif (matrix)\n\t\t\t\t\tgroup.transform(matrix);\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value && node.style) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value ? undefined\n\t\t\t\t: value === 'none' ? null\n\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar parent = node.parentNode,\n\t\t\tstyles = {\n\t\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\t\tparent: !isRoot && !/^defs$/i.test(parent.tagName)\n\t\t\t\t\t\t&& DomElement.getStyles(parent) || {}\n\t\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\titem = value !== undefined\n\t\t\t\t\t&& apply(item, value, name, node, styles) || item;\n\t\t});\n\t\treturn item;\n\t}\n\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:[\"'#]*)([^\"')]+)/),\n\t\t\tname = match && match[1],\n\t\t\tres = name && definitions[window\n\t\t\t\t\t? name.replace(window.location.href.split('#')[0] + '#', '')\n\t\t\t\t\t: name];\n\t\tif (res && res._scaleToBounds) {\n\t\t\tres = res.clone();\n\t\t\tres._scaleToBounds = true;\n\t\t}\n\t\treturn res;\n\t}\n\n\tfunction importNode(node, options, isRoot) {\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\tisElement = type !== '#document',\n\t\t\tbody = document.body,\n\t\t\tcontainer,\n\t\t\tparent,\n\t\t\tnext;\n\t\tif (isRoot && isElement) {\n\t\t\trootSize = paper.getView().getSize();\n\t\t\trootSize = getSize(node, null, null, true) || rootSize;\n\t\t\tcontainer = SvgElement.create('svg', {\n\t\t\t\tstyle: 'stroke-width: 1px; stroke-miterlimit: 10'\n\t\t\t});\n\t\t\tparent = node.parentNode;\n\t\t\tnext = node.nextSibling;\n\t\t\tcontainer.appendChild(node);\n\t\t\tbody.appendChild(container);\n\t\t}\n\t\tvar settings = paper.settings,\n\t\t\tapplyMatrix = settings.applyMatrix,\n\t\t\tinsertItems = settings.insertItems;\n\t\tsettings.applyMatrix = false;\n\t\tsettings.insertItems = false;\n\t\tvar importer = importers[type],\n\t\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.insertItems = insertItems;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (isElement && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport,\n\t\t\t\tdata = isElement && node.getAttribute('data-paper-data');\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (container) {\n\t\t\tbody.removeChild(container);\n\t\t\tif (parent) {\n\t\t\t\tif (next) {\n\t\t\t\t\tparent.insertBefore(node, next);\n\t\t\t\t} else {\n\t\t\t\t\tparent.appendChild(node);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importSVG(source, options, owner) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\toptions = typeof options === 'function' ? { onLoad: options }\n\t\t\t\t: options || {};\n\t\tvar scope = paper,\n\t\t\titem = null;\n\n\t\tfunction onLoad(svg) {\n\t\t\ttry {\n\t\t\t\tvar node = typeof svg === 'object'\n\t\t\t\t\t? svg\n\t\t\t\t\t: new self.DOMParser().parseFromString(\n\t\t\t\t\t\tsvg,\n\t\t\t\t\t\t'image/svg+xml'\n\t\t\t\t\t);\n\t\t\t\tif (!node.nodeName) {\n\t\t\t\t\tnode = null;\n\t\t\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\t\t\t}\n\t\t\t\tpaper = scope;\n\t\t\t\titem = importNode(node, options, true);\n\t\t\t\tif (!options || options.insert !== false) {\n\t\t\t\t\towner._insertItem(undefined, item);\n\t\t\t\t}\n\t\t\t\tvar onLoad = options.onLoad;\n\t\t\t\tif (onLoad)\n\t\t\t\t\tonLoad(item, svg);\n\t\t\t} catch (e) {\n\t\t\t\tonError(e);\n\t\t\t}\n\t\t}\n\n\t\tfunction onError(message, status) {\n\t\t\tvar onError = options.onError;\n\t\t\tif (onError) {\n\t\t\t\tonError(message, status);\n\t\t\t} else {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string' && !/^[\\s\\S]*</.test(source)) {\n\t\t\tvar node = document.getElementById(source);\n\t\t\tif (node) {\n\t\t\t\tonLoad(node);\n\t\t\t} else {\n\t\t\t\tHttp.request({\n\t\t\t\t\turl: source,\n\t\t\t\t\tasync: true,\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = function() {\n\t\t\t\tonLoad(reader.result);\n\t\t\t};\n\t\t\treader.onerror = function() {\n\t\t\t\tonError(reader.error);\n\t\t\t};\n\t\t\treturn reader.readAsText(source);\n\t\t} else {\n\t\t\tonLoad(source);\n\t\t}\n\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, this);\n\t\t}\n\t});\n};\n\nvar paper = new (PaperScope.inject(Base.exports, {\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key,\n\tDomEvent: DomEvent,\n\tDomElement: DomElement,\n\tdocument: document,\n\twindow: window,\n\tSymbol: SymbolDefinition,\n\tPlacedSymbol: SymbolItem\n}))();\n\nif (paper.agent.node) {\n\trequire('./node/extend.js')(paper);\n}\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n}.call(this, typeof self === 'object' ? self : null);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}